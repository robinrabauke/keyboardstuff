   1               		.file	"rgblight.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.rgblight_effect_dummy,"ax",@progbits
  12               	rgblight_effect_dummy:
  13               	.LVL0:
  14               	.LFB154:
  15               		.file 1 "quantum/rgblight.c"
   1:quantum/rgblight.c **** /* Copyright 2016-2017 Yang Liu
   2:quantum/rgblight.c ****  *
   3:quantum/rgblight.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/rgblight.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/rgblight.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/rgblight.c ****  * (at your option) any later version.
   7:quantum/rgblight.c ****  *
   8:quantum/rgblight.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/rgblight.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/rgblight.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/rgblight.c ****  * GNU General Public License for more details.
  12:quantum/rgblight.c ****  *
  13:quantum/rgblight.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/rgblight.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/rgblight.c ****  */
  16:quantum/rgblight.c **** #include <math.h>
  17:quantum/rgblight.c **** #include <string.h>
  18:quantum/rgblight.c **** #ifdef __AVR__
  19:quantum/rgblight.c ****   #include <avr/eeprom.h>
  20:quantum/rgblight.c ****   #include <avr/interrupt.h>
  21:quantum/rgblight.c **** #endif
  22:quantum/rgblight.c **** #ifdef STM32_EEPROM_ENABLE
  23:quantum/rgblight.c ****   #include "hal.h"
  24:quantum/rgblight.c ****   #include "eeprom.h"
  25:quantum/rgblight.c ****   #include "eeprom_stm32.h"
  26:quantum/rgblight.c **** #endif
  27:quantum/rgblight.c **** #include "wait.h"
  28:quantum/rgblight.c **** #include "progmem.h"
  29:quantum/rgblight.c **** #include "timer.h"
  30:quantum/rgblight.c **** #include "rgblight.h"
  31:quantum/rgblight.c **** #include "color.h"
  32:quantum/rgblight.c **** #include "debug.h"
  33:quantum/rgblight.c **** #include "led_tables.h"
  34:quantum/rgblight.c **** #include "lib/lib8tion/lib8tion.h"
  35:quantum/rgblight.c **** #ifdef VELOCIKEY_ENABLE
  36:quantum/rgblight.c ****   #include "velocikey.h"
  37:quantum/rgblight.c **** #endif
  38:quantum/rgblight.c **** 
  39:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
  40:quantum/rgblight.c ****   /* for split keyboard */
  41:quantum/rgblight.c ****   #define RGBLIGHT_SPLIT_SET_CHANGE_MODE         rgblight_status.change_flags |= RGBLIGHT_STATUS_CH
  42:quantum/rgblight.c ****   #define RGBLIGHT_SPLIT_SET_CHANGE_HSVS         rgblight_status.change_flags |= RGBLIGHT_STATUS_CH
  43:quantum/rgblight.c ****   #define RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS     rgblight_status.change_flags |= (RGBLIGHT_STATUS_C
  44:quantum/rgblight.c ****   #define RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE rgblight_status.change_flags |= RGBLIGHT_STATUS_CH
  45:quantum/rgblight.c ****   #define RGBLIGHT_SPLIT_ANIMATION_TICK          rgblight_status.change_flags |= RGBLIGHT_STATUS_AN
  46:quantum/rgblight.c **** #else
  47:quantum/rgblight.c ****   #define RGBLIGHT_SPLIT_SET_CHANGE_MODE
  48:quantum/rgblight.c ****   #define RGBLIGHT_SPLIT_SET_CHANGE_HSVS
  49:quantum/rgblight.c ****   #define RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS
  50:quantum/rgblight.c ****   #define RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE
  51:quantum/rgblight.c ****   #define RGBLIGHT_SPLIT_ANIMATION_TICK
  52:quantum/rgblight.c **** #endif
  53:quantum/rgblight.c **** 
  54:quantum/rgblight.c **** #define _RGBM_SINGLE_STATIC(sym)   RGBLIGHT_MODE_ ## sym,
  55:quantum/rgblight.c **** #define _RGBM_SINGLE_DYNAMIC(sym)
  56:quantum/rgblight.c **** #define _RGBM_MULTI_STATIC(sym)    RGBLIGHT_MODE_ ## sym,
  57:quantum/rgblight.c **** #define _RGBM_MULTI_DYNAMIC(sym)
  58:quantum/rgblight.c **** #define _RGBM_TMP_STATIC(sym, msym)      RGBLIGHT_MODE_ ## sym,
  59:quantum/rgblight.c **** #define _RGBM_TMP_DYNAMIC(sym, msym)
  60:quantum/rgblight.c **** static uint8_t static_effect_table [] = {
  61:quantum/rgblight.c **** #include "rgblight_modes.h"
  62:quantum/rgblight.c **** };
  63:quantum/rgblight.c **** 
  64:quantum/rgblight.c **** #define _RGBM_SINGLE_STATIC(sym)   RGBLIGHT_MODE_ ## sym,
  65:quantum/rgblight.c **** #define _RGBM_SINGLE_DYNAMIC(sym)  RGBLIGHT_MODE_ ## sym,
  66:quantum/rgblight.c **** #define _RGBM_MULTI_STATIC(sym)    RGBLIGHT_MODE_ ## sym,
  67:quantum/rgblight.c **** #define _RGBM_MULTI_DYNAMIC(sym)   RGBLIGHT_MODE_ ## sym,
  68:quantum/rgblight.c **** #define _RGBM_TMP_STATIC(sym, msym)  RGBLIGHT_MODE_ ## msym,
  69:quantum/rgblight.c **** #define _RGBM_TMP_DYNAMIC(sym, msym) RGBLIGHT_MODE_ ## msym,
  70:quantum/rgblight.c **** static uint8_t mode_base_table [] = {
  71:quantum/rgblight.c ****     0, // RGBLIGHT_MODE_zero
  72:quantum/rgblight.c **** #include "rgblight_modes.h"
  73:quantum/rgblight.c **** };
  74:quantum/rgblight.c **** 
  75:quantum/rgblight.c **** static inline int is_static_effect(uint8_t mode) {
  76:quantum/rgblight.c ****     return memchr(static_effect_table, mode, sizeof(static_effect_table)) != NULL;
  77:quantum/rgblight.c **** }
  78:quantum/rgblight.c **** 
  79:quantum/rgblight.c **** #ifdef RGBLIGHT_LED_MAP
  80:quantum/rgblight.c **** const uint8_t led_map[] PROGMEM = RGBLIGHT_LED_MAP;
  81:quantum/rgblight.c **** #endif
  82:quantum/rgblight.c **** 
  83:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_STATIC_GRADIENT
  84:quantum/rgblight.c **** __attribute__ ((weak))
  85:quantum/rgblight.c **** const uint8_t RGBLED_GRADIENT_RANGES[] PROGMEM = {255, 170, 127, 85, 64};
  86:quantum/rgblight.c **** #endif
  87:quantum/rgblight.c **** 
  88:quantum/rgblight.c **** rgblight_config_t rgblight_config;
  89:quantum/rgblight.c **** rgblight_status_t rgblight_status = { .timer_enabled = false };
  90:quantum/rgblight.c **** bool is_rgblight_initialized = false;
  91:quantum/rgblight.c **** 
  92:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
  93:quantum/rgblight.c **** animation_status_t animation_status = {};
  94:quantum/rgblight.c **** #endif
  95:quantum/rgblight.c **** 
  96:quantum/rgblight.c **** #ifndef LED_ARRAY
  97:quantum/rgblight.c **** LED_TYPE led[RGBLED_NUM];
  98:quantum/rgblight.c ****   #define LED_ARRAY led
  99:quantum/rgblight.c **** #endif
 100:quantum/rgblight.c **** 
 101:quantum/rgblight.c **** 
 102:quantum/rgblight.c **** static uint8_t clipping_start_pos = 0;
 103:quantum/rgblight.c **** static uint8_t clipping_num_leds = RGBLED_NUM;
 104:quantum/rgblight.c **** static uint8_t effect_start_pos = 0;
 105:quantum/rgblight.c **** static uint8_t effect_end_pos = RGBLED_NUM;
 106:quantum/rgblight.c **** static uint8_t effect_num_leds = RGBLED_NUM;
 107:quantum/rgblight.c **** 
 108:quantum/rgblight.c **** void rgblight_set_clipping_range(uint8_t start_pos, uint8_t num_leds) {
 109:quantum/rgblight.c ****   clipping_start_pos = start_pos;
 110:quantum/rgblight.c ****   clipping_num_leds = num_leds;
 111:quantum/rgblight.c **** }
 112:quantum/rgblight.c **** 
 113:quantum/rgblight.c **** void rgblight_set_effect_range(uint8_t start_pos, uint8_t num_leds) {
 114:quantum/rgblight.c ****   if (start_pos >= RGBLED_NUM) return;
 115:quantum/rgblight.c ****   if (start_pos + num_leds > RGBLED_NUM) return;
 116:quantum/rgblight.c ****   effect_start_pos = start_pos;
 117:quantum/rgblight.c ****   effect_end_pos = start_pos + num_leds;
 118:quantum/rgblight.c ****   effect_num_leds = num_leds;
 119:quantum/rgblight.c **** }
 120:quantum/rgblight.c **** 
 121:quantum/rgblight.c **** void sethsv_raw(uint8_t hue, uint8_t sat, uint8_t val, LED_TYPE *led1) {
 122:quantum/rgblight.c ****   HSV hsv = { hue, sat, val };
 123:quantum/rgblight.c ****   RGB rgb = hsv_to_rgb(hsv);
 124:quantum/rgblight.c ****   setrgb(rgb.r, rgb.g, rgb.b, led1);
 125:quantum/rgblight.c **** }
 126:quantum/rgblight.c **** 
 127:quantum/rgblight.c **** void sethsv(uint8_t hue, uint8_t sat, uint8_t val, LED_TYPE *led1) {
 128:quantum/rgblight.c ****   sethsv_raw( hue, sat,
 129:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 130:quantum/rgblight.c ****               led1);
 131:quantum/rgblight.c **** }
 132:quantum/rgblight.c **** 
 133:quantum/rgblight.c **** void setrgb(uint8_t r, uint8_t g, uint8_t b, LED_TYPE *led1) {
 134:quantum/rgblight.c ****   (*led1).r = r;
 135:quantum/rgblight.c ****   (*led1).g = g;
 136:quantum/rgblight.c ****   (*led1).b = b;
 137:quantum/rgblight.c **** }
 138:quantum/rgblight.c **** 
 139:quantum/rgblight.c **** void rgblight_check_config(void) {
 140:quantum/rgblight.c ****   /* Add some out of bound checks for RGB light config */
 141:quantum/rgblight.c **** 
 142:quantum/rgblight.c ****   if (rgblight_config.mode < RGBLIGHT_MODE_STATIC_LIGHT) {
 143:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 144:quantum/rgblight.c ****   }
 145:quantum/rgblight.c ****   else if (rgblight_config.mode > RGBLIGHT_MODES) {
 146:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODES;
 147:quantum/rgblight.c ****   }
 148:quantum/rgblight.c **** 
 149:quantum/rgblight.c ****   if (rgblight_config.val > RGBLIGHT_LIMIT_VAL) {
 150:quantum/rgblight.c ****     rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 151:quantum/rgblight.c ****   }
 152:quantum/rgblight.c **** }
 153:quantum/rgblight.c **** 
 154:quantum/rgblight.c **** uint32_t eeconfig_read_rgblight(void) {
 155:quantum/rgblight.c ****   #if defined(__AVR__) || defined(STM32_EEPROM_ENABLE) || defined(PROTOCOL_ARM_ATSAM) || defined(EE
 156:quantum/rgblight.c ****     return eeprom_read_dword(EECONFIG_RGBLIGHT);
 157:quantum/rgblight.c ****   #else
 158:quantum/rgblight.c ****     return 0;
 159:quantum/rgblight.c ****   #endif
 160:quantum/rgblight.c **** }
 161:quantum/rgblight.c **** 
 162:quantum/rgblight.c **** void eeconfig_update_rgblight(uint32_t val) {
 163:quantum/rgblight.c ****   #if defined(__AVR__) || defined(STM32_EEPROM_ENABLE) || defined(PROTOCOL_ARM_ATSAM) || defined(EE
 164:quantum/rgblight.c ****     rgblight_check_config();
 165:quantum/rgblight.c ****     eeprom_update_dword(EECONFIG_RGBLIGHT, val);
 166:quantum/rgblight.c ****   #endif
 167:quantum/rgblight.c **** }
 168:quantum/rgblight.c **** 
 169:quantum/rgblight.c **** void eeconfig_update_rgblight_default(void) {
 170:quantum/rgblight.c ****   rgblight_config.enable = 1;
 171:quantum/rgblight.c ****   rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 172:quantum/rgblight.c ****   rgblight_config.hue = 0;
 173:quantum/rgblight.c ****   rgblight_config.sat = UINT8_MAX;
 174:quantum/rgblight.c ****   rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 175:quantum/rgblight.c ****   rgblight_config.speed = 0;
 176:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 177:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 178:quantum/rgblight.c **** }
 179:quantum/rgblight.c **** 
 180:quantum/rgblight.c **** void eeconfig_debug_rgblight(void) {
 181:quantum/rgblight.c ****   dprintf("rgblight_config EEPROM:\n");
 182:quantum/rgblight.c ****   dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 183:quantum/rgblight.c ****   dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 184:quantum/rgblight.c ****   dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 185:quantum/rgblight.c ****   dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 186:quantum/rgblight.c ****   dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 187:quantum/rgblight.c ****   dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 188:quantum/rgblight.c **** }
 189:quantum/rgblight.c **** 
 190:quantum/rgblight.c **** void rgblight_init(void) {
 191:quantum/rgblight.c ****   /* if already initialized, don't do it again.
 192:quantum/rgblight.c ****      If you must do it again, extern this and set to false, first.
 193:quantum/rgblight.c ****      This is a dirty, dirty hack until proper hooks can be added for keyboard startup. */
 194:quantum/rgblight.c ****   if (is_rgblight_initialized) { return; }
 195:quantum/rgblight.c **** 
 196:quantum/rgblight.c ****   debug_enable = 1; // Debug ON!
 197:quantum/rgblight.c ****   dprintf("rgblight_init called.\n");
 198:quantum/rgblight.c ****   dprintf("rgblight_init start!\n");
 199:quantum/rgblight.c ****   if (!eeconfig_is_enabled()) {
 200:quantum/rgblight.c ****     dprintf("rgblight_init eeconfig is not enabled.\n");
 201:quantum/rgblight.c ****     eeconfig_init();
 202:quantum/rgblight.c ****     eeconfig_update_rgblight_default();
 203:quantum/rgblight.c ****   }
 204:quantum/rgblight.c ****   rgblight_config.raw = eeconfig_read_rgblight();
 205:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 206:quantum/rgblight.c ****   if (!rgblight_config.mode) {
 207:quantum/rgblight.c ****     dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 208:quantum/rgblight.c ****     eeconfig_update_rgblight_default();
 209:quantum/rgblight.c ****     rgblight_config.raw = eeconfig_read_rgblight();
 210:quantum/rgblight.c ****   }
 211:quantum/rgblight.c ****   rgblight_check_config();
 212:quantum/rgblight.c **** 
 213:quantum/rgblight.c ****   eeconfig_debug_rgblight(); // display current eeprom values
 214:quantum/rgblight.c **** 
 215:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 216:quantum/rgblight.c ****     rgblight_timer_init(); // setup the timer
 217:quantum/rgblight.c **** #endif
 218:quantum/rgblight.c **** 
 219:quantum/rgblight.c ****   if (rgblight_config.enable) {
 220:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 221:quantum/rgblight.c ****   }
 222:quantum/rgblight.c **** 
 223:quantum/rgblight.c ****   is_rgblight_initialized = true;
 224:quantum/rgblight.c **** 
 225:quantum/rgblight.c **** }
 226:quantum/rgblight.c **** 
 227:quantum/rgblight.c **** uint32_t rgblight_read_dword(void) {
 228:quantum/rgblight.c ****   return rgblight_config.raw;
 229:quantum/rgblight.c **** }
 230:quantum/rgblight.c **** 
 231:quantum/rgblight.c **** void rgblight_update_dword(uint32_t dword) {
 232:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 233:quantum/rgblight.c ****   rgblight_config.raw = dword;
 234:quantum/rgblight.c ****   if (rgblight_config.enable)
 235:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 236:quantum/rgblight.c ****   else {
 237:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 238:quantum/rgblight.c ****       rgblight_timer_disable();
 239:quantum/rgblight.c **** #endif
 240:quantum/rgblight.c ****       rgblight_set();
 241:quantum/rgblight.c ****   }
 242:quantum/rgblight.c **** }
 243:quantum/rgblight.c **** 
 244:quantum/rgblight.c **** void rgblight_increase(void) {
 245:quantum/rgblight.c ****   uint8_t mode = 0;
 246:quantum/rgblight.c ****   if (rgblight_config.mode < RGBLIGHT_MODES) {
 247:quantum/rgblight.c ****     mode = rgblight_config.mode + 1;
 248:quantum/rgblight.c ****   }
 249:quantum/rgblight.c ****   rgblight_mode(mode);
 250:quantum/rgblight.c **** }
 251:quantum/rgblight.c **** void rgblight_decrease(void) {
 252:quantum/rgblight.c ****   uint8_t mode = 0;
 253:quantum/rgblight.c ****   // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 254:quantum/rgblight.c ****   if (rgblight_config.mode > RGBLIGHT_MODE_STATIC_LIGHT) {
 255:quantum/rgblight.c ****     mode = rgblight_config.mode - 1;
 256:quantum/rgblight.c ****   }
 257:quantum/rgblight.c ****   rgblight_mode(mode);
 258:quantum/rgblight.c **** }
 259:quantum/rgblight.c **** void rgblight_step_helper(bool write_to_eeprom) {
 260:quantum/rgblight.c ****   uint8_t mode = 0;
 261:quantum/rgblight.c ****   mode = rgblight_config.mode + 1;
 262:quantum/rgblight.c ****   if (mode > RGBLIGHT_MODES) {
 263:quantum/rgblight.c ****     mode = 1;
 264:quantum/rgblight.c ****   }
 265:quantum/rgblight.c ****   rgblight_mode_eeprom_helper(mode, write_to_eeprom);
 266:quantum/rgblight.c **** }
 267:quantum/rgblight.c **** void rgblight_step_noeeprom(void) {
 268:quantum/rgblight.c ****   rgblight_step_helper(false);
 269:quantum/rgblight.c **** }
 270:quantum/rgblight.c **** void rgblight_step(void) {
 271:quantum/rgblight.c ****   rgblight_step_helper(true);
 272:quantum/rgblight.c **** }
 273:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 274:quantum/rgblight.c ****   uint8_t mode = 0;
 275:quantum/rgblight.c ****   mode = rgblight_config.mode - 1;
 276:quantum/rgblight.c ****   if (mode < 1) {
 277:quantum/rgblight.c ****     mode = RGBLIGHT_MODES;
 278:quantum/rgblight.c ****   }
 279:quantum/rgblight.c ****   rgblight_mode_eeprom_helper(mode, write_to_eeprom);
 280:quantum/rgblight.c **** }
 281:quantum/rgblight.c **** void rgblight_step_reverse_noeeprom(void) {
 282:quantum/rgblight.c ****   rgblight_step_reverse_helper(false);
 283:quantum/rgblight.c **** }
 284:quantum/rgblight.c **** void rgblight_step_reverse(void) {
 285:quantum/rgblight.c ****   rgblight_step_reverse_helper(true);
 286:quantum/rgblight.c **** }
 287:quantum/rgblight.c **** 
 288:quantum/rgblight.c **** uint8_t rgblight_get_mode(void) {
 289:quantum/rgblight.c ****   if (!rgblight_config.enable) {
 290:quantum/rgblight.c ****     return false;
 291:quantum/rgblight.c ****   }
 292:quantum/rgblight.c **** 
 293:quantum/rgblight.c ****   return rgblight_config.mode;
 294:quantum/rgblight.c **** }
 295:quantum/rgblight.c **** 
 296:quantum/rgblight.c **** void rgblight_mode_eeprom_helper(uint8_t mode, bool write_to_eeprom) {
 297:quantum/rgblight.c ****   if (!rgblight_config.enable) {
 298:quantum/rgblight.c ****     return;
 299:quantum/rgblight.c ****   }
 300:quantum/rgblight.c ****   if (mode < RGBLIGHT_MODE_STATIC_LIGHT) {
 301:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 302:quantum/rgblight.c ****   } else if (mode > RGBLIGHT_MODES) {
 303:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODES;
 304:quantum/rgblight.c ****   } else {
 305:quantum/rgblight.c ****     rgblight_config.mode = mode;
 306:quantum/rgblight.c ****   }
 307:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 308:quantum/rgblight.c ****   if (write_to_eeprom) {
 309:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 310:quantum/rgblight.c ****     dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 311:quantum/rgblight.c ****   } else {
 312:quantum/rgblight.c ****     dprintf("rgblight mode [NOEEPROM]: %u\n", rgblight_config.mode);
 313:quantum/rgblight.c ****   }
 314:quantum/rgblight.c ****   if( is_static_effect(rgblight_config.mode) ) {
 315:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 316:quantum/rgblight.c ****       rgblight_timer_disable();
 317:quantum/rgblight.c **** #endif
 318:quantum/rgblight.c ****   } else {
 319:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 320:quantum/rgblight.c ****       rgblight_timer_enable();
 321:quantum/rgblight.c **** #endif
 322:quantum/rgblight.c ****   }
 323:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 324:quantum/rgblight.c ****     animation_status.restart = true;
 325:quantum/rgblight.c **** #endif
 326:quantum/rgblight.c ****   rgblight_sethsv_noeeprom(rgblight_config.hue, rgblight_config.sat, rgblight_config.val);
 327:quantum/rgblight.c **** }
 328:quantum/rgblight.c **** 
 329:quantum/rgblight.c **** void rgblight_mode(uint8_t mode) {
 330:quantum/rgblight.c ****   rgblight_mode_eeprom_helper(mode, true);
 331:quantum/rgblight.c **** }
 332:quantum/rgblight.c **** 
 333:quantum/rgblight.c **** void rgblight_mode_noeeprom(uint8_t mode) {
 334:quantum/rgblight.c ****   rgblight_mode_eeprom_helper(mode, false);
 335:quantum/rgblight.c **** }
 336:quantum/rgblight.c **** 
 337:quantum/rgblight.c **** 
 338:quantum/rgblight.c **** void rgblight_toggle(void) {
 339:quantum/rgblight.c ****   dprintf("rgblight toggle [EEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 340:quantum/rgblight.c ****   if (rgblight_config.enable) {
 341:quantum/rgblight.c ****     rgblight_disable();
 342:quantum/rgblight.c ****   }
 343:quantum/rgblight.c ****   else {
 344:quantum/rgblight.c ****     rgblight_enable();
 345:quantum/rgblight.c ****   }
 346:quantum/rgblight.c **** }
 347:quantum/rgblight.c **** 
 348:quantum/rgblight.c **** void rgblight_toggle_noeeprom(void) {
 349:quantum/rgblight.c ****   dprintf("rgblight toggle [NOEEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 350:quantum/rgblight.c ****   if (rgblight_config.enable) {
 351:quantum/rgblight.c ****     rgblight_disable_noeeprom();
 352:quantum/rgblight.c ****   }
 353:quantum/rgblight.c ****   else {
 354:quantum/rgblight.c ****     rgblight_enable_noeeprom();
 355:quantum/rgblight.c ****   }
 356:quantum/rgblight.c **** }
 357:quantum/rgblight.c **** 
 358:quantum/rgblight.c **** void rgblight_enable(void) {
 359:quantum/rgblight.c ****   rgblight_config.enable = 1;
 360:quantum/rgblight.c ****   // No need to update EEPROM here. rgblight_mode() will do that, actually
 361:quantum/rgblight.c ****   //eeconfig_update_rgblight(rgblight_config.raw);
 362:quantum/rgblight.c ****   dprintf("rgblight enable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 363:quantum/rgblight.c ****   rgblight_mode(rgblight_config.mode);
 364:quantum/rgblight.c **** }
 365:quantum/rgblight.c **** 
 366:quantum/rgblight.c **** void rgblight_enable_noeeprom(void) {
 367:quantum/rgblight.c ****   rgblight_config.enable = 1;
 368:quantum/rgblight.c ****   dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 369:quantum/rgblight.c ****   rgblight_mode_noeeprom(rgblight_config.mode);
 370:quantum/rgblight.c **** }
 371:quantum/rgblight.c **** 
 372:quantum/rgblight.c **** void rgblight_disable(void) {
 373:quantum/rgblight.c ****   rgblight_config.enable = 0;
 374:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 375:quantum/rgblight.c ****   dprintf("rgblight disable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 376:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 377:quantum/rgblight.c ****       rgblight_timer_disable();
 378:quantum/rgblight.c **** #endif
 379:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 380:quantum/rgblight.c ****   wait_ms(50);
 381:quantum/rgblight.c ****   rgblight_set();
 382:quantum/rgblight.c **** }
 383:quantum/rgblight.c **** 
 384:quantum/rgblight.c **** void rgblight_disable_noeeprom(void) {
 385:quantum/rgblight.c ****   rgblight_config.enable = 0;
 386:quantum/rgblight.c ****   dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 387:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 388:quantum/rgblight.c ****     rgblight_timer_disable();
 389:quantum/rgblight.c **** #endif
 390:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 391:quantum/rgblight.c ****   wait_ms(50);
 392:quantum/rgblight.c ****   rgblight_set();
 393:quantum/rgblight.c **** }
 394:quantum/rgblight.c **** 
 395:quantum/rgblight.c **** void rgblight_increase_hue_helper(bool write_to_eeprom) {
 396:quantum/rgblight.c ****   uint8_t hue = rgblight_config.hue + RGBLIGHT_HUE_STEP;
 397:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 398:quantum/rgblight.c **** }
 399:quantum/rgblight.c **** void rgblight_increase_hue_noeeprom(void) {
 400:quantum/rgblight.c ****   rgblight_increase_hue_helper(false);
 401:quantum/rgblight.c **** }
 402:quantum/rgblight.c **** void rgblight_increase_hue(void) {
 403:quantum/rgblight.c ****   rgblight_increase_hue_helper(true);
 404:quantum/rgblight.c **** }
 405:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 406:quantum/rgblight.c ****   uint8_t hue = rgblight_config.hue - RGBLIGHT_HUE_STEP;
 407:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 408:quantum/rgblight.c **** }
 409:quantum/rgblight.c **** void rgblight_decrease_hue_noeeprom(void) {
 410:quantum/rgblight.c ****   rgblight_decrease_hue_helper(false);
 411:quantum/rgblight.c **** }
 412:quantum/rgblight.c **** void rgblight_decrease_hue(void) {
 413:quantum/rgblight.c ****   rgblight_decrease_hue_helper(true);
 414:quantum/rgblight.c **** }
 415:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 416:quantum/rgblight.c ****   uint8_t sat = qadd8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 417:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 418:quantum/rgblight.c **** }
 419:quantum/rgblight.c **** void rgblight_increase_sat_noeeprom(void) {
 420:quantum/rgblight.c ****   rgblight_increase_sat_helper(false);
 421:quantum/rgblight.c **** }
 422:quantum/rgblight.c **** void rgblight_increase_sat(void) {
 423:quantum/rgblight.c ****   rgblight_increase_sat_helper(true);
 424:quantum/rgblight.c **** }
 425:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 426:quantum/rgblight.c ****   uint8_t sat = qsub8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 427:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 428:quantum/rgblight.c **** }
 429:quantum/rgblight.c **** void rgblight_decrease_sat_noeeprom(void) {
 430:quantum/rgblight.c ****   rgblight_decrease_sat_helper(false);
 431:quantum/rgblight.c **** }
 432:quantum/rgblight.c **** void rgblight_decrease_sat(void) {
 433:quantum/rgblight.c ****   rgblight_decrease_sat_helper(true);
 434:quantum/rgblight.c **** }
 435:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 436:quantum/rgblight.c ****   uint8_t val = qadd8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 437:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 438:quantum/rgblight.c **** }
 439:quantum/rgblight.c **** void rgblight_increase_val_noeeprom(void) {
 440:quantum/rgblight.c ****   rgblight_increase_val_helper(false);
 441:quantum/rgblight.c **** }
 442:quantum/rgblight.c **** void rgblight_increase_val(void) {
 443:quantum/rgblight.c ****   rgblight_increase_val_helper(true);
 444:quantum/rgblight.c **** }
 445:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 446:quantum/rgblight.c ****   uint8_t val = qsub8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 447:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 448:quantum/rgblight.c **** }
 449:quantum/rgblight.c **** void rgblight_decrease_val_noeeprom(void) {
 450:quantum/rgblight.c ****   rgblight_decrease_val_helper(false);
 451:quantum/rgblight.c **** }
 452:quantum/rgblight.c **** void rgblight_decrease_val(void) {
 453:quantum/rgblight.c ****   rgblight_decrease_val_helper(true);
 454:quantum/rgblight.c **** }
 455:quantum/rgblight.c **** void rgblight_increase_speed(void) {
 456:quantum/rgblight.c ****     if (rgblight_config.speed < 3)
 457:quantum/rgblight.c ****         rgblight_config.speed++;
 458:quantum/rgblight.c ****     //RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 459:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);//EECONFIG needs to be increased to support this
 460:quantum/rgblight.c **** }
 461:quantum/rgblight.c **** 
 462:quantum/rgblight.c **** void rgblight_decrease_speed(void) {
 463:quantum/rgblight.c ****     if (rgblight_config.speed > 0)
 464:quantum/rgblight.c ****         rgblight_config.speed--;
 465:quantum/rgblight.c ****     //RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 466:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);//EECONFIG needs to be increased to support this
 467:quantum/rgblight.c **** }
 468:quantum/rgblight.c **** 
 469:quantum/rgblight.c **** void rgblight_sethsv_noeeprom_old(uint8_t hue, uint8_t sat, uint8_t val) {
 470:quantum/rgblight.c ****   if (rgblight_config.enable) {
 471:quantum/rgblight.c ****     LED_TYPE tmp_led;
 472:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 473:quantum/rgblight.c ****     rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 474:quantum/rgblight.c ****   }
 475:quantum/rgblight.c **** }
 476:quantum/rgblight.c **** 
 477:quantum/rgblight.c **** void rgblight_sethsv_eeprom_helper(uint8_t hue, uint8_t sat, uint8_t val, bool write_to_eeprom) {
 478:quantum/rgblight.c ****   if (rgblight_config.enable) {
 479:quantum/rgblight.c ****     rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 480:quantum/rgblight.c ****     if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 481:quantum/rgblight.c ****       // same static color
 482:quantum/rgblight.c ****       LED_TYPE tmp_led;
 483:quantum/rgblight.c ****       sethsv(hue, sat, val, &tmp_led);
 484:quantum/rgblight.c ****       rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 485:quantum/rgblight.c ****     } else {
 486:quantum/rgblight.c ****       // all LEDs in same color
 487:quantum/rgblight.c ****       if ( 1 == 0 ) { //dummy
 488:quantum/rgblight.c ****       }
 489:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHING
 490:quantum/rgblight.c ****       else if (rgblight_status.base_mode == RGBLIGHT_MODE_BREATHING ) {
 491:quantum/rgblight.c ****         // breathing mode, ignore the change of val, use in memory value instead
 492:quantum/rgblight.c ****         val = rgblight_config.val;
 493:quantum/rgblight.c ****       }
 494:quantum/rgblight.c **** #endif
 495:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 496:quantum/rgblight.c ****       else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_MOOD) {
 497:quantum/rgblight.c ****         // rainbow mood, ignore the change of hue
 498:quantum/rgblight.c ****         hue = rgblight_config.hue;
 499:quantum/rgblight.c ****       }
 500:quantum/rgblight.c **** #endif
 501:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 502:quantum/rgblight.c ****       else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_SWIRL) {
 503:quantum/rgblight.c ****         // rainbow swirl, ignore the change of hue
 504:quantum/rgblight.c ****         hue = rgblight_config.hue;
 505:quantum/rgblight.c ****       }
 506:quantum/rgblight.c **** #endif
 507:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_STATIC_GRADIENT
 508:quantum/rgblight.c ****       else if (rgblight_status.base_mode == RGBLIGHT_MODE_STATIC_GRADIENT) {
 509:quantum/rgblight.c ****         // static gradient
 510:quantum/rgblight.c ****         uint8_t delta = rgblight_config.mode - rgblight_status.base_mode;
 511:quantum/rgblight.c ****         bool direction = (delta % 2) == 0;
 512:quantum/rgblight.c **** #ifdef __AVR__
 513:quantum/rgblight.c ****         // probably due to how pgm_read_word is defined for ARM, but the ARM compiler really hates 
 514:quantum/rgblight.c ****         uint8_t range = pgm_read_word(&RGBLED_GRADIENT_RANGES[delta / 2]);
 515:quantum/rgblight.c **** #else
 516:quantum/rgblight.c ****         uint8_t range = RGBLED_GRADIENT_RANGES[delta / 2];
 517:quantum/rgblight.c **** #endif
 518:quantum/rgblight.c ****         for (uint8_t i = 0; i < effect_num_leds; i++) {
 519:quantum/rgblight.c ****           uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 520:quantum/rgblight.c ****           if (direction) {
 521:quantum/rgblight.c ****             _hue = hue + _hue;
 522:quantum/rgblight.c ****           } else {
 523:quantum/rgblight.c ****             _hue = hue - _hue;
 524:quantum/rgblight.c ****           }
 525:quantum/rgblight.c ****           dprintf("rgblight rainbow set hsv: %d,%d,%d,%u\n", i, _hue, direction, range);
 526:quantum/rgblight.c ****           sethsv(_hue, sat, val, (LED_TYPE *)&led[i + effect_start_pos]);
 527:quantum/rgblight.c ****         }
 528:quantum/rgblight.c ****         rgblight_set();
 529:quantum/rgblight.c ****       }
 530:quantum/rgblight.c **** #endif
 531:quantum/rgblight.c ****     }
 532:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
 533:quantum/rgblight.c ****     if( rgblight_config.hue != hue ||
 534:quantum/rgblight.c ****         rgblight_config.sat != sat ||
 535:quantum/rgblight.c ****         rgblight_config.val != val ) {
 536:quantum/rgblight.c ****         RGBLIGHT_SPLIT_SET_CHANGE_HSVS;
 537:quantum/rgblight.c ****     }
 538:quantum/rgblight.c **** #endif
 539:quantum/rgblight.c ****     rgblight_config.hue = hue;
 540:quantum/rgblight.c ****     rgblight_config.sat = sat;
 541:quantum/rgblight.c ****     rgblight_config.val = val;
 542:quantum/rgblight.c ****     if (write_to_eeprom) {
 543:quantum/rgblight.c ****       eeconfig_update_rgblight(rgblight_config.raw);
 544:quantum/rgblight.c ****       dprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.sat, rg
 545:quantum/rgblight.c ****     } else {
 546:quantum/rgblight.c ****       dprintf("rgblight set hsv [NOEEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.sat, 
 547:quantum/rgblight.c ****     }
 548:quantum/rgblight.c ****   }
 549:quantum/rgblight.c **** }
 550:quantum/rgblight.c **** 
 551:quantum/rgblight.c **** void rgblight_sethsv(uint8_t hue, uint8_t sat, uint8_t val) {
 552:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(hue, sat, val, true);
 553:quantum/rgblight.c **** }
 554:quantum/rgblight.c **** 
 555:quantum/rgblight.c **** void rgblight_sethsv_noeeprom(uint8_t hue, uint8_t sat, uint8_t val) {
 556:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(hue, sat, val, false);
 557:quantum/rgblight.c **** }
 558:quantum/rgblight.c **** 
 559:quantum/rgblight.c **** uint8_t rgblight_get_hue(void) {
 560:quantum/rgblight.c ****   return rgblight_config.hue;
 561:quantum/rgblight.c **** }
 562:quantum/rgblight.c **** 
 563:quantum/rgblight.c **** uint8_t rgblight_get_sat(void) {
 564:quantum/rgblight.c ****   return rgblight_config.sat;
 565:quantum/rgblight.c **** }
 566:quantum/rgblight.c **** 
 567:quantum/rgblight.c **** uint8_t rgblight_get_val(void) {
 568:quantum/rgblight.c ****   return rgblight_config.val;
 569:quantum/rgblight.c **** }
 570:quantum/rgblight.c **** 
 571:quantum/rgblight.c **** void rgblight_setrgb(uint8_t r, uint8_t g, uint8_t b) {
 572:quantum/rgblight.c ****   if (!rgblight_config.enable) { return; }
 573:quantum/rgblight.c **** 
 574:quantum/rgblight.c ****   for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 575:quantum/rgblight.c ****     led[i].r = r;
 576:quantum/rgblight.c ****     led[i].g = g;
 577:quantum/rgblight.c ****     led[i].b = b;
 578:quantum/rgblight.c ****   }
 579:quantum/rgblight.c ****   rgblight_set();
 580:quantum/rgblight.c **** }
 581:quantum/rgblight.c **** 
 582:quantum/rgblight.c **** void rgblight_setrgb_at(uint8_t r, uint8_t g, uint8_t b, uint8_t index) {
 583:quantum/rgblight.c ****   if (!rgblight_config.enable || index >= RGBLED_NUM) { return; }
 584:quantum/rgblight.c **** 
 585:quantum/rgblight.c ****   led[index].r = r;
 586:quantum/rgblight.c ****   led[index].g = g;
 587:quantum/rgblight.c ****   led[index].b = b;
 588:quantum/rgblight.c ****   rgblight_set();
 589:quantum/rgblight.c **** }
 590:quantum/rgblight.c **** 
 591:quantum/rgblight.c **** void rgblight_sethsv_at(uint8_t hue, uint8_t sat, uint8_t val, uint8_t index) {
 592:quantum/rgblight.c ****   if (!rgblight_config.enable) { return; }
 593:quantum/rgblight.c **** 
 594:quantum/rgblight.c ****   LED_TYPE tmp_led;
 595:quantum/rgblight.c ****   sethsv(hue, sat, val, &tmp_led);
 596:quantum/rgblight.c ****   rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 597:quantum/rgblight.c **** }
 598:quantum/rgblight.c **** 
 599:quantum/rgblight.c **** #if defined(RGBLIGHT_EFFECT_BREATHING) || defined(RGBLIGHT_EFFECT_RAINBOW_MOOD) || defined(RGBLIGHT
 600:quantum/rgblight.c ****   || defined(RGBLIGHT_EFFECT_SNAKE) || defined(RGBLIGHT_EFFECT_KNIGHT)
 601:quantum/rgblight.c **** 
 602:quantum/rgblight.c **** static uint8_t get_interval_time(const uint8_t* default_interval_address, uint8_t velocikey_min, ui
 603:quantum/rgblight.c ****   return
 604:quantum/rgblight.c **** #ifdef VELOCIKEY_ENABLE
 605:quantum/rgblight.c ****     velocikey_enabled() ? velocikey_match_speed(velocikey_min, velocikey_max) :
 606:quantum/rgblight.c **** #endif
 607:quantum/rgblight.c ****     pgm_read_byte(default_interval_address);
 608:quantum/rgblight.c **** }
 609:quantum/rgblight.c **** 
 610:quantum/rgblight.c **** #endif
 611:quantum/rgblight.c **** 
 612:quantum/rgblight.c **** void rgblight_setrgb_range(uint8_t r, uint8_t g, uint8_t b, uint8_t start, uint8_t end) {
 613:quantum/rgblight.c ****   if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) { return; }
 614:quantum/rgblight.c **** 
 615:quantum/rgblight.c ****   for (uint8_t i = start; i < end; i++) {
 616:quantum/rgblight.c ****     led[i].r = r;
 617:quantum/rgblight.c ****     led[i].g = g;
 618:quantum/rgblight.c ****     led[i].b = b;
 619:quantum/rgblight.c ****   }
 620:quantum/rgblight.c ****   rgblight_set();
 621:quantum/rgblight.c ****   wait_ms(1);
 622:quantum/rgblight.c **** }
 623:quantum/rgblight.c **** 
 624:quantum/rgblight.c **** void rgblight_sethsv_range(uint8_t hue, uint8_t sat, uint8_t val, uint8_t start, uint8_t end) {
 625:quantum/rgblight.c ****   if (!rgblight_config.enable) { return; }
 626:quantum/rgblight.c **** 
 627:quantum/rgblight.c ****   LED_TYPE tmp_led;
 628:quantum/rgblight.c ****   sethsv(hue, sat, val, &tmp_led);
 629:quantum/rgblight.c ****   rgblight_setrgb_range(tmp_led.r, tmp_led.g, tmp_led.b, start, end);
 630:quantum/rgblight.c **** }
 631:quantum/rgblight.c **** 
 632:quantum/rgblight.c **** #ifndef RGBLIGHT_SPLIT
 633:quantum/rgblight.c **** void rgblight_setrgb_master(uint8_t r, uint8_t g, uint8_t b) {
 634:quantum/rgblight.c ****   rgblight_setrgb_range(r, g, b, 0 , (uint8_t) RGBLED_NUM/2);
 635:quantum/rgblight.c **** }
 636:quantum/rgblight.c **** 
 637:quantum/rgblight.c **** void rgblight_setrgb_slave(uint8_t r, uint8_t g, uint8_t b) {
 638:quantum/rgblight.c ****   rgblight_setrgb_range(r, g, b, (uint8_t) RGBLED_NUM/2, (uint8_t) RGBLED_NUM);
 639:quantum/rgblight.c **** }
 640:quantum/rgblight.c **** 
 641:quantum/rgblight.c **** void rgblight_sethsv_master(uint8_t hue, uint8_t sat, uint8_t val) {
 642:quantum/rgblight.c ****   rgblight_sethsv_range(hue, sat, val, 0, (uint8_t) RGBLED_NUM/2);
 643:quantum/rgblight.c **** }
 644:quantum/rgblight.c **** 
 645:quantum/rgblight.c **** void rgblight_sethsv_slave(uint8_t hue, uint8_t sat, uint8_t val) {
 646:quantum/rgblight.c ****   rgblight_sethsv_range(hue, sat, val, (uint8_t) RGBLED_NUM/2, (uint8_t) RGBLED_NUM);
 647:quantum/rgblight.c **** }
 648:quantum/rgblight.c **** #endif // ifndef RGBLIGHT_SPLIT
 649:quantum/rgblight.c **** 
 650:quantum/rgblight.c **** #ifndef RGBLIGHT_CUSTOM_DRIVER
 651:quantum/rgblight.c **** void rgblight_set(void) {
 652:quantum/rgblight.c ****   LED_TYPE *start_led;
 653:quantum/rgblight.c ****   uint16_t num_leds = clipping_num_leds;
 654:quantum/rgblight.c **** 
 655:quantum/rgblight.c ****   if (!rgblight_config.enable) {
 656:quantum/rgblight.c ****     for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 657:quantum/rgblight.c ****       led[i].r = 0;
 658:quantum/rgblight.c ****       led[i].g = 0;
 659:quantum/rgblight.c ****       led[i].b = 0;
 660:quantum/rgblight.c ****     }
 661:quantum/rgblight.c ****   }
 662:quantum/rgblight.c **** #ifdef RGBLIGHT_LED_MAP
 663:quantum/rgblight.c ****   LED_TYPE led0[RGBLED_NUM];
 664:quantum/rgblight.c ****   for(uint8_t i = 0; i < RGBLED_NUM; i++) {
 665:quantum/rgblight.c ****       led0[i] = led[pgm_read_byte(&led_map[i])];
 666:quantum/rgblight.c ****   }
 667:quantum/rgblight.c ****   start_led = led0 + clipping_start_pos;
 668:quantum/rgblight.c **** #else
 669:quantum/rgblight.c ****   start_led = led + clipping_start_pos;
 670:quantum/rgblight.c **** #endif
 671:quantum/rgblight.c **** #ifdef RGBW
 672:quantum/rgblight.c ****   ws2812_setleds_rgbw(start_led, num_leds);
 673:quantum/rgblight.c **** #else
 674:quantum/rgblight.c ****   ws2812_setleds(start_led, num_leds);
 675:quantum/rgblight.c **** #endif
 676:quantum/rgblight.c **** }
 677:quantum/rgblight.c **** #endif
 678:quantum/rgblight.c **** 
 679:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
 680:quantum/rgblight.c **** /* for split keyboard master side */
 681:quantum/rgblight.c **** uint8_t rgblight_get_change_flags(void) {
 682:quantum/rgblight.c ****     return rgblight_status.change_flags;
 683:quantum/rgblight.c **** }
 684:quantum/rgblight.c **** 
 685:quantum/rgblight.c **** void rgblight_clear_change_flags(void) {
 686:quantum/rgblight.c ****     rgblight_status.change_flags = 0;
 687:quantum/rgblight.c **** }
 688:quantum/rgblight.c **** 
 689:quantum/rgblight.c **** void rgblight_get_syncinfo(rgblight_syncinfo_t *syncinfo) {
 690:quantum/rgblight.c ****     syncinfo->config = rgblight_config;
 691:quantum/rgblight.c ****     syncinfo->status = rgblight_status;
 692:quantum/rgblight.c **** }
 693:quantum/rgblight.c **** 
 694:quantum/rgblight.c **** /* for split keyboard slave side */
 695:quantum/rgblight.c **** void rgblight_update_sync(rgblight_syncinfo_t *syncinfo, bool write_to_eeprom) {
 696:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_MODE) {
 697:quantum/rgblight.c ****         if (syncinfo->config.enable) {
 698:quantum/rgblight.c ****             rgblight_config.enable = 1; // == rgblight_enable_noeeprom();
 699:quantum/rgblight.c ****             rgblight_mode_eeprom_helper(syncinfo->config.mode, write_to_eeprom);
 700:quantum/rgblight.c ****         } else {
 701:quantum/rgblight.c ****             rgblight_disable_noeeprom();
 702:quantum/rgblight.c ****         }
 703:quantum/rgblight.c ****     }
 704:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_HSVS) {
 705:quantum/rgblight.c ****         rgblight_sethsv_eeprom_helper(syncinfo->config.hue, syncinfo->config.sat, syncinfo->config.
 706:quantum/rgblight.c ****         // rgblight_config.speed = config->speed; // NEED???
 707:quantum/rgblight.c ****     }
 708:quantum/rgblight.c ****   #ifdef RGBLIGHT_USE_TIMER
 709:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_TIMER) {
 710:quantum/rgblight.c ****         if (syncinfo->status.timer_enabled) {
 711:quantum/rgblight.c ****             rgblight_timer_enable();
 712:quantum/rgblight.c ****         } else {
 713:quantum/rgblight.c ****             rgblight_timer_disable();
 714:quantum/rgblight.c ****         }
 715:quantum/rgblight.c ****     }
 716:quantum/rgblight.c ****     #ifndef RGBLIGHT_SPLIT_NO_ANIMATION_SYNC
 717:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_ANIMATION_TICK) {
 718:quantum/rgblight.c ****         animation_status.restart = true;
 719:quantum/rgblight.c ****     }
 720:quantum/rgblight.c ****     #endif /* RGBLIGHT_SPLIT_NO_ANIMATION_SYNC */
 721:quantum/rgblight.c ****   #endif /* RGBLIGHT_USE_TIMER */
 722:quantum/rgblight.c **** }
 723:quantum/rgblight.c **** #endif /* RGBLIGHT_SPLIT */
 724:quantum/rgblight.c **** 
 725:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 726:quantum/rgblight.c **** 
 727:quantum/rgblight.c **** typedef void (*effect_func_t)(animation_status_t *anim);
 728:quantum/rgblight.c **** 
 729:quantum/rgblight.c **** // Animation timer -- use system timer (AVR Timer0)
 730:quantum/rgblight.c **** void rgblight_timer_init(void) {
 731:quantum/rgblight.c ****   // OLD!!!! Animation timer -- AVR Timer3
 732:quantum/rgblight.c ****   // static uint8_t rgblight_timer_is_init = 0;
 733:quantum/rgblight.c ****   // if (rgblight_timer_is_init) {
 734:quantum/rgblight.c ****   //   return;
 735:quantum/rgblight.c ****   // }
 736:quantum/rgblight.c ****   // rgblight_timer_is_init = 1;
 737:quantum/rgblight.c ****   // /* Timer 3 setup */
 738:quantum/rgblight.c ****   // TCCR3B = _BV(WGM32) // CTC mode OCR3A as TOP
 739:quantum/rgblight.c ****   //       | _BV(CS30); // Clock selelct: clk/1
 740:quantum/rgblight.c ****   // /* Set TOP value */
 741:quantum/rgblight.c ****   // uint8_t sreg = SREG;
 742:quantum/rgblight.c ****   // cli();
 743:quantum/rgblight.c ****   // OCR3AH = (RGBLED_TIMER_TOP >> 8) & 0xff;
 744:quantum/rgblight.c ****   // OCR3AL = RGBLED_TIMER_TOP & 0xff;
 745:quantum/rgblight.c ****   // SREG = sreg;
 746:quantum/rgblight.c **** 
 747:quantum/rgblight.c ****   rgblight_status.timer_enabled = false;
 748:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 749:quantum/rgblight.c **** }
 750:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 751:quantum/rgblight.c ****   if( !is_static_effect(rgblight_config.mode) ) {
 752:quantum/rgblight.c ****       rgblight_status.timer_enabled = true;
 753:quantum/rgblight.c ****   }
 754:quantum/rgblight.c ****   animation_status.last_timer = timer_read();
 755:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 756:quantum/rgblight.c ****   dprintf("rgblight timer enabled.\n");
 757:quantum/rgblight.c **** }
 758:quantum/rgblight.c **** void rgblight_timer_disable(void) {
 759:quantum/rgblight.c ****   rgblight_status.timer_enabled = false;
 760:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 761:quantum/rgblight.c ****   dprintf("rgblight timer disable.\n");
 762:quantum/rgblight.c **** }
 763:quantum/rgblight.c **** void rgblight_timer_toggle(void) {
 764:quantum/rgblight.c ****   dprintf("rgblight timer toggle.\n");
 765:quantum/rgblight.c ****   if(rgblight_status.timer_enabled) {
 766:quantum/rgblight.c ****       rgblight_timer_disable();
 767:quantum/rgblight.c ****   } else {
 768:quantum/rgblight.c ****       rgblight_timer_enable();
 769:quantum/rgblight.c ****   }
 770:quantum/rgblight.c **** }
 771:quantum/rgblight.c **** 
 772:quantum/rgblight.c **** void rgblight_show_solid_color(uint8_t r, uint8_t g, uint8_t b) {
 773:quantum/rgblight.c ****   rgblight_enable();
 774:quantum/rgblight.c ****   rgblight_mode(RGBLIGHT_MODE_STATIC_LIGHT);
 775:quantum/rgblight.c ****   rgblight_setrgb(r, g, b);
 776:quantum/rgblight.c **** }
 777:quantum/rgblight.c **** 
 778:quantum/rgblight.c **** static void rgblight_effect_dummy(animation_status_t *anim) {
  16               		.loc 1 778 61 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 779:quantum/rgblight.c ****     // do nothing
 780:quantum/rgblight.c ****     /********
 781:quantum/rgblight.c ****     dprintf("rgblight_task() what happened?\n");
 782:quantum/rgblight.c ****     dprintf("is_static_effect %d\n", is_static_effect(rgblight_config.mode));
 783:quantum/rgblight.c ****     dprintf("mode = %d, base_mode = %d, timer_enabled %d, ",
 784:quantum/rgblight.c ****             rgblight_config.mode, rgblight_status.base_mode,
 785:quantum/rgblight.c ****             rgblight_status.timer_enabled);
 786:quantum/rgblight.c ****     dprintf("last_timer = %d\n",anim->last_timer);
 787:quantum/rgblight.c ****     **/
 788:quantum/rgblight.c **** }
  22               		.loc 1 788 1 view .LVU1
  23               	/* epilogue start */
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE154:
  28               		.section	.text.rgblight_set_clipping_range,"ax",@progbits
  29               	.global	rgblight_set_clipping_range
  31               	rgblight_set_clipping_range:
  32               	.LVL1:
  33               	.LFB80:
 108:quantum/rgblight.c ****   clipping_start_pos = start_pos;
  34               		.loc 1 108 71 view -0
  35               		.cfi_startproc
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
 109:quantum/rgblight.c ****   clipping_num_leds = num_leds;
  40               		.loc 1 109 3 view .LVU3
 109:quantum/rgblight.c ****   clipping_num_leds = num_leds;
  41               		.loc 1 109 22 is_stmt 0 view .LVU4
  42 0000 8093 0000 		sts clipping_start_pos,r24
 110:quantum/rgblight.c **** }
  43               		.loc 1 110 3 is_stmt 1 view .LVU5
 110:quantum/rgblight.c **** }
  44               		.loc 1 110 21 is_stmt 0 view .LVU6
  45 0004 6093 0000 		sts clipping_num_leds,r22
  46               	/* epilogue start */
 111:quantum/rgblight.c **** 
  47               		.loc 1 111 1 view .LVU7
  48 0008 0895      		ret
  49               		.cfi_endproc
  50               	.LFE80:
  52               		.section	.text.rgblight_set_effect_range,"ax",@progbits
  53               	.global	rgblight_set_effect_range
  55               	rgblight_set_effect_range:
  56               	.LVL2:
  57               	.LFB81:
 113:quantum/rgblight.c ****   if (start_pos >= RGBLED_NUM) return;
  58               		.loc 1 113 69 is_stmt 1 view -0
  59               		.cfi_startproc
  60               	/* prologue: function */
  61               	/* frame size = 0 */
  62               	/* stack size = 0 */
  63               	.L__stack_usage = 0
 114:quantum/rgblight.c ****   if (start_pos + num_leds > RGBLED_NUM) return;
  64               		.loc 1 114 3 view .LVU9
 114:quantum/rgblight.c ****   if (start_pos + num_leds > RGBLED_NUM) return;
  65               		.loc 1 114 6 is_stmt 0 view .LVU10
  66 0000 8E30      		cpi r24,lo8(14)
  67 0002 00F4      		brsh .L3
 115:quantum/rgblight.c ****   effect_start_pos = start_pos;
  68               		.loc 1 115 3 is_stmt 1 view .LVU11
 115:quantum/rgblight.c ****   effect_start_pos = start_pos;
  69               		.loc 1 115 17 is_stmt 0 view .LVU12
  70 0004 482F      		mov r20,r24
  71 0006 460F      		add r20,r22
  72 0008 5527      		clr r21
  73 000a 551F      		rol r21
 115:quantum/rgblight.c ****   effect_start_pos = start_pos;
  74               		.loc 1 115 6 view .LVU13
  75 000c 4F30      		cpi r20,15
  76 000e 5105      		cpc r21,__zero_reg__
  77 0010 04F4      		brge .L3
 116:quantum/rgblight.c ****   effect_end_pos = start_pos + num_leds;
  78               		.loc 1 116 3 is_stmt 1 view .LVU14
 116:quantum/rgblight.c ****   effect_end_pos = start_pos + num_leds;
  79               		.loc 1 116 20 is_stmt 0 view .LVU15
  80 0012 8093 0000 		sts effect_start_pos,r24
 117:quantum/rgblight.c ****   effect_num_leds = num_leds;
  81               		.loc 1 117 3 is_stmt 1 view .LVU16
 117:quantum/rgblight.c ****   effect_num_leds = num_leds;
  82               		.loc 1 117 30 is_stmt 0 view .LVU17
  83 0016 860F      		add r24,r22
  84               	.LVL3:
 117:quantum/rgblight.c ****   effect_num_leds = num_leds;
  85               		.loc 1 117 18 view .LVU18
  86 0018 8093 0000 		sts effect_end_pos,r24
 118:quantum/rgblight.c **** }
  87               		.loc 1 118 3 is_stmt 1 view .LVU19
 118:quantum/rgblight.c **** }
  88               		.loc 1 118 19 is_stmt 0 view .LVU20
  89 001c 6093 0000 		sts effect_num_leds,r22
  90               	.LVL4:
  91               	.L3:
  92               	/* epilogue start */
 119:quantum/rgblight.c **** 
  93               		.loc 1 119 1 view .LVU21
  94 0020 0895      		ret
  95               		.cfi_endproc
  96               	.LFE81:
  98               		.section	.text.sethsv_raw,"ax",@progbits
  99               	.global	sethsv_raw
 101               	sethsv_raw:
 102               	.LVL5:
 103               	.LFB82:
 121:quantum/rgblight.c ****   HSV hsv = { hue, sat, val };
 104               		.loc 1 121 72 is_stmt 1 view -0
 105               		.cfi_startproc
 121:quantum/rgblight.c ****   HSV hsv = { hue, sat, val };
 106               		.loc 1 121 72 is_stmt 0 view .LVU23
 107 0000 CF93      		push r28
 108               	.LCFI0:
 109               		.cfi_def_cfa_offset 3
 110               		.cfi_offset 28, -2
 111 0002 DF93      		push r29
 112               	.LCFI1:
 113               		.cfi_def_cfa_offset 4
 114               		.cfi_offset 29, -3
 115               	/* prologue: function */
 116               	/* frame size = 0 */
 117               	/* stack size = 2 */
 118               	.L__stack_usage = 2
 119 0004 762F      		mov r23,r22
 120 0006 E901      		movw r28,r18
 122:quantum/rgblight.c ****   RGB rgb = hsv_to_rgb(hsv);
 121               		.loc 1 122 3 is_stmt 1 view .LVU24
 123:quantum/rgblight.c ****   setrgb(rgb.r, rgb.g, rgb.b, led1);
 122               		.loc 1 123 3 view .LVU25
 123:quantum/rgblight.c ****   setrgb(rgb.r, rgb.g, rgb.b, led1);
 123               		.loc 1 123 13 is_stmt 0 view .LVU26
 124 0008 682F      		mov r22,r24
 125               	.LVL6:
 123:quantum/rgblight.c ****   setrgb(rgb.r, rgb.g, rgb.b, led1);
 126               		.loc 1 123 13 view .LVU27
 127 000a 842F      		mov r24,r20
 128               	.LVL7:
 123:quantum/rgblight.c ****   setrgb(rgb.r, rgb.g, rgb.b, led1);
 129               		.loc 1 123 13 view .LVU28
 130 000c 0E94 0000 		call hsv_to_rgb
 131               	.LVL8:
 124:quantum/rgblight.c **** }
 132               		.loc 1 124 3 is_stmt 1 view .LVU29
 133               	.LBB22:
 134               	.LBI22:
 133:quantum/rgblight.c ****   (*led1).r = r;
 135               		.loc 1 133 6 view .LVU30
 136               	.LBB23:
 134:quantum/rgblight.c ****   (*led1).g = g;
 137               		.loc 1 134 3 view .LVU31
 134:quantum/rgblight.c ****   (*led1).g = g;
 138               		.loc 1 134 13 is_stmt 0 view .LVU32
 139 0010 7983      		std Y+1,r23
 135:quantum/rgblight.c ****   (*led1).b = b;
 140               		.loc 1 135 3 is_stmt 1 view .LVU33
 135:quantum/rgblight.c ****   (*led1).b = b;
 141               		.loc 1 135 13 is_stmt 0 view .LVU34
 142 0012 6883      		st Y,r22
 136:quantum/rgblight.c **** }
 143               		.loc 1 136 3 is_stmt 1 view .LVU35
 136:quantum/rgblight.c **** }
 144               		.loc 1 136 13 is_stmt 0 view .LVU36
 145 0014 8A83      		std Y+2,r24
 146               	.LVL9:
 147               	/* epilogue start */
 136:quantum/rgblight.c **** }
 148               		.loc 1 136 13 view .LVU37
 149               	.LBE23:
 150               	.LBE22:
 125:quantum/rgblight.c **** 
 151               		.loc 1 125 1 view .LVU38
 152 0016 DF91      		pop r29
 153 0018 CF91      		pop r28
 154               	.LVL10:
 125:quantum/rgblight.c **** 
 155               		.loc 1 125 1 view .LVU39
 156 001a 0895      		ret
 157               		.cfi_endproc
 158               	.LFE82:
 160               		.section	.text.sethsv,"ax",@progbits
 161               	.global	sethsv
 163               	sethsv:
 164               	.LVL11:
 165               	.LFB83:
 127:quantum/rgblight.c ****   sethsv_raw( hue, sat,
 166               		.loc 1 127 68 is_stmt 1 view -0
 167               		.cfi_startproc
 168               	/* prologue: function */
 169               	/* frame size = 0 */
 170               	/* stack size = 0 */
 171               	.L__stack_usage = 0
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 172               		.loc 1 128 3 view .LVU41
 173 0000 0C94 0000 		jmp sethsv_raw
 174               	.LVL12:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 175               		.loc 1 128 3 is_stmt 0 view .LVU42
 176               		.cfi_endproc
 177               	.LFE83:
 179               		.section	.text.setrgb,"ax",@progbits
 180               	.global	setrgb
 182               	setrgb:
 183               	.LVL13:
 184               	.LFB84:
 133:quantum/rgblight.c ****   (*led1).r = r;
 185               		.loc 1 133 62 is_stmt 1 view -0
 186               		.cfi_startproc
 187               	/* prologue: function */
 188               	/* frame size = 0 */
 189               	/* stack size = 0 */
 190               	.L__stack_usage = 0
 133:quantum/rgblight.c ****   (*led1).r = r;
 191               		.loc 1 133 62 is_stmt 0 view .LVU44
 192 0000 F901      		movw r30,r18
 134:quantum/rgblight.c ****   (*led1).g = g;
 193               		.loc 1 134 3 is_stmt 1 view .LVU45
 134:quantum/rgblight.c ****   (*led1).g = g;
 194               		.loc 1 134 13 is_stmt 0 view .LVU46
 195 0002 8183      		std Z+1,r24
 135:quantum/rgblight.c ****   (*led1).b = b;
 196               		.loc 1 135 3 is_stmt 1 view .LVU47
 135:quantum/rgblight.c ****   (*led1).b = b;
 197               		.loc 1 135 13 is_stmt 0 view .LVU48
 198 0004 6083      		st Z,r22
 136:quantum/rgblight.c **** }
 199               		.loc 1 136 3 is_stmt 1 view .LVU49
 136:quantum/rgblight.c **** }
 200               		.loc 1 136 13 is_stmt 0 view .LVU50
 201 0006 4283      		std Z+2,r20
 202               	/* epilogue start */
 137:quantum/rgblight.c **** 
 203               		.loc 1 137 1 view .LVU51
 204 0008 0895      		ret
 205               		.cfi_endproc
 206               	.LFE84:
 208               		.section	.text.rgblight_check_config,"ax",@progbits
 209               	.global	rgblight_check_config
 211               	rgblight_check_config:
 212               	.LFB85:
 139:quantum/rgblight.c ****   /* Add some out of bound checks for RGB light config */
 213               		.loc 1 139 34 is_stmt 1 view -0
 214               		.cfi_startproc
 215               	/* prologue: function */
 216               	/* frame size = 0 */
 217               	/* stack size = 0 */
 218               	.L__stack_usage = 0
 142:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 219               		.loc 1 142 3 view .LVU53
 142:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 220               		.loc 1 142 28 is_stmt 0 view .LVU54
 221 0000 8091 0000 		lds r24,rgblight_config
 222 0004 982F      		mov r25,r24
 223 0006 9E7F      		andi r25,lo8(-2)
 142:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 224               		.loc 1 142 6 view .LVU55
 225 0008 01F4      		brne .L9
 143:quantum/rgblight.c ****   }
 226               		.loc 1 143 5 is_stmt 1 view .LVU56
 143:quantum/rgblight.c ****   }
 227               		.loc 1 143 26 is_stmt 0 view .LVU57
 228 000a 8170      		andi r24,lo8(1)
 229 000c 8260      		ori r24,lo8(2)
 230               	.L11:
 146:quantum/rgblight.c ****   }
 231               		.loc 1 146 26 view .LVU58
 232 000e 8093 0000 		sts rgblight_config,r24
 149:quantum/rgblight.c ****     rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 233               		.loc 1 149 3 is_stmt 1 view .LVU59
 234               	.L8:
 235               	/* epilogue start */
 152:quantum/rgblight.c **** 
 236               		.loc 1 152 1 is_stmt 0 view .LVU60
 237 0012 0895      		ret
 238               	.L9:
 145:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODES;
 239               		.loc 1 145 8 is_stmt 1 view .LVU61
 145:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODES;
 240               		.loc 1 145 11 is_stmt 0 view .LVU62
 241 0014 8A34      		cpi r24,lo8(74)
 242 0016 00F0      		brlo .L8
 146:quantum/rgblight.c ****   }
 243               		.loc 1 146 5 is_stmt 1 view .LVU63
 146:quantum/rgblight.c ****   }
 244               		.loc 1 146 26 is_stmt 0 view .LVU64
 245 0018 8170      		andi r24,lo8(1)
 246 001a 8864      		ori r24,lo8(72)
 247 001c 00C0      		rjmp .L11
 248               		.cfi_endproc
 249               	.LFE85:
 251               		.section	.text.eeconfig_read_rgblight,"ax",@progbits
 252               	.global	eeconfig_read_rgblight
 254               	eeconfig_read_rgblight:
 255               	.LFB86:
 154:quantum/rgblight.c ****   #if defined(__AVR__) || defined(STM32_EEPROM_ENABLE) || defined(PROTOCOL_ARM_ATSAM) || defined(EE
 256               		.loc 1 154 39 is_stmt 1 view -0
 257               		.cfi_startproc
 258               	/* prologue: function */
 259               	/* frame size = 0 */
 260               	/* stack size = 0 */
 261               	.L__stack_usage = 0
 156:quantum/rgblight.c ****   #else
 262               		.loc 1 156 5 view .LVU66
 156:quantum/rgblight.c ****   #else
 263               		.loc 1 156 12 is_stmt 0 view .LVU67
 264 0000 88E0      		ldi r24,lo8(8)
 265 0002 90E0      		ldi r25,0
 266 0004 0C94 0000 		jmp eeprom_read_dword
 267               	.LVL14:
 268               		.cfi_endproc
 269               	.LFE86:
 271               		.section	.text.eeconfig_update_rgblight,"ax",@progbits
 272               	.global	eeconfig_update_rgblight
 274               	eeconfig_update_rgblight:
 275               	.LVL15:
 276               	.LFB87:
 162:quantum/rgblight.c ****   #if defined(__AVR__) || defined(STM32_EEPROM_ENABLE) || defined(PROTOCOL_ARM_ATSAM) || defined(EE
 277               		.loc 1 162 45 is_stmt 1 view -0
 278               		.cfi_startproc
 162:quantum/rgblight.c ****   #if defined(__AVR__) || defined(STM32_EEPROM_ENABLE) || defined(PROTOCOL_ARM_ATSAM) || defined(EE
 279               		.loc 1 162 45 is_stmt 0 view .LVU69
 280 0000 CF92      		push r12
 281               	.LCFI2:
 282               		.cfi_def_cfa_offset 3
 283               		.cfi_offset 12, -2
 284 0002 DF92      		push r13
 285               	.LCFI3:
 286               		.cfi_def_cfa_offset 4
 287               		.cfi_offset 13, -3
 288 0004 EF92      		push r14
 289               	.LCFI4:
 290               		.cfi_def_cfa_offset 5
 291               		.cfi_offset 14, -4
 292 0006 FF92      		push r15
 293               	.LCFI5:
 294               		.cfi_def_cfa_offset 6
 295               		.cfi_offset 15, -5
 296               	/* prologue: function */
 297               	/* frame size = 0 */
 298               	/* stack size = 4 */
 299               	.L__stack_usage = 4
 300 0008 6B01      		movw r12,r22
 301 000a 7C01      		movw r14,r24
 164:quantum/rgblight.c ****     eeprom_update_dword(EECONFIG_RGBLIGHT, val);
 302               		.loc 1 164 5 is_stmt 1 view .LVU70
 303 000c 0E94 0000 		call rgblight_check_config
 304               	.LVL16:
 165:quantum/rgblight.c ****   #endif
 305               		.loc 1 165 5 view .LVU71
 306 0010 B701      		movw r22,r14
 307 0012 A601      		movw r20,r12
 308 0014 88E0      		ldi r24,lo8(8)
 309 0016 90E0      		ldi r25,0
 310               	/* epilogue start */
 167:quantum/rgblight.c **** 
 311               		.loc 1 167 1 is_stmt 0 view .LVU72
 312 0018 FF90      		pop r15
 313 001a EF90      		pop r14
 314 001c DF90      		pop r13
 315 001e CF90      		pop r12
 165:quantum/rgblight.c ****   #endif
 316               		.loc 1 165 5 view .LVU73
 317 0020 0C94 0000 		jmp eeprom_update_dword
 318               	.LVL17:
 319               		.cfi_endproc
 320               	.LFE87:
 322               		.section	.text.eeconfig_update_rgblight_default,"ax",@progbits
 323               	.global	eeconfig_update_rgblight_default
 325               	eeconfig_update_rgblight_default:
 326               	.LFB88:
 169:quantum/rgblight.c ****   rgblight_config.enable = 1;
 327               		.loc 1 169 45 is_stmt 1 view -0
 328               		.cfi_startproc
 329               	/* prologue: function */
 330               	/* frame size = 0 */
 331               	/* stack size = 0 */
 332               	.L__stack_usage = 0
 170:quantum/rgblight.c ****   rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 333               		.loc 1 170 3 view .LVU75
 171:quantum/rgblight.c ****   rgblight_config.hue = 0;
 334               		.loc 1 171 3 view .LVU76
 172:quantum/rgblight.c ****   rgblight_config.sat = UINT8_MAX;
 335               		.loc 1 172 3 view .LVU77
 173:quantum/rgblight.c ****   rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 336               		.loc 1 173 3 view .LVU78
 174:quantum/rgblight.c ****   rgblight_config.speed = 0;
 337               		.loc 1 174 3 view .LVU79
 175:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 338               		.loc 1 175 3 view .LVU80
 170:quantum/rgblight.c ****   rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 339               		.loc 1 170 26 is_stmt 0 view .LVU81
 340 0000 E0E0      		ldi r30,lo8(rgblight_config)
 341 0002 F0E0      		ldi r31,hi8(rgblight_config)
 342 0004 83E0      		ldi r24,lo8(3)
 343 0006 8083      		st Z,r24
 172:quantum/rgblight.c ****   rgblight_config.sat = UINT8_MAX;
 344               		.loc 1 172 23 view .LVU82
 345 0008 1182      		std Z+1,__zero_reg__
 173:quantum/rgblight.c ****   rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 346               		.loc 1 173 23 view .LVU83
 347 000a 8FEF      		ldi r24,lo8(-1)
 348 000c 8283      		std Z+2,r24
 174:quantum/rgblight.c ****   rgblight_config.speed = 0;
 349               		.loc 1 174 23 view .LVU84
 350 000e 8383      		std Z+3,r24
 175:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 351               		.loc 1 175 25 view .LVU85
 352 0010 1482      		std Z+4,__zero_reg__
 176:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 353               		.loc 1 176 37 is_stmt 1 view .LVU86
 177:quantum/rgblight.c **** }
 354               		.loc 1 177 3 view .LVU87
 355 0012 6081      		ld r22,Z
 356 0014 7181      		ldd r23,Z+1
 357 0016 8281      		ldd r24,Z+2
 358 0018 9381      		ldd r25,Z+3
 359 001a 0C94 0000 		jmp eeconfig_update_rgblight
 360               	.LVL18:
 361               		.cfi_endproc
 362               	.LFE88:
 364               		.section	.text.eeconfig_debug_rgblight,"ax",@progbits
 365               	.global	eeconfig_debug_rgblight
 367               	eeconfig_debug_rgblight:
 368               	.LFB89:
 180:quantum/rgblight.c ****   dprintf("rgblight_config EEPROM:\n");
 369               		.loc 1 180 36 view -0
 370               		.cfi_startproc
 371               	/* prologue: function */
 372               	/* frame size = 0 */
 373               	/* stack size = 0 */
 374               	.L__stack_usage = 0
 181:quantum/rgblight.c ****   dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 375               		.loc 1 181 3 view .LVU89
 181:quantum/rgblight.c ****   dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 376               		.loc 1 181 3 view .LVU90
 377 0000 8091 0000 		lds r24,debug_config
 378 0004 80FF      		sbrs r24,0
 379 0006 00C0      		rjmp .L15
 181:quantum/rgblight.c ****   dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 380               		.loc 1 181 3 discriminator 1 view .LVU91
 381               	.LBB24:
 181:quantum/rgblight.c ****   dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 382               		.loc 1 181 3 discriminator 1 view .LVU92
 181:quantum/rgblight.c ****   dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 383               		.loc 1 181 3 discriminator 1 view .LVU93
 384               	.LBE24:
 385 0008 80E0      		ldi r24,lo8(__c.2895)
 386 000a 90E0      		ldi r25,hi8(__c.2895)
 387 000c 9F93      		push r25
 388               	.LCFI6:
 389               		.cfi_def_cfa_offset 3
 390 000e 8F93      		push r24
 391               	.LCFI7:
 392               		.cfi_def_cfa_offset 4
 393 0010 0E94 0000 		call __xprintf
 394               	.LVL19:
 182:quantum/rgblight.c ****   dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 395               		.loc 1 182 3 discriminator 1 view .LVU94
 182:quantum/rgblight.c ****   dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 396               		.loc 1 182 3 discriminator 1 view .LVU95
 397 0014 8091 0000 		lds r24,debug_config
 398 0018 0F90      		pop __tmp_reg__
 399 001a 0F90      		pop __tmp_reg__
 400               	.LCFI8:
 401               		.cfi_def_cfa_offset 2
 402 001c 80FF      		sbrs r24,0
 403 001e 00C0      		rjmp .L15
 182:quantum/rgblight.c ****   dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 404               		.loc 1 182 3 discriminator 1 view .LVU96
 405               	.LBB25:
 182:quantum/rgblight.c ****   dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 406               		.loc 1 182 3 discriminator 1 view .LVU97
 182:quantum/rgblight.c ****   dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 407               		.loc 1 182 3 discriminator 1 view .LVU98
 408               	.LBE25:
 409 0020 8091 0000 		lds r24,rgblight_config
 410 0024 8170      		andi r24,1
 411 0026 1F92      		push __zero_reg__
 412               	.LCFI9:
 413               		.cfi_def_cfa_offset 3
 414 0028 8F93      		push r24
 415               	.LCFI10:
 416               		.cfi_def_cfa_offset 4
 417 002a 80E0      		ldi r24,lo8(__c.2897)
 418 002c 90E0      		ldi r25,hi8(__c.2897)
 419 002e 9F93      		push r25
 420               	.LCFI11:
 421               		.cfi_def_cfa_offset 5
 422 0030 8F93      		push r24
 423               	.LCFI12:
 424               		.cfi_def_cfa_offset 6
 425 0032 0E94 0000 		call __xprintf
 426               	.LVL20:
 183:quantum/rgblight.c ****   dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 427               		.loc 1 183 3 discriminator 1 view .LVU99
 183:quantum/rgblight.c ****   dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 428               		.loc 1 183 3 discriminator 1 view .LVU100
 429 0036 8091 0000 		lds r24,debug_config
 430 003a 0F90      		pop __tmp_reg__
 431 003c 0F90      		pop __tmp_reg__
 432 003e 0F90      		pop __tmp_reg__
 433 0040 0F90      		pop __tmp_reg__
 434               	.LCFI13:
 435               		.cfi_def_cfa_offset 2
 436 0042 80FF      		sbrs r24,0
 437 0044 00C0      		rjmp .L15
 183:quantum/rgblight.c ****   dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 438               		.loc 1 183 3 discriminator 1 view .LVU101
 439               	.LBB26:
 183:quantum/rgblight.c ****   dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 440               		.loc 1 183 3 discriminator 1 view .LVU102
 183:quantum/rgblight.c ****   dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 441               		.loc 1 183 3 discriminator 1 view .LVU103
 442               	.LBE26:
 443 0046 8091 0000 		lds r24,rgblight_config
 444 004a 8695      		lsr r24
 445 004c 1F92      		push __zero_reg__
 446               	.LCFI14:
 447               		.cfi_def_cfa_offset 3
 448 004e 8F93      		push r24
 449               	.LCFI15:
 450               		.cfi_def_cfa_offset 4
 451 0050 80E0      		ldi r24,lo8(__c.2899)
 452 0052 90E0      		ldi r25,hi8(__c.2899)
 453 0054 9F93      		push r25
 454               	.LCFI16:
 455               		.cfi_def_cfa_offset 5
 456 0056 8F93      		push r24
 457               	.LCFI17:
 458               		.cfi_def_cfa_offset 6
 459 0058 0E94 0000 		call __xprintf
 460               	.LVL21:
 184:quantum/rgblight.c ****   dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 461               		.loc 1 184 3 discriminator 1 view .LVU104
 184:quantum/rgblight.c ****   dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 462               		.loc 1 184 3 discriminator 1 view .LVU105
 463 005c 8091 0000 		lds r24,debug_config
 464 0060 0F90      		pop __tmp_reg__
 465 0062 0F90      		pop __tmp_reg__
 466 0064 0F90      		pop __tmp_reg__
 467 0066 0F90      		pop __tmp_reg__
 468               	.LCFI18:
 469               		.cfi_def_cfa_offset 2
 470 0068 80FF      		sbrs r24,0
 471 006a 00C0      		rjmp .L15
 184:quantum/rgblight.c ****   dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 472               		.loc 1 184 3 discriminator 1 view .LVU106
 473               	.LBB27:
 184:quantum/rgblight.c ****   dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 474               		.loc 1 184 3 discriminator 1 view .LVU107
 184:quantum/rgblight.c ****   dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 475               		.loc 1 184 3 discriminator 1 view .LVU108
 476               	.LBE27:
 477 006c 8091 0000 		lds r24,rgblight_config+1
 478 0070 1F92      		push __zero_reg__
 479               	.LCFI19:
 480               		.cfi_def_cfa_offset 3
 481 0072 8F93      		push r24
 482               	.LCFI20:
 483               		.cfi_def_cfa_offset 4
 484 0074 80E0      		ldi r24,lo8(__c.2901)
 485 0076 90E0      		ldi r25,hi8(__c.2901)
 486 0078 9F93      		push r25
 487               	.LCFI21:
 488               		.cfi_def_cfa_offset 5
 489 007a 8F93      		push r24
 490               	.LCFI22:
 491               		.cfi_def_cfa_offset 6
 492 007c 0E94 0000 		call __xprintf
 493               	.LVL22:
 185:quantum/rgblight.c ****   dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 494               		.loc 1 185 3 discriminator 1 view .LVU109
 185:quantum/rgblight.c ****   dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 495               		.loc 1 185 3 discriminator 1 view .LVU110
 496 0080 8091 0000 		lds r24,debug_config
 497 0084 0F90      		pop __tmp_reg__
 498 0086 0F90      		pop __tmp_reg__
 499 0088 0F90      		pop __tmp_reg__
 500 008a 0F90      		pop __tmp_reg__
 501               	.LCFI23:
 502               		.cfi_def_cfa_offset 2
 503 008c 80FF      		sbrs r24,0
 504 008e 00C0      		rjmp .L15
 185:quantum/rgblight.c ****   dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 505               		.loc 1 185 3 discriminator 1 view .LVU111
 506               	.LBB28:
 185:quantum/rgblight.c ****   dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 507               		.loc 1 185 3 discriminator 1 view .LVU112
 185:quantum/rgblight.c ****   dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 508               		.loc 1 185 3 discriminator 1 view .LVU113
 509               	.LBE28:
 510 0090 8091 0000 		lds r24,rgblight_config+2
 511 0094 1F92      		push __zero_reg__
 512               	.LCFI24:
 513               		.cfi_def_cfa_offset 3
 514 0096 8F93      		push r24
 515               	.LCFI25:
 516               		.cfi_def_cfa_offset 4
 517 0098 80E0      		ldi r24,lo8(__c.2903)
 518 009a 90E0      		ldi r25,hi8(__c.2903)
 519 009c 9F93      		push r25
 520               	.LCFI26:
 521               		.cfi_def_cfa_offset 5
 522 009e 8F93      		push r24
 523               	.LCFI27:
 524               		.cfi_def_cfa_offset 6
 525 00a0 0E94 0000 		call __xprintf
 526               	.LVL23:
 186:quantum/rgblight.c ****   dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 527               		.loc 1 186 3 discriminator 1 view .LVU114
 186:quantum/rgblight.c ****   dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 528               		.loc 1 186 3 discriminator 1 view .LVU115
 529 00a4 8091 0000 		lds r24,debug_config
 530 00a8 0F90      		pop __tmp_reg__
 531 00aa 0F90      		pop __tmp_reg__
 532 00ac 0F90      		pop __tmp_reg__
 533 00ae 0F90      		pop __tmp_reg__
 534               	.LCFI28:
 535               		.cfi_def_cfa_offset 2
 536 00b0 80FF      		sbrs r24,0
 537 00b2 00C0      		rjmp .L15
 186:quantum/rgblight.c ****   dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 538               		.loc 1 186 3 discriminator 1 view .LVU116
 539               	.LBB29:
 186:quantum/rgblight.c ****   dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 540               		.loc 1 186 3 discriminator 1 view .LVU117
 186:quantum/rgblight.c ****   dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 541               		.loc 1 186 3 discriminator 1 view .LVU118
 542               	.LBE29:
 543 00b4 8091 0000 		lds r24,rgblight_config+3
 544 00b8 1F92      		push __zero_reg__
 545               	.LCFI29:
 546               		.cfi_def_cfa_offset 3
 547 00ba 8F93      		push r24
 548               	.LCFI30:
 549               		.cfi_def_cfa_offset 4
 550 00bc 80E0      		ldi r24,lo8(__c.2905)
 551 00be 90E0      		ldi r25,hi8(__c.2905)
 552 00c0 9F93      		push r25
 553               	.LCFI31:
 554               		.cfi_def_cfa_offset 5
 555 00c2 8F93      		push r24
 556               	.LCFI32:
 557               		.cfi_def_cfa_offset 6
 558 00c4 0E94 0000 		call __xprintf
 559               	.LVL24:
 187:quantum/rgblight.c **** }
 560               		.loc 1 187 3 discriminator 1 view .LVU119
 187:quantum/rgblight.c **** }
 561               		.loc 1 187 3 discriminator 1 view .LVU120
 562 00c8 8091 0000 		lds r24,debug_config
 563 00cc 0F90      		pop __tmp_reg__
 564 00ce 0F90      		pop __tmp_reg__
 565 00d0 0F90      		pop __tmp_reg__
 566 00d2 0F90      		pop __tmp_reg__
 567               	.LCFI33:
 568               		.cfi_def_cfa_offset 2
 569 00d4 80FF      		sbrs r24,0
 570 00d6 00C0      		rjmp .L15
 187:quantum/rgblight.c **** }
 571               		.loc 1 187 3 discriminator 1 view .LVU121
 572               	.LBB30:
 187:quantum/rgblight.c **** }
 573               		.loc 1 187 3 discriminator 1 view .LVU122
 187:quantum/rgblight.c **** }
 574               		.loc 1 187 3 discriminator 1 view .LVU123
 575               	.LBE30:
 576 00d8 8091 0000 		lds r24,rgblight_config+4
 577 00dc 1F92      		push __zero_reg__
 578               	.LCFI34:
 579               		.cfi_def_cfa_offset 3
 580 00de 8F93      		push r24
 581               	.LCFI35:
 582               		.cfi_def_cfa_offset 4
 583 00e0 80E0      		ldi r24,lo8(__c.2907)
 584 00e2 90E0      		ldi r25,hi8(__c.2907)
 585 00e4 9F93      		push r25
 586               	.LCFI36:
 587               		.cfi_def_cfa_offset 5
 588 00e6 8F93      		push r24
 589               	.LCFI37:
 590               		.cfi_def_cfa_offset 6
 591 00e8 0E94 0000 		call __xprintf
 592               	.LVL25:
 593 00ec 0F90      		pop __tmp_reg__
 594 00ee 0F90      		pop __tmp_reg__
 595 00f0 0F90      		pop __tmp_reg__
 596 00f2 0F90      		pop __tmp_reg__
 597               	.LCFI38:
 598               		.cfi_def_cfa_offset 2
 599               	.L15:
 600               	/* epilogue start */
 188:quantum/rgblight.c **** 
 601               		.loc 1 188 1 is_stmt 0 view .LVU124
 602 00f4 0895      		ret
 603               		.cfi_endproc
 604               	.LFE89:
 606               		.section	.text.rgblight_read_dword,"ax",@progbits
 607               	.global	rgblight_read_dword
 609               	rgblight_read_dword:
 610               	.LFB91:
 227:quantum/rgblight.c ****   return rgblight_config.raw;
 611               		.loc 1 227 36 is_stmt 1 view -0
 612               		.cfi_startproc
 613               	/* prologue: function */
 614               	/* frame size = 0 */
 615               	/* stack size = 0 */
 616               	.L__stack_usage = 0
 228:quantum/rgblight.c **** }
 617               		.loc 1 228 3 view .LVU126
 228:quantum/rgblight.c **** }
 618               		.loc 1 228 25 is_stmt 0 view .LVU127
 619 0000 6091 0000 		lds r22,rgblight_config
 620 0004 7091 0000 		lds r23,rgblight_config+1
 621 0008 8091 0000 		lds r24,rgblight_config+2
 622 000c 9091 0000 		lds r25,rgblight_config+3
 623               	/* epilogue start */
 229:quantum/rgblight.c **** 
 624               		.loc 1 229 1 view .LVU128
 625 0010 0895      		ret
 626               		.cfi_endproc
 627               	.LFE91:
 629               		.section	.text.rgblight_get_mode,"ax",@progbits
 630               	.global	rgblight_get_mode
 632               	rgblight_get_mode:
 633               	.LFB101:
 288:quantum/rgblight.c ****   if (!rgblight_config.enable) {
 634               		.loc 1 288 33 is_stmt 1 view -0
 635               		.cfi_startproc
 636               	/* prologue: function */
 637               	/* frame size = 0 */
 638               	/* stack size = 0 */
 639               	.L__stack_usage = 0
 289:quantum/rgblight.c ****     return false;
 640               		.loc 1 289 3 view .LVU130
 289:quantum/rgblight.c ****     return false;
 641               		.loc 1 289 23 is_stmt 0 view .LVU131
 642 0000 8091 0000 		lds r24,rgblight_config
 289:quantum/rgblight.c ****     return false;
 643               		.loc 1 289 6 view .LVU132
 644 0004 80FF      		sbrs r24,0
 645 0006 00C0      		rjmp .L47
 293:quantum/rgblight.c **** }
 646               		.loc 1 293 3 is_stmt 1 view .LVU133
 293:quantum/rgblight.c **** }
 647               		.loc 1 293 25 is_stmt 0 view .LVU134
 648 0008 8695      		lsr r24
 649 000a 0895      		ret
 650               	.L47:
 290:quantum/rgblight.c ****   }
 651               		.loc 1 290 12 view .LVU135
 652 000c 80E0      		ldi r24,0
 653               	/* epilogue start */
 294:quantum/rgblight.c **** 
 654               		.loc 1 294 1 view .LVU136
 655 000e 0895      		ret
 656               		.cfi_endproc
 657               	.LFE101:
 659               		.section	.text.rgblight_increase_speed,"ax",@progbits
 660               	.global	rgblight_increase_speed
 662               	rgblight_increase_speed:
 663               	.LFB129:
 455:quantum/rgblight.c ****     if (rgblight_config.speed < 3)
 664               		.loc 1 455 36 is_stmt 1 view -0
 665               		.cfi_startproc
 666               	/* prologue: function */
 667               	/* frame size = 0 */
 668               	/* stack size = 0 */
 669               	.L__stack_usage = 0
 456:quantum/rgblight.c ****         rgblight_config.speed++;
 670               		.loc 1 456 5 view .LVU138
 456:quantum/rgblight.c ****         rgblight_config.speed++;
 671               		.loc 1 456 24 is_stmt 0 view .LVU139
 672 0000 8091 0000 		lds r24,rgblight_config+4
 456:quantum/rgblight.c ****         rgblight_config.speed++;
 673               		.loc 1 456 8 view .LVU140
 674 0004 8330      		cpi r24,lo8(3)
 675 0006 00F4      		brsh .L49
 457:quantum/rgblight.c ****     //RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 676               		.loc 1 457 9 is_stmt 1 view .LVU141
 457:quantum/rgblight.c ****     //RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 677               		.loc 1 457 30 is_stmt 0 view .LVU142
 678 0008 8F5F      		subi r24,lo8(-(1))
 679 000a 8093 0000 		sts rgblight_config+4,r24
 680               	.L49:
 459:quantum/rgblight.c **** }
 681               		.loc 1 459 5 is_stmt 1 view .LVU143
 682 000e 6091 0000 		lds r22,rgblight_config
 683 0012 7091 0000 		lds r23,rgblight_config+1
 684 0016 8091 0000 		lds r24,rgblight_config+2
 685 001a 9091 0000 		lds r25,rgblight_config+3
 686 001e 0C94 0000 		jmp eeconfig_update_rgblight
 687               	.LVL26:
 688               		.cfi_endproc
 689               	.LFE129:
 691               		.section	.text.rgblight_decrease_speed,"ax",@progbits
 692               	.global	rgblight_decrease_speed
 694               	rgblight_decrease_speed:
 695               	.LFB130:
 462:quantum/rgblight.c ****     if (rgblight_config.speed > 0)
 696               		.loc 1 462 36 view -0
 697               		.cfi_startproc
 698               	/* prologue: function */
 699               	/* frame size = 0 */
 700               	/* stack size = 0 */
 701               	.L__stack_usage = 0
 463:quantum/rgblight.c ****         rgblight_config.speed--;
 702               		.loc 1 463 5 view .LVU145
 463:quantum/rgblight.c ****         rgblight_config.speed--;
 703               		.loc 1 463 24 is_stmt 0 view .LVU146
 704 0000 8091 0000 		lds r24,rgblight_config+4
 463:quantum/rgblight.c ****         rgblight_config.speed--;
 705               		.loc 1 463 8 view .LVU147
 706 0004 8823      		tst r24
 707 0006 01F0      		breq .L51
 464:quantum/rgblight.c ****     //RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 708               		.loc 1 464 9 is_stmt 1 view .LVU148
 464:quantum/rgblight.c ****     //RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 709               		.loc 1 464 30 is_stmt 0 view .LVU149
 710 0008 8150      		subi r24,lo8(-(-1))
 711 000a 8093 0000 		sts rgblight_config+4,r24
 712               	.L51:
 466:quantum/rgblight.c **** }
 713               		.loc 1 466 5 is_stmt 1 view .LVU150
 714 000e 6091 0000 		lds r22,rgblight_config
 715 0012 7091 0000 		lds r23,rgblight_config+1
 716 0016 8091 0000 		lds r24,rgblight_config+2
 717 001a 9091 0000 		lds r25,rgblight_config+3
 718 001e 0C94 0000 		jmp eeconfig_update_rgblight
 719               	.LVL27:
 720               		.cfi_endproc
 721               	.LFE130:
 723               		.section	.text.rgblight_get_hue,"ax",@progbits
 724               	.global	rgblight_get_hue
 726               	rgblight_get_hue:
 727               	.LFB135:
 559:quantum/rgblight.c ****   return rgblight_config.hue;
 728               		.loc 1 559 32 view -0
 729               		.cfi_startproc
 730               	/* prologue: function */
 731               	/* frame size = 0 */
 732               	/* stack size = 0 */
 733               	.L__stack_usage = 0
 560:quantum/rgblight.c **** }
 734               		.loc 1 560 3 view .LVU152
 561:quantum/rgblight.c **** 
 735               		.loc 1 561 1 is_stmt 0 view .LVU153
 736 0000 8091 0000 		lds r24,rgblight_config+1
 737               	/* epilogue start */
 738 0004 0895      		ret
 739               		.cfi_endproc
 740               	.LFE135:
 742               		.section	.text.rgblight_get_sat,"ax",@progbits
 743               	.global	rgblight_get_sat
 745               	rgblight_get_sat:
 746               	.LFB136:
 563:quantum/rgblight.c ****   return rgblight_config.sat;
 747               		.loc 1 563 32 is_stmt 1 view -0
 748               		.cfi_startproc
 749               	/* prologue: function */
 750               	/* frame size = 0 */
 751               	/* stack size = 0 */
 752               	.L__stack_usage = 0
 564:quantum/rgblight.c **** }
 753               		.loc 1 564 3 view .LVU155
 565:quantum/rgblight.c **** 
 754               		.loc 1 565 1 is_stmt 0 view .LVU156
 755 0000 8091 0000 		lds r24,rgblight_config+2
 756               	/* epilogue start */
 757 0004 0895      		ret
 758               		.cfi_endproc
 759               	.LFE136:
 761               		.section	.text.rgblight_get_val,"ax",@progbits
 762               	.global	rgblight_get_val
 764               	rgblight_get_val:
 765               	.LFB137:
 567:quantum/rgblight.c ****   return rgblight_config.val;
 766               		.loc 1 567 32 is_stmt 1 view -0
 767               		.cfi_startproc
 768               	/* prologue: function */
 769               	/* frame size = 0 */
 770               	/* stack size = 0 */
 771               	.L__stack_usage = 0
 568:quantum/rgblight.c **** }
 772               		.loc 1 568 3 view .LVU158
 569:quantum/rgblight.c **** 
 773               		.loc 1 569 1 is_stmt 0 view .LVU159
 774 0000 8091 0000 		lds r24,rgblight_config+3
 775               	/* epilogue start */
 776 0004 0895      		ret
 777               		.cfi_endproc
 778               	.LFE137:
 780               		.section	.text.rgblight_set,"ax",@progbits
 781               	.global	rgblight_set
 783               	rgblight_set:
 784               	.LFB148:
 651:quantum/rgblight.c ****   LED_TYPE *start_led;
 785               		.loc 1 651 25 is_stmt 1 view -0
 786               		.cfi_startproc
 787               	/* prologue: function */
 788               	/* frame size = 0 */
 789               	/* stack size = 0 */
 790               	.L__stack_usage = 0
 652:quantum/rgblight.c ****   uint16_t num_leds = clipping_num_leds;
 791               		.loc 1 652 3 view .LVU161
 653:quantum/rgblight.c **** 
 792               		.loc 1 653 3 view .LVU162
 653:quantum/rgblight.c **** 
 793               		.loc 1 653 12 is_stmt 0 view .LVU163
 794 0000 6091 0000 		lds r22,clipping_num_leds
 795 0004 70E0      		ldi r23,0
 796               	.LVL28:
 655:quantum/rgblight.c ****     for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 797               		.loc 1 655 3 is_stmt 1 view .LVU164
 655:quantum/rgblight.c ****     for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 798               		.loc 1 655 23 is_stmt 0 view .LVU165
 799 0006 8091 0000 		lds r24,rgblight_config
 655:quantum/rgblight.c ****     for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 800               		.loc 1 655 6 view .LVU166
 801 000a 80FF      		sbrs r24,0
 802 000c 00C0      		rjmp .L59
 803               	.L62:
 669:quantum/rgblight.c **** #endif
 804               		.loc 1 669 3 is_stmt 1 view .LVU167
 805               	.LVL29:
 674:quantum/rgblight.c **** #endif
 806               		.loc 1 674 3 view .LVU168
 669:quantum/rgblight.c **** #endif
 807               		.loc 1 669 19 is_stmt 0 view .LVU169
 808 000e 8091 0000 		lds r24,clipping_start_pos
 809 0012 23E0      		ldi r18,lo8(3)
 810 0014 829F      		mul r24,r18
 811 0016 C001      		movw r24,r0
 812 0018 1124      		clr __zero_reg__
 674:quantum/rgblight.c **** #endif
 813               		.loc 1 674 3 view .LVU170
 814 001a 8050      		subi r24,lo8(-(led))
 815 001c 9040      		sbci r25,hi8(-(led))
 816 001e 0C94 0000 		jmp ws2812_setleds
 817               	.LVL30:
 818               	.L59:
 656:quantum/rgblight.c ****       led[i].r = 0;
 819               		.loc 1 656 5 is_stmt 1 view .LVU171
 820               	.LBB31:
 656:quantum/rgblight.c ****       led[i].r = 0;
 821               		.loc 1 656 10 view .LVU172
 656:quantum/rgblight.c ****       led[i].r = 0;
 822               		.loc 1 656 18 is_stmt 0 view .LVU173
 823 0022 8091 0000 		lds r24,effect_start_pos
 824               	.LVL31:
 656:quantum/rgblight.c ****       led[i].r = 0;
 825               		.loc 1 656 42 view .LVU174
 826 0026 9091 0000 		lds r25,effect_end_pos
 827 002a 23E0      		ldi r18,lo8(3)
 828 002c 829F      		mul r24,r18
 829 002e F001      		movw r30,r0
 830 0030 1124      		clr __zero_reg__
 831 0032 E050      		subi r30,lo8(-(led))
 832 0034 F040      		sbci r31,hi8(-(led))
 833               	.L60:
 656:quantum/rgblight.c ****       led[i].r = 0;
 834               		.loc 1 656 5 discriminator 1 view .LVU175
 835 0036 8917      		cp r24,r25
 836 0038 00F4      		brsh .L62
 657:quantum/rgblight.c ****       led[i].g = 0;
 837               		.loc 1 657 7 is_stmt 1 discriminator 3 view .LVU176
 657:quantum/rgblight.c ****       led[i].g = 0;
 838               		.loc 1 657 16 is_stmt 0 discriminator 3 view .LVU177
 839 003a 1182      		std Z+1,__zero_reg__
 658:quantum/rgblight.c ****       led[i].b = 0;
 840               		.loc 1 658 7 is_stmt 1 discriminator 3 view .LVU178
 658:quantum/rgblight.c ****       led[i].b = 0;
 841               		.loc 1 658 16 is_stmt 0 discriminator 3 view .LVU179
 842 003c 1082      		st Z,__zero_reg__
 659:quantum/rgblight.c ****     }
 843               		.loc 1 659 7 is_stmt 1 discriminator 3 view .LVU180
 659:quantum/rgblight.c ****     }
 844               		.loc 1 659 16 is_stmt 0 discriminator 3 view .LVU181
 845 003e 1282      		std Z+2,__zero_reg__
 656:quantum/rgblight.c ****       led[i].r = 0;
 846               		.loc 1 656 61 discriminator 3 view .LVU182
 847 0040 8F5F      		subi r24,lo8(-(1))
 848               	.LVL32:
 656:quantum/rgblight.c ****       led[i].r = 0;
 849               		.loc 1 656 61 discriminator 3 view .LVU183
 850 0042 3396      		adiw r30,3
 851 0044 00C0      		rjmp .L60
 852               	.LBE31:
 853               		.cfi_endproc
 854               	.LFE148:
 856               		.section	.text.rgblight_setrgb,"ax",@progbits
 857               	.global	rgblight_setrgb
 859               	rgblight_setrgb:
 860               	.LVL33:
 861               	.LFB138:
 571:quantum/rgblight.c ****   if (!rgblight_config.enable) { return; }
 862               		.loc 1 571 55 is_stmt 1 view -0
 863               		.cfi_startproc
 864               	/* prologue: function */
 865               	/* frame size = 0 */
 866               	/* stack size = 0 */
 867               	.L__stack_usage = 0
 572:quantum/rgblight.c **** 
 868               		.loc 1 572 3 view .LVU185
 572:quantum/rgblight.c **** 
 869               		.loc 1 572 23 is_stmt 0 view .LVU186
 870 0000 9091 0000 		lds r25,rgblight_config
 572:quantum/rgblight.c **** 
 871               		.loc 1 572 6 view .LVU187
 872 0004 90FF      		sbrs r25,0
 873 0006 00C0      		rjmp .L63
 574:quantum/rgblight.c ****     led[i].r = r;
 874               		.loc 1 574 3 is_stmt 1 view .LVU188
 875               	.LBB32:
 574:quantum/rgblight.c ****     led[i].r = r;
 876               		.loc 1 574 8 view .LVU189
 574:quantum/rgblight.c ****     led[i].r = r;
 877               		.loc 1 574 16 is_stmt 0 view .LVU190
 878 0008 9091 0000 		lds r25,effect_start_pos
 879               	.LVL34:
 574:quantum/rgblight.c ****     led[i].r = r;
 880               		.loc 1 574 40 view .LVU191
 881 000c 2091 0000 		lds r18,effect_end_pos
 882 0010 33E0      		ldi r19,lo8(3)
 883 0012 939F      		mul r25,r19
 884 0014 F001      		movw r30,r0
 885 0016 1124      		clr __zero_reg__
 886 0018 E050      		subi r30,lo8(-(led))
 887 001a F040      		sbci r31,hi8(-(led))
 888               	.L65:
 574:quantum/rgblight.c ****     led[i].r = r;
 889               		.loc 1 574 3 discriminator 1 view .LVU192
 890 001c 9217      		cp r25,r18
 891 001e 00F0      		brlo .L66
 574:quantum/rgblight.c ****     led[i].r = r;
 892               		.loc 1 574 3 discriminator 1 view .LVU193
 893               	.LBE32:
 579:quantum/rgblight.c **** }
 894               		.loc 1 579 3 is_stmt 1 view .LVU194
 895 0020 0C94 0000 		jmp rgblight_set
 896               	.LVL35:
 897               	.L66:
 898               	.LBB33:
 575:quantum/rgblight.c ****     led[i].g = g;
 899               		.loc 1 575 5 discriminator 3 view .LVU195
 575:quantum/rgblight.c ****     led[i].g = g;
 900               		.loc 1 575 14 is_stmt 0 discriminator 3 view .LVU196
 901 0024 8183      		std Z+1,r24
 576:quantum/rgblight.c ****     led[i].b = b;
 902               		.loc 1 576 5 is_stmt 1 discriminator 3 view .LVU197
 576:quantum/rgblight.c ****     led[i].b = b;
 903               		.loc 1 576 14 is_stmt 0 discriminator 3 view .LVU198
 904 0026 6083      		st Z,r22
 577:quantum/rgblight.c ****   }
 905               		.loc 1 577 5 is_stmt 1 discriminator 3 view .LVU199
 577:quantum/rgblight.c ****   }
 906               		.loc 1 577 14 is_stmt 0 discriminator 3 view .LVU200
 907 0028 4283      		std Z+2,r20
 574:quantum/rgblight.c ****     led[i].r = r;
 908               		.loc 1 574 59 discriminator 3 view .LVU201
 909 002a 9F5F      		subi r25,lo8(-(1))
 910               	.LVL36:
 574:quantum/rgblight.c ****     led[i].r = r;
 911               		.loc 1 574 59 discriminator 3 view .LVU202
 912 002c 3396      		adiw r30,3
 913 002e 00C0      		rjmp .L65
 914               	.LVL37:
 915               	.L63:
 916               	/* epilogue start */
 574:quantum/rgblight.c ****     led[i].r = r;
 917               		.loc 1 574 59 discriminator 3 view .LVU203
 918               	.LBE33:
 580:quantum/rgblight.c **** 
 919               		.loc 1 580 1 view .LVU204
 920 0030 0895      		ret
 921               		.cfi_endproc
 922               	.LFE138:
 924               		.section	.text.rgblight_sethsv_noeeprom_old,"ax",@progbits
 925               	.global	rgblight_sethsv_noeeprom_old
 927               	rgblight_sethsv_noeeprom_old:
 928               	.LVL38:
 929               	.LFB131:
 469:quantum/rgblight.c ****   if (rgblight_config.enable) {
 930               		.loc 1 469 74 is_stmt 1 view -0
 931               		.cfi_startproc
 469:quantum/rgblight.c ****   if (rgblight_config.enable) {
 932               		.loc 1 469 74 is_stmt 0 view .LVU206
 933 0000 CF93      		push r28
 934               	.LCFI39:
 935               		.cfi_def_cfa_offset 3
 936               		.cfi_offset 28, -2
 937 0002 DF93      		push r29
 938               	.LCFI40:
 939               		.cfi_def_cfa_offset 4
 940               		.cfi_offset 29, -3
 941 0004 00D0      		rcall .
 942 0006 0F92      		push __tmp_reg__
 943               	.LCFI41:
 944               		.cfi_def_cfa_offset 7
 945 0008 CDB7      		in r28,__SP_L__
 946 000a DEB7      		in r29,__SP_H__
 947               	.LCFI42:
 948               		.cfi_def_cfa_register 28
 949               	/* prologue: function */
 950               	/* frame size = 3 */
 951               	/* stack size = 5 */
 952               	.L__stack_usage = 5
 470:quantum/rgblight.c ****     LED_TYPE tmp_led;
 953               		.loc 1 470 3 is_stmt 1 view .LVU207
 470:quantum/rgblight.c ****     LED_TYPE tmp_led;
 954               		.loc 1 470 7 is_stmt 0 view .LVU208
 955 000c 9091 0000 		lds r25,rgblight_config
 470:quantum/rgblight.c ****     LED_TYPE tmp_led;
 956               		.loc 1 470 6 view .LVU209
 957 0010 90FF      		sbrs r25,0
 958 0012 00C0      		rjmp .L67
 959               	.LBB37:
 471:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 960               		.loc 1 471 5 is_stmt 1 view .LVU210
 472:quantum/rgblight.c ****     rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 961               		.loc 1 472 5 view .LVU211
 962               	.LVL39:
 963               	.LBB38:
 964               	.LBI38:
 127:quantum/rgblight.c ****   sethsv_raw( hue, sat,
 965               		.loc 1 127 6 view .LVU212
 966               	.LBB39:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 967               		.loc 1 128 3 view .LVU213
 968 0014 9E01      		movw r18,r28
 969 0016 2F5F      		subi r18,-1
 970 0018 3F4F      		sbci r19,-1
 971 001a 0E94 0000 		call sethsv_raw
 972               	.LVL40:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 973               		.loc 1 128 3 is_stmt 0 view .LVU214
 974               	.LBE39:
 975               	.LBE38:
 473:quantum/rgblight.c ****   }
 976               		.loc 1 473 5 is_stmt 1 view .LVU215
 977 001e 4B81      		ldd r20,Y+3
 978 0020 6981      		ldd r22,Y+1
 979 0022 8A81      		ldd r24,Y+2
 980 0024 0E94 0000 		call rgblight_setrgb
 981               	.LVL41:
 982               	.L67:
 983               	/* epilogue start */
 984               	.LBE37:
 475:quantum/rgblight.c **** 
 985               		.loc 1 475 1 is_stmt 0 view .LVU216
 986 0028 0F90      		pop __tmp_reg__
 987 002a 0F90      		pop __tmp_reg__
 988 002c 0F90      		pop __tmp_reg__
 989 002e DF91      		pop r29
 990 0030 CF91      		pop r28
 991 0032 0895      		ret
 992               		.cfi_endproc
 993               	.LFE131:
 995               		.section	.text.rgblight_effect_breathing,"ax",@progbits
 996               	.global	rgblight_effect_breathing
 998               	rgblight_effect_breathing:
 999               	.LVL42:
 1000               	.LFB156:
 789:quantum/rgblight.c **** 
 790:quantum/rgblight.c **** void rgblight_task(void) {
 791:quantum/rgblight.c ****   if (rgblight_status.timer_enabled) {
 792:quantum/rgblight.c ****     effect_func_t effect_func = rgblight_effect_dummy;
 793:quantum/rgblight.c ****     uint16_t interval_time = 2000; // dummy interval
 794:quantum/rgblight.c ****     uint8_t delta = rgblight_config.mode - rgblight_status.base_mode;
 795:quantum/rgblight.c ****     animation_status.delta = delta;
 796:quantum/rgblight.c **** 
 797:quantum/rgblight.c ****     // static light mode, do nothing here
 798:quantum/rgblight.c ****     if ( 1 == 0 ) { //dummy
 799:quantum/rgblight.c ****     }
 800:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHING
 801:quantum/rgblight.c ****     else if (rgblight_status.base_mode == RGBLIGHT_MODE_BREATHING) {
 802:quantum/rgblight.c ****       // breathing mode
 803:quantum/rgblight.c ****       interval_time = get_interval_time(&RGBLED_BREATHING_INTERVALS[delta], 1, 100);
 804:quantum/rgblight.c ****       effect_func = rgblight_effect_breathing;
 805:quantum/rgblight.c ****     }
 806:quantum/rgblight.c **** #endif
 807:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 808:quantum/rgblight.c ****     else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_MOOD) {
 809:quantum/rgblight.c ****       // rainbow mood mode
 810:quantum/rgblight.c ****       interval_time = get_interval_time(&RGBLED_RAINBOW_MOOD_INTERVALS[delta], 5, 100);
 811:quantum/rgblight.c ****       effect_func = rgblight_effect_rainbow_mood;
 812:quantum/rgblight.c ****     }
 813:quantum/rgblight.c **** #endif
 814:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 815:quantum/rgblight.c ****     else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_SWIRL) {
 816:quantum/rgblight.c ****       // rainbow swirl mode
 817:quantum/rgblight.c ****       interval_time = get_interval_time(&RGBLED_RAINBOW_SWIRL_INTERVALS[delta / 2], 1, 100);
 818:quantum/rgblight.c ****       effect_func = rgblight_effect_rainbow_swirl;
 819:quantum/rgblight.c ****     }
 820:quantum/rgblight.c **** #endif
 821:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_SNAKE
 822:quantum/rgblight.c ****     else if (rgblight_status.base_mode == RGBLIGHT_MODE_SNAKE) {
 823:quantum/rgblight.c ****       // snake mode
 824:quantum/rgblight.c ****       interval_time = get_interval_time(&RGBLED_SNAKE_INTERVALS[delta / 2], 1, 200);
 825:quantum/rgblight.c ****       effect_func = rgblight_effect_snake;
 826:quantum/rgblight.c ****     }
 827:quantum/rgblight.c **** #endif
 828:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_KNIGHT
 829:quantum/rgblight.c ****     else if (rgblight_status.base_mode == RGBLIGHT_MODE_KNIGHT) {
 830:quantum/rgblight.c ****       // knight mode
 831:quantum/rgblight.c ****       interval_time = get_interval_time(&RGBLED_KNIGHT_INTERVALS[delta], 5, 100);
 832:quantum/rgblight.c ****       effect_func = rgblight_effect_knight;
 833:quantum/rgblight.c ****     }
 834:quantum/rgblight.c **** #endif
 835:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_CHRISTMAS
 836:quantum/rgblight.c ****     else if (rgblight_status.base_mode == RGBLIGHT_MODE_CHRISTMAS) {
 837:quantum/rgblight.c ****       // christmas mode
 838:quantum/rgblight.c ****       interval_time = RGBLIGHT_EFFECT_CHRISTMAS_INTERVAL;
 839:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_christmas;
 840:quantum/rgblight.c ****     }
 841:quantum/rgblight.c **** #endif
 842:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RGB_TEST
 843:quantum/rgblight.c ****     else if (rgblight_status.base_mode == RGBLIGHT_MODE_RGB_TEST) {
 844:quantum/rgblight.c ****       // RGB test mode
 845:quantum/rgblight.c ****       interval_time = pgm_read_word(&RGBLED_RGBTEST_INTERVALS[0]);
 846:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_rgbtest;
 847:quantum/rgblight.c ****     }
 848:quantum/rgblight.c **** #endif
 849:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_ALTERNATING
 850:quantum/rgblight.c ****     else if (rgblight_status.base_mode == RGBLIGHT_MODE_ALTERNATING){
 851:quantum/rgblight.c ****       interval_time = 500;
 852:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_alternating;
 853:quantum/rgblight.c ****     }
 854:quantum/rgblight.c **** #endif
 855:quantum/rgblight.c ****     if (animation_status.restart) {
 856:quantum/rgblight.c ****       animation_status.restart = false;
 857:quantum/rgblight.c ****       animation_status.last_timer = timer_read() - interval_time - 1;
 858:quantum/rgblight.c ****       animation_status.pos16 = 0; // restart signal to local each effect
 859:quantum/rgblight.c ****     }
 860:quantum/rgblight.c ****     if (timer_elapsed(animation_status.last_timer) >= interval_time) {
 861:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 862:quantum/rgblight.c ****       static uint16_t report_last_timer = 0;
 863:quantum/rgblight.c ****       static bool tick_flag = false;
 864:quantum/rgblight.c ****       uint16_t oldpos16;
 865:quantum/rgblight.c ****       if (tick_flag) {
 866:quantum/rgblight.c ****         tick_flag = false;
 867:quantum/rgblight.c ****         if (timer_elapsed(report_last_timer) >= 30000) {
 868:quantum/rgblight.c ****             report_last_timer = timer_read();
 869:quantum/rgblight.c ****             dprintf("rgblight animation tick report to slave\n");
 870:quantum/rgblight.c ****             RGBLIGHT_SPLIT_ANIMATION_TICK;
 871:quantum/rgblight.c ****         }
 872:quantum/rgblight.c ****       }
 873:quantum/rgblight.c ****       oldpos16 = animation_status.pos16;
 874:quantum/rgblight.c **** #endif
 875:quantum/rgblight.c ****       animation_status.last_timer += interval_time;
 876:quantum/rgblight.c ****       effect_func(&animation_status);
 877:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 878:quantum/rgblight.c ****       if (animation_status.pos16 == 0 && oldpos16 != 0) {
 879:quantum/rgblight.c ****           tick_flag = true;
 880:quantum/rgblight.c ****       }
 881:quantum/rgblight.c **** #endif
 882:quantum/rgblight.c ****     }
 883:quantum/rgblight.c ****   }
 884:quantum/rgblight.c **** }
 885:quantum/rgblight.c **** 
 886:quantum/rgblight.c **** #endif /* RGBLIGHT_USE_TIMER */
 887:quantum/rgblight.c **** 
 888:quantum/rgblight.c **** // Effects
 889:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHING
 890:quantum/rgblight.c **** 
 891:quantum/rgblight.c **** #ifndef RGBLIGHT_EFFECT_BREATHE_CENTER
 892:quantum/rgblight.c ****   #ifndef RGBLIGHT_BREATHE_TABLE_SIZE
 893:quantum/rgblight.c ****     #define RGBLIGHT_BREATHE_TABLE_SIZE 256 // 256 or 128 or 64
 894:quantum/rgblight.c ****   #endif
 895:quantum/rgblight.c ****   #include <rgblight_breathe_table.h>
 896:quantum/rgblight.c **** #endif
 897:quantum/rgblight.c **** 
 898:quantum/rgblight.c **** __attribute__ ((weak))
 899:quantum/rgblight.c **** const uint8_t RGBLED_BREATHING_INTERVALS[] PROGMEM = {30, 20, 10, 5};
 900:quantum/rgblight.c **** 
 901:quantum/rgblight.c **** void rgblight_effect_breathing(animation_status_t *anim) {
 1001               		.loc 1 901 58 is_stmt 1 view -0
 1002               		.cfi_startproc
 1003               		.loc 1 901 58 is_stmt 0 view .LVU218
 1004 0000 CF93      		push r28
 1005               	.LCFI43:
 1006               		.cfi_def_cfa_offset 3
 1007               		.cfi_offset 28, -2
 1008 0002 DF93      		push r29
 1009               	.LCFI44:
 1010               		.cfi_def_cfa_offset 4
 1011               		.cfi_offset 29, -3
 1012               	/* prologue: function */
 1013               	/* frame size = 0 */
 1014               	/* stack size = 2 */
 1015               	.L__stack_usage = 2
 1016 0004 EC01      		movw r28,r24
 902:quantum/rgblight.c ****   float val;
 1017               		.loc 1 902 3 is_stmt 1 view .LVU219
 903:quantum/rgblight.c **** 
 904:quantum/rgblight.c ****   // http://sean.voisen.org/blog/2011/10/breathing-led-with-arduino/
 905:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHE_TABLE
 906:quantum/rgblight.c ****   val = pgm_read_byte(&rgblight_effect_breathe_table[anim->pos / table_scale]);
 1018               		.loc 1 906 3 view .LVU220
 1019               	.LBB40:
 1020               		.loc 1 906 9 view .LVU221
 1021               	.LVL43:
 1022               		.loc 1 906 9 view .LVU222
 1023               		.loc 1 906 9 view .LVU223
 1024 0006 EC81      		ldd r30,Y+4
 1025 0008 F0E0      		ldi r31,0
 1026 000a E050      		subi r30,lo8(-(rgblight_effect_breathe_table))
 1027 000c F040      		sbci r31,hi8(-(rgblight_effect_breathe_table))
 1028               	/* #APP */
 1029               	 ;  906 "quantum/rgblight.c" 1
 1030 000e 4491      		lpm r20, Z
 1031               		
 1032               	 ;  0 "" 2
 1033               	.LVL44:
 1034               		.loc 1 906 9 view .LVU224
 1035               		.loc 1 906 9 is_stmt 0 view .LVU225
 1036               	/* #NOAPP */
 1037               	.LBE40:
 907:quantum/rgblight.c **** #else
 908:quantum/rgblight.c ****   val = (exp(sin((anim->pos/255.0)*M_PI)) - RGBLIGHT_EFFECT_BREATHE_CENTER/M_E)*(RGBLIGHT_EFFECT_BR
 909:quantum/rgblight.c **** #endif
 910:quantum/rgblight.c ****   rgblight_sethsv_noeeprom_old(rgblight_config.hue, rgblight_config.sat, val);
 1038               		.loc 1 910 3 is_stmt 1 view .LVU226
 1039 0010 E0E0      		ldi r30,lo8(rgblight_config)
 1040 0012 F0E0      		ldi r31,hi8(rgblight_config)
 1041 0014 6281      		ldd r22,Z+2
 1042 0016 8181      		ldd r24,Z+1
 1043               	.LVL45:
 1044               		.loc 1 910 3 is_stmt 0 view .LVU227
 1045 0018 0E94 0000 		call rgblight_sethsv_noeeprom_old
 1046               	.LVL46:
 911:quantum/rgblight.c ****   anim->pos = (anim->pos + 1);
 1047               		.loc 1 911 3 is_stmt 1 view .LVU228
 1048               		.loc 1 911 26 is_stmt 0 view .LVU229
 1049 001c 8C81      		ldd r24,Y+4
 1050 001e 8F5F      		subi r24,lo8(-(1))
 1051               		.loc 1 911 13 view .LVU230
 1052 0020 8C83      		std Y+4,r24
 1053               	/* epilogue start */
 912:quantum/rgblight.c **** }
 1054               		.loc 1 912 1 view .LVU231
 1055 0022 DF91      		pop r29
 1056 0024 CF91      		pop r28
 1057               	.LVL47:
 1058               		.loc 1 912 1 view .LVU232
 1059 0026 0895      		ret
 1060               		.cfi_endproc
 1061               	.LFE156:
 1063               		.section	.text.rgblight_effect_rainbow_mood,"ax",@progbits
 1064               	.global	rgblight_effect_rainbow_mood
 1066               	rgblight_effect_rainbow_mood:
 1067               	.LVL48:
 1068               	.LFB157:
 913:quantum/rgblight.c **** #endif
 914:quantum/rgblight.c **** 
 915:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 916:quantum/rgblight.c **** __attribute__ ((weak))
 917:quantum/rgblight.c **** const uint8_t RGBLED_RAINBOW_MOOD_INTERVALS[] PROGMEM = {120, 60, 30};
 918:quantum/rgblight.c **** 
 919:quantum/rgblight.c **** void rgblight_effect_rainbow_mood(animation_status_t *anim) {
 1069               		.loc 1 919 61 is_stmt 1 view -0
 1070               		.cfi_startproc
 1071               		.loc 1 919 61 is_stmt 0 view .LVU234
 1072 0000 CF93      		push r28
 1073               	.LCFI45:
 1074               		.cfi_def_cfa_offset 3
 1075               		.cfi_offset 28, -2
 1076 0002 DF93      		push r29
 1077               	.LCFI46:
 1078               		.cfi_def_cfa_offset 4
 1079               		.cfi_offset 29, -3
 1080               	/* prologue: function */
 1081               	/* frame size = 0 */
 1082               	/* stack size = 2 */
 1083               	.L__stack_usage = 2
 1084 0004 EC01      		movw r28,r24
 920:quantum/rgblight.c ****   rgblight_sethsv_noeeprom_old(anim->current_hue, rgblight_config.sat, rgblight_config.val);
 1085               		.loc 1 920 3 is_stmt 1 view .LVU235
 1086 0006 E0E0      		ldi r30,lo8(rgblight_config)
 1087 0008 F0E0      		ldi r31,hi8(rgblight_config)
 1088 000a 4381      		ldd r20,Z+3
 1089 000c 6281      		ldd r22,Z+2
 1090 000e 8C81      		ldd r24,Y+4
 1091               	.LVL49:
 1092               		.loc 1 920 3 is_stmt 0 view .LVU236
 1093 0010 0E94 0000 		call rgblight_sethsv_noeeprom_old
 1094               	.LVL50:
 921:quantum/rgblight.c ****   anim->current_hue++;
 1095               		.loc 1 921 3 is_stmt 1 view .LVU237
 1096               		.loc 1 921 20 is_stmt 0 view .LVU238
 1097 0014 8C81      		ldd r24,Y+4
 1098 0016 8F5F      		subi r24,lo8(-(1))
 1099 0018 8C83      		std Y+4,r24
 1100               	/* epilogue start */
 922:quantum/rgblight.c **** }
 1101               		.loc 1 922 1 view .LVU239
 1102 001a DF91      		pop r29
 1103 001c CF91      		pop r28
 1104               	.LVL51:
 1105               		.loc 1 922 1 view .LVU240
 1106 001e 0895      		ret
 1107               		.cfi_endproc
 1108               	.LFE157:
 1110               		.section	.text.rgblight_effect_rgbtest,"ax",@progbits
 1111               	.global	rgblight_effect_rgbtest
 1113               	rgblight_effect_rgbtest:
 1114               	.LVL52:
 1115               	.LFB162:
 923:quantum/rgblight.c **** #endif
 924:quantum/rgblight.c **** 
 925:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 926:quantum/rgblight.c **** #ifndef RGBLIGHT_RAINBOW_SWIRL_RANGE
 927:quantum/rgblight.c ****   #define RGBLIGHT_RAINBOW_SWIRL_RANGE 255
 928:quantum/rgblight.c **** #endif
 929:quantum/rgblight.c **** 
 930:quantum/rgblight.c **** __attribute__ ((weak))
 931:quantum/rgblight.c **** const uint8_t RGBLED_RAINBOW_SWIRL_INTERVALS[] PROGMEM = {100, 50, 20};
 932:quantum/rgblight.c **** 
 933:quantum/rgblight.c **** void rgblight_effect_rainbow_swirl(animation_status_t *anim) {
 934:quantum/rgblight.c ****   uint8_t hue;
 935:quantum/rgblight.c ****   uint8_t i;
 936:quantum/rgblight.c **** 
 937:quantum/rgblight.c ****   for (i = 0; i < effect_num_leds; i++) {
 938:quantum/rgblight.c ****     hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 939:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos]);
 940:quantum/rgblight.c ****   }
 941:quantum/rgblight.c ****   rgblight_set();
 942:quantum/rgblight.c **** 
 943:quantum/rgblight.c ****   if (anim->delta % 2) {
 944:quantum/rgblight.c ****     anim->current_hue++;
 945:quantum/rgblight.c ****   } else {
 946:quantum/rgblight.c ****     anim->current_hue--;
 947:quantum/rgblight.c ****   }
 948:quantum/rgblight.c **** }
 949:quantum/rgblight.c **** #endif
 950:quantum/rgblight.c **** 
 951:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_SNAKE
 952:quantum/rgblight.c **** __attribute__ ((weak))
 953:quantum/rgblight.c **** const uint8_t RGBLED_SNAKE_INTERVALS[] PROGMEM = {100, 50, 20};
 954:quantum/rgblight.c **** 
 955:quantum/rgblight.c **** void rgblight_effect_snake(animation_status_t *anim) {
 956:quantum/rgblight.c ****   static uint8_t pos = 0;
 957:quantum/rgblight.c ****   uint8_t i, j;
 958:quantum/rgblight.c ****   int8_t k;
 959:quantum/rgblight.c ****   int8_t increment = 1;
 960:quantum/rgblight.c **** 
 961:quantum/rgblight.c ****   if (anim->delta % 2) {
 962:quantum/rgblight.c ****     increment = -1;
 963:quantum/rgblight.c ****   }
 964:quantum/rgblight.c **** 
 965:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 966:quantum/rgblight.c ****   if (anim->pos == 0) { // restart signal
 967:quantum/rgblight.c ****     if (increment == 1) {
 968:quantum/rgblight.c ****       pos = effect_num_leds - 1;
 969:quantum/rgblight.c ****     } else {
 970:quantum/rgblight.c ****       pos = 0;
 971:quantum/rgblight.c ****     }
 972:quantum/rgblight.c ****     anim->pos = 1;
 973:quantum/rgblight.c ****   }
 974:quantum/rgblight.c **** #endif
 975:quantum/rgblight.c **** 
 976:quantum/rgblight.c ****   for (i = 0; i < effect_num_leds; i++) {
 977:quantum/rgblight.c ****     LED_TYPE *ledp = led + i + effect_start_pos;
 978:quantum/rgblight.c ****     ledp->r = 0;
 979:quantum/rgblight.c ****     ledp->g = 0;
 980:quantum/rgblight.c ****     ledp->b = 0;
 981:quantum/rgblight.c ****     for (j = 0; j < RGBLIGHT_EFFECT_SNAKE_LENGTH; j++) {
 982:quantum/rgblight.c ****       k = pos + j * increment;
 983:quantum/rgblight.c ****       if (k < 0) {
 984:quantum/rgblight.c ****         k = k + effect_num_leds;
 985:quantum/rgblight.c ****       }
 986:quantum/rgblight.c ****       if (i == k) {
 987:quantum/rgblight.c ****         sethsv(rgblight_config.hue, rgblight_config.sat,
 988:quantum/rgblight.c ****                (uint8_t)(rgblight_config.val*(RGBLIGHT_EFFECT_SNAKE_LENGTH-j)/RGBLIGHT_EFFECT_SNAKE
 989:quantum/rgblight.c ****                ledp);
 990:quantum/rgblight.c ****       }
 991:quantum/rgblight.c ****     }
 992:quantum/rgblight.c ****   }
 993:quantum/rgblight.c ****   rgblight_set();
 994:quantum/rgblight.c ****   if (increment == 1) {
 995:quantum/rgblight.c ****     if (pos - 1 < 0) {
 996:quantum/rgblight.c ****       pos = effect_num_leds - 1;
 997:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 998:quantum/rgblight.c ****       anim->pos = 0;
 999:quantum/rgblight.c **** #endif
1000:quantum/rgblight.c ****     } else {
1001:quantum/rgblight.c ****       pos -= 1;
1002:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1003:quantum/rgblight.c ****       anim->pos = 1;
1004:quantum/rgblight.c **** #endif
1005:quantum/rgblight.c ****     }
1006:quantum/rgblight.c ****   } else {
1007:quantum/rgblight.c ****     pos = (pos + 1) % effect_num_leds;
1008:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1009:quantum/rgblight.c ****     anim->pos = pos;
1010:quantum/rgblight.c **** #endif
1011:quantum/rgblight.c ****   }
1012:quantum/rgblight.c **** }
1013:quantum/rgblight.c **** #endif
1014:quantum/rgblight.c **** 
1015:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_KNIGHT
1016:quantum/rgblight.c **** __attribute__ ((weak))
1017:quantum/rgblight.c **** const uint8_t RGBLED_KNIGHT_INTERVALS[] PROGMEM = {127, 63, 31};
1018:quantum/rgblight.c **** 
1019:quantum/rgblight.c **** void rgblight_effect_knight(animation_status_t *anim) {
1020:quantum/rgblight.c **** 
1021:quantum/rgblight.c ****   static int8_t low_bound = 0;
1022:quantum/rgblight.c ****   static int8_t high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
1023:quantum/rgblight.c ****   static int8_t increment = 1;
1024:quantum/rgblight.c ****   uint8_t i, cur;
1025:quantum/rgblight.c **** 
1026:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1027:quantum/rgblight.c ****   if (anim->pos == 0) { // restart signal
1028:quantum/rgblight.c ****       anim->pos = 1;
1029:quantum/rgblight.c ****       low_bound = 0;
1030:quantum/rgblight.c ****       high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
1031:quantum/rgblight.c ****       increment = 1;
1032:quantum/rgblight.c ****   }
1033:quantum/rgblight.c **** #endif
1034:quantum/rgblight.c ****   // Set all the LEDs to 0
1035:quantum/rgblight.c ****   for (i = effect_start_pos; i < effect_end_pos; i++) {
1036:quantum/rgblight.c ****     led[i].r = 0;
1037:quantum/rgblight.c ****     led[i].g = 0;
1038:quantum/rgblight.c ****     led[i].b = 0;
1039:quantum/rgblight.c ****   }
1040:quantum/rgblight.c ****   // Determine which LEDs should be lit up
1041:quantum/rgblight.c ****   for (i = 0; i < RGBLIGHT_EFFECT_KNIGHT_LED_NUM; i++) {
1042:quantum/rgblight.c ****     cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % effect_num_leds + effect_start_pos;
1043:quantum/rgblight.c **** 
1044:quantum/rgblight.c ****     if (i >= low_bound && i <= high_bound) {
1045:quantum/rgblight.c ****       sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[cur]);
1046:quantum/rgblight.c ****     } else {
1047:quantum/rgblight.c ****       led[cur].r = 0;
1048:quantum/rgblight.c ****       led[cur].g = 0;
1049:quantum/rgblight.c ****       led[cur].b = 0;
1050:quantum/rgblight.c ****     }
1051:quantum/rgblight.c ****   }
1052:quantum/rgblight.c ****   rgblight_set();
1053:quantum/rgblight.c **** 
1054:quantum/rgblight.c ****   // Move from low_bound to high_bound changing the direction we increment each
1055:quantum/rgblight.c ****   // time a boundary is hit.
1056:quantum/rgblight.c ****   low_bound += increment;
1057:quantum/rgblight.c ****   high_bound += increment;
1058:quantum/rgblight.c **** 
1059:quantum/rgblight.c ****   if (high_bound <= 0 || low_bound >= RGBLIGHT_EFFECT_KNIGHT_LED_NUM - 1) {
1060:quantum/rgblight.c ****     increment = -increment;
1061:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1062:quantum/rgblight.c ****     if (increment == 1) {
1063:quantum/rgblight.c ****         anim->pos = 0;
1064:quantum/rgblight.c ****     }
1065:quantum/rgblight.c **** #endif
1066:quantum/rgblight.c ****   }
1067:quantum/rgblight.c **** }
1068:quantum/rgblight.c **** #endif
1069:quantum/rgblight.c **** 
1070:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_CHRISTMAS
1071:quantum/rgblight.c **** void rgblight_effect_christmas(animation_status_t *anim) {
1072:quantum/rgblight.c ****   uint8_t hue;
1073:quantum/rgblight.c ****   uint8_t i;
1074:quantum/rgblight.c **** 
1075:quantum/rgblight.c ****   anim->current_offset = (anim->current_offset + 1) % 2;
1076:quantum/rgblight.c ****   for (i = 0; i < effect_num_leds; i++) {
1077:quantum/rgblight.c ****     hue = 0 + ((i/RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
1078:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos]);
1079:quantum/rgblight.c ****   }
1080:quantum/rgblight.c ****   rgblight_set();
1081:quantum/rgblight.c **** }
1082:quantum/rgblight.c **** #endif
1083:quantum/rgblight.c **** 
1084:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RGB_TEST
1085:quantum/rgblight.c **** __attribute__ ((weak))
1086:quantum/rgblight.c **** const uint16_t RGBLED_RGBTEST_INTERVALS[] PROGMEM = {1024};
1087:quantum/rgblight.c **** 
1088:quantum/rgblight.c **** void rgblight_effect_rgbtest(animation_status_t *anim) {
 1116               		.loc 1 1088 56 is_stmt 1 view -0
 1117               		.cfi_startproc
 1118               		.loc 1 1088 56 is_stmt 0 view .LVU242
 1119 0000 0F93      		push r16
 1120               	.LCFI47:
 1121               		.cfi_def_cfa_offset 3
 1122               		.cfi_offset 16, -2
 1123 0002 1F93      		push r17
 1124               	.LCFI48:
 1125               		.cfi_def_cfa_offset 4
 1126               		.cfi_offset 17, -3
 1127 0004 CF93      		push r28
 1128               	.LCFI49:
 1129               		.cfi_def_cfa_offset 5
 1130               		.cfi_offset 28, -4
 1131 0006 DF93      		push r29
 1132               	.LCFI50:
 1133               		.cfi_def_cfa_offset 6
 1134               		.cfi_offset 29, -5
 1135 0008 00D0      		rcall .
 1136 000a 0F92      		push __tmp_reg__
 1137               	.LCFI51:
 1138               		.cfi_def_cfa_offset 9
 1139 000c CDB7      		in r28,__SP_L__
 1140 000e DEB7      		in r29,__SP_H__
 1141               	.LCFI52:
 1142               		.cfi_def_cfa_register 28
 1143               	/* prologue: function */
 1144               	/* frame size = 3 */
 1145               	/* stack size = 7 */
 1146               	.L__stack_usage = 7
 1147 0010 8C01      		movw r16,r24
1089:quantum/rgblight.c ****   static uint8_t maxval = 0;
 1148               		.loc 1 1089 3 is_stmt 1 view .LVU243
1090:quantum/rgblight.c ****   uint8_t g; uint8_t r; uint8_t b;
 1149               		.loc 1 1090 3 view .LVU244
 1150               		.loc 1 1090 14 view .LVU245
 1151               		.loc 1 1090 25 view .LVU246
1091:quantum/rgblight.c **** 
1092:quantum/rgblight.c ****   if( maxval == 0 ) {
 1152               		.loc 1 1092 3 view .LVU247
 1153               		.loc 1 1092 5 is_stmt 0 view .LVU248
 1154 0012 8091 0000 		lds r24,maxval.3297
 1155               	.LVL53:
 1156               		.loc 1 1092 5 view .LVU249
 1157 0016 8111      		cpse r24,__zero_reg__
 1158 0018 00C0      		rjmp .L75
 1159               	.LBB44:
1093:quantum/rgblight.c ****       LED_TYPE tmp_led;
 1160               		.loc 1 1093 7 is_stmt 1 view .LVU250
1094:quantum/rgblight.c ****       sethsv(0, 255, RGBLIGHT_LIMIT_VAL, &tmp_led);
 1161               		.loc 1 1094 7 view .LVU251
 1162               	.LVL54:
 1163               	.LBB45:
 1164               	.LBI45:
 127:quantum/rgblight.c ****   sethsv_raw( hue, sat,
 1165               		.loc 1 127 6 view .LVU252
 1166               	.LBB46:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 1167               		.loc 1 128 3 view .LVU253
 1168 001a 9E01      		movw r18,r28
 1169 001c 2F5F      		subi r18,-1
 1170 001e 3F4F      		sbci r19,-1
 1171 0020 4FEF      		ldi r20,lo8(-1)
 1172 0022 6FEF      		ldi r22,lo8(-1)
 1173 0024 0E94 0000 		call sethsv_raw
 1174               	.LVL55:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 1175               		.loc 1 128 3 is_stmt 0 view .LVU254
 1176               	.LBE46:
 1177               	.LBE45:
1095:quantum/rgblight.c ****       maxval = tmp_led.r;
 1178               		.loc 1 1095 7 is_stmt 1 view .LVU255
 1179               		.loc 1 1095 14 is_stmt 0 view .LVU256
 1180 0028 8A81      		ldd r24,Y+2
 1181 002a 8093 0000 		sts maxval.3297,r24
 1182               	.L75:
 1183               	.LBE44:
1096:quantum/rgblight.c ****   }
1097:quantum/rgblight.c ****   g = r = b = 0;
 1184               		.loc 1 1097 3 is_stmt 1 view .LVU257
 1185               	.LVL56:
1098:quantum/rgblight.c ****   switch( anim->pos ) {
 1186               		.loc 1 1098 3 view .LVU258
 1187               		.loc 1 1098 15 is_stmt 0 view .LVU259
 1188 002e F801      		movw r30,r16
 1189 0030 6481      		ldd r22,Z+4
 1190               		.loc 1 1098 3 view .LVU260
 1191 0032 6130      		cpi r22,lo8(1)
 1192 0034 01F0      		breq .L76
1099:quantum/rgblight.c ****     case 0: r = maxval; break;
 1193               		.loc 1 1099 15 view .LVU261
 1194 0036 8091 0000 		lds r24,maxval.3297
 1195               	.LVL57:
 1196               		.loc 1 1099 25 is_stmt 1 view .LVU262
1097:quantum/rgblight.c ****   switch( anim->pos ) {
 1197               		.loc 1 1097 13 is_stmt 0 view .LVU263
 1198 003a 40E0      		ldi r20,0
1098:quantum/rgblight.c ****   switch( anim->pos ) {
 1199               		.loc 1 1098 3 view .LVU264
 1200 003c 6623      		tst r22
 1201 003e 01F0      		breq .L79
1097:quantum/rgblight.c ****   switch( anim->pos ) {
 1202               		.loc 1 1097 13 view .LVU265
 1203 0040 40E0      		ldi r20,0
1098:quantum/rgblight.c ****   switch( anim->pos ) {
 1204               		.loc 1 1098 3 view .LVU266
 1205 0042 6230      		cpi r22,lo8(2)
 1206 0044 01F4      		brne .L80
1100:quantum/rgblight.c ****     case 1: g = maxval; break;
1101:quantum/rgblight.c ****     case 2: b = maxval; break;
 1207               		.loc 1 1101 13 is_stmt 1 view .LVU267
 1208               		.loc 1 1101 15 is_stmt 0 view .LVU268
 1209 0046 4091 0000 		lds r20,maxval.3297
 1210               	.L80:
 1211               	.LVL58:
 1212               		.loc 1 1101 25 is_stmt 1 view .LVU269
1097:quantum/rgblight.c ****   switch( anim->pos ) {
 1213               		.loc 1 1097 9 is_stmt 0 view .LVU270
 1214 004a 80E0      		ldi r24,0
 1215               	.LVL59:
1097:quantum/rgblight.c ****   switch( anim->pos ) {
 1216               		.loc 1 1097 5 view .LVU271
 1217 004c 60E0      		ldi r22,0
 1218               		.loc 1 1101 5 view .LVU272
 1219 004e 00C0      		rjmp .L79
 1220               	.LVL60:
 1221               	.L76:
1100:quantum/rgblight.c ****     case 1: g = maxval; break;
 1222               		.loc 1 1100 13 is_stmt 1 view .LVU273
1100:quantum/rgblight.c ****     case 1: g = maxval; break;
 1223               		.loc 1 1100 15 is_stmt 0 view .LVU274
 1224 0050 6091 0000 		lds r22,maxval.3297
 1225               	.LVL61:
1100:quantum/rgblight.c ****     case 1: g = maxval; break;
 1226               		.loc 1 1100 25 is_stmt 1 view .LVU275
1097:quantum/rgblight.c ****   switch( anim->pos ) {
 1227               		.loc 1 1097 13 is_stmt 0 view .LVU276
 1228 0054 40E0      		ldi r20,0
1097:quantum/rgblight.c ****   switch( anim->pos ) {
 1229               		.loc 1 1097 9 view .LVU277
 1230 0056 80E0      		ldi r24,0
 1231               	.LVL62:
 1232               	.L79:
1102:quantum/rgblight.c ****   }
1103:quantum/rgblight.c ****   rgblight_setrgb(r, g, b);
 1233               		.loc 1 1103 3 is_stmt 1 view .LVU278
 1234 0058 0E94 0000 		call rgblight_setrgb
 1235               	.LVL63:
1104:quantum/rgblight.c ****   anim->pos = (anim->pos + 1) % 3;
 1236               		.loc 1 1104 3 view .LVU279
 1237               		.loc 1 1104 20 is_stmt 0 view .LVU280
 1238 005c F801      		movw r30,r16
 1239 005e 8481      		ldd r24,Z+4
 1240 0060 90E0      		ldi r25,0
 1241               		.loc 1 1104 26 view .LVU281
 1242 0062 0196      		adiw r24,1
 1243               		.loc 1 1104 31 view .LVU282
 1244 0064 63E0      		ldi r22,lo8(3)
 1245 0066 70E0      		ldi r23,0
 1246 0068 0E94 0000 		call __divmodhi4
 1247               		.loc 1 1104 13 view .LVU283
 1248 006c 8483      		std Z+4,r24
 1249               	/* epilogue start */
1105:quantum/rgblight.c **** }
 1250               		.loc 1 1105 1 view .LVU284
 1251 006e 0F90      		pop __tmp_reg__
 1252 0070 0F90      		pop __tmp_reg__
 1253 0072 0F90      		pop __tmp_reg__
 1254 0074 DF91      		pop r29
 1255 0076 CF91      		pop r28
 1256 0078 1F91      		pop r17
 1257 007a 0F91      		pop r16
 1258               	.LVL64:
 1259               		.loc 1 1105 1 view .LVU285
 1260 007c 0895      		ret
 1261               		.cfi_endproc
 1262               	.LFE162:
 1264               		.section	.text.rgblight_sethsv_eeprom_helper,"ax",@progbits
 1265               	.global	rgblight_sethsv_eeprom_helper
 1267               	rgblight_sethsv_eeprom_helper:
 1268               	.LVL65:
 1269               	.LFB132:
 477:quantum/rgblight.c ****   if (rgblight_config.enable) {
 1270               		.loc 1 477 97 is_stmt 1 view -0
 1271               		.cfi_startproc
 477:quantum/rgblight.c ****   if (rgblight_config.enable) {
 1272               		.loc 1 477 97 is_stmt 0 view .LVU287
 1273 0000 4F92      		push r4
 1274               	.LCFI53:
 1275               		.cfi_def_cfa_offset 3
 1276               		.cfi_offset 4, -2
 1277 0002 5F92      		push r5
 1278               	.LCFI54:
 1279               		.cfi_def_cfa_offset 4
 1280               		.cfi_offset 5, -3
 1281 0004 6F92      		push r6
 1282               	.LCFI55:
 1283               		.cfi_def_cfa_offset 5
 1284               		.cfi_offset 6, -4
 1285 0006 7F92      		push r7
 1286               	.LCFI56:
 1287               		.cfi_def_cfa_offset 6
 1288               		.cfi_offset 7, -5
 1289 0008 8F92      		push r8
 1290               	.LCFI57:
 1291               		.cfi_def_cfa_offset 7
 1292               		.cfi_offset 8, -6
 1293 000a 9F92      		push r9
 1294               	.LCFI58:
 1295               		.cfi_def_cfa_offset 8
 1296               		.cfi_offset 9, -7
 1297 000c AF92      		push r10
 1298               	.LCFI59:
 1299               		.cfi_def_cfa_offset 9
 1300               		.cfi_offset 10, -8
 1301 000e BF92      		push r11
 1302               	.LCFI60:
 1303               		.cfi_def_cfa_offset 10
 1304               		.cfi_offset 11, -9
 1305 0010 CF92      		push r12
 1306               	.LCFI61:
 1307               		.cfi_def_cfa_offset 11
 1308               		.cfi_offset 12, -10
 1309 0012 DF92      		push r13
 1310               	.LCFI62:
 1311               		.cfi_def_cfa_offset 12
 1312               		.cfi_offset 13, -11
 1313 0014 EF92      		push r14
 1314               	.LCFI63:
 1315               		.cfi_def_cfa_offset 13
 1316               		.cfi_offset 14, -12
 1317 0016 FF92      		push r15
 1318               	.LCFI64:
 1319               		.cfi_def_cfa_offset 14
 1320               		.cfi_offset 15, -13
 1321 0018 0F93      		push r16
 1322               	.LCFI65:
 1323               		.cfi_def_cfa_offset 15
 1324               		.cfi_offset 16, -14
 1325 001a 1F93      		push r17
 1326               	.LCFI66:
 1327               		.cfi_def_cfa_offset 16
 1328               		.cfi_offset 17, -15
 1329 001c CF93      		push r28
 1330               	.LCFI67:
 1331               		.cfi_def_cfa_offset 17
 1332               		.cfi_offset 28, -16
 1333 001e DF93      		push r29
 1334               	.LCFI68:
 1335               		.cfi_def_cfa_offset 18
 1336               		.cfi_offset 29, -17
 1337 0020 00D0      		rcall .
 1338 0022 0F92      		push __tmp_reg__
 1339               	.LCFI69:
 1340               		.cfi_def_cfa_offset 21
 1341 0024 CDB7      		in r28,__SP_L__
 1342 0026 DEB7      		in r29,__SP_H__
 1343               	.LCFI70:
 1344               		.cfi_def_cfa_register 28
 1345               	/* prologue: function */
 1346               	/* frame size = 3 */
 1347               	/* stack size = 19 */
 1348               	.L__stack_usage = 19
 1349 0028 182F      		mov r17,r24
 1350 002a D62E      		mov r13,r22
 1351 002c 042F      		mov r16,r20
 1352 002e 722E      		mov r7,r18
 478:quantum/rgblight.c ****     rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1353               		.loc 1 478 3 is_stmt 1 view .LVU288
 478:quantum/rgblight.c ****     rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1354               		.loc 1 478 7 is_stmt 0 view .LVU289
 1355 0030 9091 0000 		lds r25,rgblight_config
 478:quantum/rgblight.c ****     rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1356               		.loc 1 478 6 view .LVU290
 1357 0034 90FF      		sbrs r25,0
 1358 0036 00C0      		rjmp .L81
 479:quantum/rgblight.c ****     if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1359               		.loc 1 479 5 is_stmt 1 view .LVU291
 479:quantum/rgblight.c ****     if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1360               		.loc 1 479 64 is_stmt 0 view .LVU292
 1361 0038 E92F      		mov r30,r25
 1362 003a E695      		lsr r30
 1363 003c AE2F      		mov r26,r30
 1364 003e B0E0      		ldi r27,0
 479:quantum/rgblight.c ****     if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1365               		.loc 1 479 48 view .LVU293
 1366 0040 A050      		subi r26,lo8(-(mode_base_table))
 1367 0042 B040      		sbci r27,hi8(-(mode_base_table))
 1368 0044 8C91      		ld r24,X
 1369               	.LVL66:
 479:quantum/rgblight.c ****     if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1370               		.loc 1 479 31 view .LVU294
 1371 0046 8093 0000 		sts rgblight_status,r24
 480:quantum/rgblight.c ****       // same static color
 1372               		.loc 1 480 5 is_stmt 1 view .LVU295
 480:quantum/rgblight.c ****       // same static color
 1373               		.loc 1 480 30 is_stmt 0 view .LVU296
 1374 004a 9E7F      		andi r25,lo8(-2)
 480:quantum/rgblight.c ****       // same static color
 1375               		.loc 1 480 8 view .LVU297
 1376 004c 9230      		cpi r25,lo8(2)
 1377 004e 01F0      		breq .+2
 1378 0050 00C0      		rjmp .L84
 1379               	.LBB59:
 482:quantum/rgblight.c ****       sethsv(hue, sat, val, &tmp_led);
 1380               		.loc 1 482 7 is_stmt 1 view .LVU298
 483:quantum/rgblight.c ****       rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 1381               		.loc 1 483 7 view .LVU299
 1382               	.LVL67:
 1383               	.LBB60:
 1384               	.LBI60:
 127:quantum/rgblight.c ****   sethsv_raw( hue, sat,
 1385               		.loc 1 127 6 view .LVU300
 1386               	.LBB61:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 1387               		.loc 1 128 3 view .LVU301
 1388 0052 9E01      		movw r18,r28
 1389               	.LVL68:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 1390               		.loc 1 128 3 is_stmt 0 view .LVU302
 1391 0054 2F5F      		subi r18,-1
 1392 0056 3F4F      		sbci r19,-1
 1393 0058 812F      		mov r24,r17
 1394 005a 0E94 0000 		call sethsv_raw
 1395               	.LVL69:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 1396               		.loc 1 128 3 view .LVU303
 1397               	.LBE61:
 1398               	.LBE60:
 484:quantum/rgblight.c ****     } else {
 1399               		.loc 1 484 7 is_stmt 1 view .LVU304
 1400 005e 4B81      		ldd r20,Y+3
 1401 0060 6981      		ldd r22,Y+1
 1402 0062 8A81      		ldd r24,Y+2
 1403 0064 0E94 0000 		call rgblight_setrgb
 1404               	.LVL70:
 1405               	.L85:
 484:quantum/rgblight.c ****     } else {
 1406               		.loc 1 484 7 is_stmt 0 view .LVU305
 1407               	.LBE59:
 539:quantum/rgblight.c ****     rgblight_config.sat = sat;
 1408               		.loc 1 539 5 is_stmt 1 view .LVU306
 539:quantum/rgblight.c ****     rgblight_config.sat = sat;
 1409               		.loc 1 539 25 is_stmt 0 view .LVU307
 1410 0068 1093 0000 		sts rgblight_config+1,r17
 540:quantum/rgblight.c ****     rgblight_config.val = val;
 1411               		.loc 1 540 5 is_stmt 1 view .LVU308
 540:quantum/rgblight.c ****     rgblight_config.val = val;
 1412               		.loc 1 540 25 is_stmt 0 view .LVU309
 1413 006c D092 0000 		sts rgblight_config+2,r13
 541:quantum/rgblight.c ****     if (write_to_eeprom) {
 1414               		.loc 1 541 5 is_stmt 1 view .LVU310
 541:quantum/rgblight.c ****     if (write_to_eeprom) {
 1415               		.loc 1 541 25 is_stmt 0 view .LVU311
 1416 0070 0093 0000 		sts rgblight_config+3,r16
 542:quantum/rgblight.c ****       eeconfig_update_rgblight(rgblight_config.raw);
 1417               		.loc 1 542 5 is_stmt 1 view .LVU312
 542:quantum/rgblight.c ****       eeconfig_update_rgblight(rgblight_config.raw);
 1418               		.loc 1 542 8 is_stmt 0 view .LVU313
 1419 0074 7720      		tst r7
 1420 0076 01F4      		brne .+2
 1421 0078 00C0      		rjmp .L94
 543:quantum/rgblight.c ****       dprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.sat, rg
 1422               		.loc 1 543 7 is_stmt 1 view .LVU314
 1423 007a 6091 0000 		lds r22,rgblight_config
 1424 007e 7091 0000 		lds r23,rgblight_config+1
 1425 0082 8091 0000 		lds r24,rgblight_config+2
 1426 0086 9091 0000 		lds r25,rgblight_config+3
 1427 008a 0E94 0000 		call eeconfig_update_rgblight
 1428               	.LVL71:
 544:quantum/rgblight.c ****     } else {
 1429               		.loc 1 544 7 view .LVU315
 544:quantum/rgblight.c ****     } else {
 1430               		.loc 1 544 7 view .LVU316
 1431 008e 8091 0000 		lds r24,debug_config
 1432 0092 80FF      		sbrs r24,0
 1433 0094 00C0      		rjmp .L81
 544:quantum/rgblight.c ****     } else {
 1434               		.loc 1 544 7 discriminator 1 view .LVU317
 1435               	.LBB62:
 544:quantum/rgblight.c ****     } else {
 1436               		.loc 1 544 7 discriminator 1 view .LVU318
 544:quantum/rgblight.c ****     } else {
 1437               		.loc 1 544 7 discriminator 1 view .LVU319
 1438               	.LBE62:
 1439 0096 8091 0000 		lds r24,rgblight_config+3
 1440 009a 1F92      		push __zero_reg__
 1441 009c 8F93      		push r24
 1442 009e 8091 0000 		lds r24,rgblight_config+2
 1443 00a2 1F92      		push __zero_reg__
 1444 00a4 8F93      		push r24
 1445 00a6 8091 0000 		lds r24,rgblight_config+1
 1446 00aa 1F92      		push __zero_reg__
 1447 00ac 8F93      		push r24
 1448 00ae 80E0      		ldi r24,lo8(__c.3093)
 1449 00b0 90E0      		ldi r25,hi8(__c.3093)
 1450               	.L108:
 546:quantum/rgblight.c ****     }
 1451               		.loc 1 546 7 is_stmt 0 discriminator 1 view .LVU320
 1452 00b2 9F93      		push r25
 1453 00b4 8F93      		push r24
 1454 00b6 0E94 0000 		call __xprintf
 1455               	.LVL72:
 1456 00ba 0FB6      		in __tmp_reg__,__SREG__
 1457 00bc F894      		cli
 1458 00be DEBF      		out __SP_H__,r29
 1459 00c0 0FBE      		out __SREG__,__tmp_reg__
 1460 00c2 CDBF      		out __SP_L__,r28
 1461               	.L81:
 1462               	/* epilogue start */
 549:quantum/rgblight.c **** 
 1463               		.loc 1 549 1 view .LVU321
 1464 00c4 0F90      		pop __tmp_reg__
 1465 00c6 0F90      		pop __tmp_reg__
 1466 00c8 0F90      		pop __tmp_reg__
 1467 00ca DF91      		pop r29
 1468 00cc CF91      		pop r28
 1469 00ce 1F91      		pop r17
 1470               	.LVL73:
 549:quantum/rgblight.c **** 
 1471               		.loc 1 549 1 view .LVU322
 1472 00d0 0F91      		pop r16
 1473               	.LVL74:
 549:quantum/rgblight.c **** 
 1474               		.loc 1 549 1 view .LVU323
 1475 00d2 FF90      		pop r15
 1476 00d4 EF90      		pop r14
 1477 00d6 DF90      		pop r13
 1478               	.LVL75:
 549:quantum/rgblight.c **** 
 1479               		.loc 1 549 1 view .LVU324
 1480 00d8 CF90      		pop r12
 1481 00da BF90      		pop r11
 1482 00dc AF90      		pop r10
 1483 00de 9F90      		pop r9
 1484 00e0 8F90      		pop r8
 1485 00e2 7F90      		pop r7
 1486               	.LVL76:
 549:quantum/rgblight.c **** 
 1487               		.loc 1 549 1 view .LVU325
 1488 00e4 6F90      		pop r6
 1489 00e6 5F90      		pop r5
 1490 00e8 4F90      		pop r4
 1491 00ea 0895      		ret
 1492               	.LVL77:
 1493               	.L84:
 487:quantum/rgblight.c ****       }
 1494               		.loc 1 487 7 is_stmt 1 view .LVU326
 490:quantum/rgblight.c ****         // breathing mode, ignore the change of val, use in memory value instead
 1495               		.loc 1 490 12 view .LVU327
 490:quantum/rgblight.c ****         // breathing mode, ignore the change of val, use in memory value instead
 1496               		.loc 1 490 15 is_stmt 0 view .LVU328
 1497 00ec 8230      		cpi r24,lo8(2)
 1498 00ee 01F4      		brne .L86
 492:quantum/rgblight.c ****       }
 1499               		.loc 1 492 9 is_stmt 1 view .LVU329
 492:quantum/rgblight.c ****       }
 1500               		.loc 1 492 13 is_stmt 0 view .LVU330
 1501 00f0 0091 0000 		lds r16,rgblight_config+3
 1502               	.LVL78:
 492:quantum/rgblight.c ****       }
 1503               		.loc 1 492 13 view .LVU331
 1504 00f4 00C0      		rjmp .L85
 1505               	.L86:
 496:quantum/rgblight.c ****         // rainbow mood, ignore the change of hue
 1506               		.loc 1 496 12 is_stmt 1 view .LVU332
 496:quantum/rgblight.c ****         // rainbow mood, ignore the change of hue
 1507               		.loc 1 496 15 is_stmt 0 view .LVU333
 1508 00f6 8630      		cpi r24,lo8(6)
 1509 00f8 01F4      		brne .L87
 1510               	.L88:
 498:quantum/rgblight.c ****       }
 1511               		.loc 1 498 9 is_stmt 1 view .LVU334
 498:quantum/rgblight.c ****       }
 1512               		.loc 1 498 13 is_stmt 0 view .LVU335
 1513 00fa 1091 0000 		lds r17,rgblight_config+1
 1514               	.LVL79:
 498:quantum/rgblight.c ****       }
 1515               		.loc 1 498 13 view .LVU336
 1516 00fe 00C0      		rjmp .L85
 1517               	.L87:
 502:quantum/rgblight.c ****         // rainbow swirl, ignore the change of hue
 1518               		.loc 1 502 12 is_stmt 1 view .LVU337
 502:quantum/rgblight.c ****         // rainbow swirl, ignore the change of hue
 1519               		.loc 1 502 15 is_stmt 0 view .LVU338
 1520 0100 8930      		cpi r24,lo8(9)
 1521 0102 01F0      		breq .L88
 508:quantum/rgblight.c ****         // static gradient
 1522               		.loc 1 508 12 is_stmt 1 view .LVU339
 508:quantum/rgblight.c ****         // static gradient
 1523               		.loc 1 508 15 is_stmt 0 view .LVU340
 1524 0104 8931      		cpi r24,lo8(25)
 1525 0106 01F0      		breq .+2
 1526 0108 00C0      		rjmp .L85
 1527               	.LBB63:
 510:quantum/rgblight.c ****         bool direction = (delta % 2) == 0;
 1528               		.loc 1 510 9 is_stmt 1 view .LVU341
 510:quantum/rgblight.c ****         bool direction = (delta % 2) == 0;
 1529               		.loc 1 510 17 is_stmt 0 view .LVU342
 1530 010a E951      		subi r30,lo8(-(-25))
 1531               	.LVL80:
 511:quantum/rgblight.c **** #ifdef __AVR__
 1532               		.loc 1 511 9 is_stmt 1 view .LVU343
 511:quantum/rgblight.c **** #ifdef __AVR__
 1533               		.loc 1 511 38 is_stmt 0 view .LVU344
 1534 010c 8E2F      		mov r24,r30
 1535 010e 8170      		andi r24,lo8(1)
 1536 0110 682E      		mov r6,r24
 1537 0112 8E2F      		mov r24,r30
 1538 0114 8095      		com r24
 1539 0116 8170      		andi r24,lo8(1)
 1540 0118 C82E      		mov r12,r24
 1541               	.LVL81:
 514:quantum/rgblight.c **** #else
 1542               		.loc 1 514 9 is_stmt 1 view .LVU345
 1543               	.LBB64:
 514:quantum/rgblight.c **** #else
 1544               		.loc 1 514 25 view .LVU346
 1545 011a E695      		lsr r30
 1546               	.LVL82:
 514:quantum/rgblight.c **** #else
 1547               		.loc 1 514 25 is_stmt 0 view .LVU347
 1548 011c F0E0      		ldi r31,0
 1549 011e E050      		subi r30,lo8(-(RGBLED_GRADIENT_RANGES))
 1550 0120 F040      		sbci r31,hi8(-(RGBLED_GRADIENT_RANGES))
 1551               	.LVL83:
 514:quantum/rgblight.c **** #else
 1552               		.loc 1 514 25 is_stmt 1 view .LVU348
 514:quantum/rgblight.c **** #else
 1553               		.loc 1 514 25 view .LVU349
 1554               	/* #APP */
 1555               	 ;  514 "quantum/rgblight.c" 1
 1556 0122 E590      		lpm r14, Z+
 1557 0124 F490      		lpm r15, Z
 1558               		
 1559               	 ;  0 "" 2
 1560               	.LVL84:
 514:quantum/rgblight.c **** #else
 1561               		.loc 1 514 25 view .LVU350
 514:quantum/rgblight.c **** #else
 1562               		.loc 1 514 25 is_stmt 0 view .LVU351
 1563               	/* #NOAPP */
 1564               	.LBE64:
 518:quantum/rgblight.c ****           uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1565               		.loc 1 518 9 is_stmt 1 view .LVU352
 1566               	.LBB65:
 518:quantum/rgblight.c ****           uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1567               		.loc 1 518 14 view .LVU353
 518:quantum/rgblight.c ****           uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1568               		.loc 1 518 22 is_stmt 0 view .LVU354
 1569 0126 412C      		mov r4,__zero_reg__
 1570 0128 FF24      		clr r15
 1571               	.LVL85:
 1572               	.LBB66:
 525:quantum/rgblight.c ****           sethsv(_hue, sat, val, (LED_TYPE *)&led[i + effect_start_pos]);
 1573               		.loc 1 525 11 view .LVU355
 1574 012a 90E0      		ldi r25,lo8(__c.3088)
 1575 012c A92E      		mov r10,r25
 1576 012e 90E0      		ldi r25,hi8(__c.3088)
 1577 0130 B92E      		mov r11,r25
 1578               	.LVL86:
 1579               	.L89:
 525:quantum/rgblight.c ****           sethsv(_hue, sat, val, (LED_TYPE *)&led[i + effect_start_pos]);
 1580               		.loc 1 525 11 view .LVU356
 1581               	.LBE66:
 518:quantum/rgblight.c ****           uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1582               		.loc 1 518 31 discriminator 1 view .LVU357
 1583 0132 6091 0000 		lds r22,effect_num_leds
 518:quantum/rgblight.c ****           uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1584               		.loc 1 518 9 discriminator 1 view .LVU358
 1585 0136 4616      		cp r4,r22
 1586 0138 00F0      		brlo .L93
 1587               	.LBE65:
 528:quantum/rgblight.c ****       }
 1588               		.loc 1 528 9 is_stmt 1 view .LVU359
 1589 013a 0E94 0000 		call rgblight_set
 1590               	.LVL87:
 1591 013e 00C0      		rjmp .L85
 1592               	.L93:
 1593               	.LBB74:
 1594               	.LBB72:
 519:quantum/rgblight.c ****           if (direction) {
 1595               		.loc 1 519 11 view .LVU360
 519:quantum/rgblight.c ****           if (direction) {
 1596               		.loc 1 519 27 is_stmt 0 view .LVU361
 1597 0140 842C      		mov r8,r4
 1598 0142 912C      		mov r9,__zero_reg__
 519:quantum/rgblight.c ****           if (direction) {
 1599               		.loc 1 519 39 view .LVU362
 1600 0144 8E9C      		mul r8,r14
 1601 0146 C001      		movw r24,r0
 1602 0148 8F9C      		mul r8,r15
 1603 014a 900D      		add r25,r0
 1604 014c 9E9C      		mul r9,r14
 1605 014e 900D      		add r25,r0
 1606 0150 1124      		clr r1
 519:quantum/rgblight.c ****           if (direction) {
 1607               		.loc 1 519 58 view .LVU363
 1608 0152 70E0      		ldi r23,0
 1609 0154 0E94 0000 		call __udivmodhi4
 1610               	.LVL88:
 520:quantum/rgblight.c ****             _hue = hue + _hue;
 1611               		.loc 1 520 11 is_stmt 1 view .LVU364
 521:quantum/rgblight.c ****           } else {
 1612               		.loc 1 521 18 is_stmt 0 view .LVU365
 1613 0158 512E      		mov r5,r17
 520:quantum/rgblight.c ****             _hue = hue + _hue;
 1614               		.loc 1 520 14 view .LVU366
 1615 015a 6110      		cpse r6,__zero_reg__
 1616 015c 00C0      		rjmp .L90
 1617               	.LVL89:
 521:quantum/rgblight.c ****           } else {
 1618               		.loc 1 521 13 is_stmt 1 view .LVU367
 521:quantum/rgblight.c ****           } else {
 1619               		.loc 1 521 18 is_stmt 0 view .LVU368
 1620 015e 560E      		add r5,r22
 1621               	.LVL90:
 1622               	.L91:
 525:quantum/rgblight.c ****           sethsv(_hue, sat, val, (LED_TYPE *)&led[i + effect_start_pos]);
 1623               		.loc 1 525 11 is_stmt 1 view .LVU369
 525:quantum/rgblight.c ****           sethsv(_hue, sat, val, (LED_TYPE *)&led[i + effect_start_pos]);
 1624               		.loc 1 525 11 view .LVU370
 1625 0160 8091 0000 		lds r24,debug_config
 1626 0164 80FF      		sbrs r24,0
 1627 0166 00C0      		rjmp .L92
 525:quantum/rgblight.c ****           sethsv(_hue, sat, val, (LED_TYPE *)&led[i + effect_start_pos]);
 1628               		.loc 1 525 11 discriminator 1 view .LVU371
 1629               	.LBB67:
 525:quantum/rgblight.c ****           sethsv(_hue, sat, val, (LED_TYPE *)&led[i + effect_start_pos]);
 1630               		.loc 1 525 11 discriminator 1 view .LVU372
 525:quantum/rgblight.c ****           sethsv(_hue, sat, val, (LED_TYPE *)&led[i + effect_start_pos]);
 1631               		.loc 1 525 11 discriminator 1 view .LVU373
 1632               	.LBE67:
 1633 0168 FF92      		push r15
 1634 016a EF92      		push r14
 1635 016c 1F92      		push __zero_reg__
 1636 016e CF92      		push r12
 1637 0170 1F92      		push __zero_reg__
 1638 0172 5F92      		push r5
 1639 0174 1F92      		push __zero_reg__
 1640 0176 4F92      		push r4
 1641 0178 BF92      		push r11
 1642 017a AF92      		push r10
 1643 017c 0E94 0000 		call __xprintf
 1644               	.LVL91:
 1645 0180 0FB6      		in __tmp_reg__,__SREG__
 1646 0182 F894      		cli
 1647 0184 DEBF      		out __SP_H__,r29
 1648 0186 0FBE      		out __SREG__,__tmp_reg__
 1649 0188 CDBF      		out __SP_L__,r28
 1650               	.L92:
 526:quantum/rgblight.c ****         }
 1651               		.loc 1 526 11 discriminator 2 view .LVU374
 1652               	.LVL92:
 1653               	.LBB68:
 1654               	.LBI68:
 127:quantum/rgblight.c ****   sethsv_raw( hue, sat,
 1655               		.loc 1 127 6 discriminator 2 view .LVU375
 1656               	.LBB69:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 1657               		.loc 1 128 3 discriminator 2 view .LVU376
 1658               	.LBE69:
 1659               	.LBE68:
 526:quantum/rgblight.c ****         }
 1660               		.loc 1 526 53 is_stmt 0 discriminator 2 view .LVU377
 1661 018a 2091 0000 		lds r18,effect_start_pos
 1662 018e 820E      		add r8,r18
 1663 0190 911C      		adc r9,__zero_reg__
 1664               	.LVL93:
 526:quantum/rgblight.c ****         }
 1665               		.loc 1 526 11 discriminator 2 view .LVU378
 1666 0192 9401      		movw r18,r8
 1667 0194 220F      		lsl r18
 1668 0196 331F      		rol r19
 1669 0198 280D      		add r18,r8
 1670 019a 391D      		adc r19,r9
 1671 019c 2050      		subi r18,lo8(-(led))
 1672 019e 3040      		sbci r19,hi8(-(led))
 1673               	.LBB71:
 1674               	.LBB70:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 1675               		.loc 1 128 3 discriminator 2 view .LVU379
 1676 01a0 402F      		mov r20,r16
 1677 01a2 6D2D      		mov r22,r13
 1678 01a4 852D      		mov r24,r5
 1679 01a6 0E94 0000 		call sethsv_raw
 1680               	.LVL94:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 1681               		.loc 1 128 3 discriminator 2 view .LVU380
 1682               	.LBE70:
 1683               	.LBE71:
 1684               	.LBE72:
 518:quantum/rgblight.c ****           uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1685               		.loc 1 518 51 discriminator 2 view .LVU381
 1686 01aa 4394      		inc r4
 1687               	.LVL95:
 518:quantum/rgblight.c ****           uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1688               		.loc 1 518 51 discriminator 2 view .LVU382
 1689 01ac 00C0      		rjmp .L89
 1690               	.LVL96:
 1691               	.L90:
 1692               	.LBB73:
 523:quantum/rgblight.c ****           }
 1693               		.loc 1 523 13 is_stmt 1 view .LVU383
 523:quantum/rgblight.c ****           }
 1694               		.loc 1 523 18 is_stmt 0 view .LVU384
 1695 01ae 561A      		sub r5,r22
 1696               	.LVL97:
 523:quantum/rgblight.c ****           }
 1697               		.loc 1 523 18 view .LVU385
 1698 01b0 00C0      		rjmp .L91
 1699               	.LVL98:
 1700               	.L94:
 523:quantum/rgblight.c ****           }
 1701               		.loc 1 523 18 view .LVU386
 1702               	.LBE73:
 1703               	.LBE74:
 1704               	.LBE63:
 546:quantum/rgblight.c ****     }
 1705               		.loc 1 546 7 is_stmt 1 view .LVU387
 546:quantum/rgblight.c ****     }
 1706               		.loc 1 546 7 view .LVU388
 1707 01b2 8091 0000 		lds r24,debug_config
 1708 01b6 80FF      		sbrs r24,0
 1709 01b8 00C0      		rjmp .L81
 546:quantum/rgblight.c ****     }
 1710               		.loc 1 546 7 discriminator 1 view .LVU389
 1711               	.LBB75:
 546:quantum/rgblight.c ****     }
 1712               		.loc 1 546 7 discriminator 1 view .LVU390
 546:quantum/rgblight.c ****     }
 1713               		.loc 1 546 7 discriminator 1 view .LVU391
 1714               	.LBE75:
 1715 01ba 1F92      		push __zero_reg__
 1716 01bc 0F93      		push r16
 1717 01be 1F92      		push __zero_reg__
 1718 01c0 DF92      		push r13
 1719 01c2 1F92      		push __zero_reg__
 1720 01c4 1F93      		push r17
 1721 01c6 80E0      		ldi r24,lo8(__c.3095)
 1722 01c8 90E0      		ldi r25,hi8(__c.3095)
 1723 01ca 00C0      		rjmp .L108
 1724               		.cfi_endproc
 1725               	.LFE132:
 1727               		.section	.text.rgblight_increase_hue_helper,"ax",@progbits
 1728               	.global	rgblight_increase_hue_helper
 1730               	rgblight_increase_hue_helper:
 1731               	.LVL99:
 1732               	.LFB111:
 395:quantum/rgblight.c ****   uint8_t hue = rgblight_config.hue + RGBLIGHT_HUE_STEP;
 1733               		.loc 1 395 57 view -0
 1734               		.cfi_startproc
 1735               	/* prologue: function */
 1736               	/* frame size = 0 */
 1737               	/* stack size = 0 */
 1738               	.L__stack_usage = 0
 396:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1739               		.loc 1 396 3 view .LVU393
 397:quantum/rgblight.c **** }
 1740               		.loc 1 397 3 view .LVU394
 1741 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1742 0002 F0E0      		ldi r31,hi8(rgblight_config)
 396:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1743               		.loc 1 396 11 is_stmt 0 view .LVU395
 1744 0004 9181      		ldd r25,Z+1
 397:quantum/rgblight.c **** }
 1745               		.loc 1 397 3 view .LVU396
 1746 0006 282F      		mov r18,r24
 1747 0008 4381      		ldd r20,Z+3
 1748 000a 6281      		ldd r22,Z+2
 1749 000c 88E0      		ldi r24,lo8(8)
 1750               	.LVL100:
 397:quantum/rgblight.c **** }
 1751               		.loc 1 397 3 view .LVU397
 1752 000e 890F      		add r24,r25
 1753               	.LVL101:
 397:quantum/rgblight.c **** }
 1754               		.loc 1 397 3 view .LVU398
 1755 0010 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1756               	.LVL102:
 397:quantum/rgblight.c **** }
 1757               		.loc 1 397 3 view .LVU399
 1758               		.cfi_endproc
 1759               	.LFE111:
 1761               		.section	.text.rgblight_increase_hue_noeeprom,"ax",@progbits
 1762               	.global	rgblight_increase_hue_noeeprom
 1764               	rgblight_increase_hue_noeeprom:
 1765               	.LFB112:
 399:quantum/rgblight.c ****   rgblight_increase_hue_helper(false);
 1766               		.loc 1 399 43 is_stmt 1 view -0
 1767               		.cfi_startproc
 1768               	/* prologue: function */
 1769               	/* frame size = 0 */
 1770               	/* stack size = 0 */
 1771               	.L__stack_usage = 0
 400:quantum/rgblight.c **** }
 1772               		.loc 1 400 3 view .LVU401
 1773 0000 80E0      		ldi r24,0
 1774 0002 0C94 0000 		jmp rgblight_increase_hue_helper
 1775               	.LVL103:
 1776               		.cfi_endproc
 1777               	.LFE112:
 1779               		.section	.text.rgblight_increase_hue,"ax",@progbits
 1780               	.global	rgblight_increase_hue
 1782               	rgblight_increase_hue:
 1783               	.LFB113:
 402:quantum/rgblight.c ****   rgblight_increase_hue_helper(true);
 1784               		.loc 1 402 34 view -0
 1785               		.cfi_startproc
 1786               	/* prologue: function */
 1787               	/* frame size = 0 */
 1788               	/* stack size = 0 */
 1789               	.L__stack_usage = 0
 403:quantum/rgblight.c **** }
 1790               		.loc 1 403 3 view .LVU403
 1791 0000 81E0      		ldi r24,lo8(1)
 1792 0002 0C94 0000 		jmp rgblight_increase_hue_helper
 1793               	.LVL104:
 1794               		.cfi_endproc
 1795               	.LFE113:
 1797               		.section	.text.rgblight_decrease_hue_helper,"ax",@progbits
 1798               	.global	rgblight_decrease_hue_helper
 1800               	rgblight_decrease_hue_helper:
 1801               	.LVL105:
 1802               	.LFB114:
 405:quantum/rgblight.c ****   uint8_t hue = rgblight_config.hue - RGBLIGHT_HUE_STEP;
 1803               		.loc 1 405 57 view -0
 1804               		.cfi_startproc
 1805               	/* prologue: function */
 1806               	/* frame size = 0 */
 1807               	/* stack size = 0 */
 1808               	.L__stack_usage = 0
 406:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1809               		.loc 1 406 3 view .LVU405
 407:quantum/rgblight.c **** }
 1810               		.loc 1 407 3 view .LVU406
 1811 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1812 0002 F0E0      		ldi r31,hi8(rgblight_config)
 406:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1813               		.loc 1 406 11 is_stmt 0 view .LVU407
 1814 0004 9181      		ldd r25,Z+1
 407:quantum/rgblight.c **** }
 1815               		.loc 1 407 3 view .LVU408
 1816 0006 282F      		mov r18,r24
 1817 0008 4381      		ldd r20,Z+3
 1818 000a 6281      		ldd r22,Z+2
 1819 000c 88EF      		ldi r24,lo8(-8)
 1820               	.LVL106:
 407:quantum/rgblight.c **** }
 1821               		.loc 1 407 3 view .LVU409
 1822 000e 890F      		add r24,r25
 1823               	.LVL107:
 407:quantum/rgblight.c **** }
 1824               		.loc 1 407 3 view .LVU410
 1825 0010 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1826               	.LVL108:
 407:quantum/rgblight.c **** }
 1827               		.loc 1 407 3 view .LVU411
 1828               		.cfi_endproc
 1829               	.LFE114:
 1831               		.section	.text.rgblight_decrease_hue_noeeprom,"ax",@progbits
 1832               	.global	rgblight_decrease_hue_noeeprom
 1834               	rgblight_decrease_hue_noeeprom:
 1835               	.LFB115:
 409:quantum/rgblight.c ****   rgblight_decrease_hue_helper(false);
 1836               		.loc 1 409 43 is_stmt 1 view -0
 1837               		.cfi_startproc
 1838               	/* prologue: function */
 1839               	/* frame size = 0 */
 1840               	/* stack size = 0 */
 1841               	.L__stack_usage = 0
 410:quantum/rgblight.c **** }
 1842               		.loc 1 410 3 view .LVU413
 1843 0000 80E0      		ldi r24,0
 1844 0002 0C94 0000 		jmp rgblight_decrease_hue_helper
 1845               	.LVL109:
 1846               		.cfi_endproc
 1847               	.LFE115:
 1849               		.section	.text.rgblight_decrease_hue,"ax",@progbits
 1850               	.global	rgblight_decrease_hue
 1852               	rgblight_decrease_hue:
 1853               	.LFB116:
 412:quantum/rgblight.c ****   rgblight_decrease_hue_helper(true);
 1854               		.loc 1 412 34 view -0
 1855               		.cfi_startproc
 1856               	/* prologue: function */
 1857               	/* frame size = 0 */
 1858               	/* stack size = 0 */
 1859               	.L__stack_usage = 0
 413:quantum/rgblight.c **** }
 1860               		.loc 1 413 3 view .LVU415
 1861 0000 81E0      		ldi r24,lo8(1)
 1862 0002 0C94 0000 		jmp rgblight_decrease_hue_helper
 1863               	.LVL110:
 1864               		.cfi_endproc
 1865               	.LFE116:
 1867               		.section	.text.rgblight_increase_sat_helper,"ax",@progbits
 1868               	.global	rgblight_increase_sat_helper
 1870               	rgblight_increase_sat_helper:
 1871               	.LVL111:
 1872               	.LFB117:
 415:quantum/rgblight.c ****   uint8_t sat = qadd8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 1873               		.loc 1 415 57 view -0
 1874               		.cfi_startproc
 1875               	/* prologue: function */
 1876               	/* frame size = 0 */
 1877               	/* stack size = 0 */
 1878               	.L__stack_usage = 0
 416:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1879               		.loc 1 416 3 view .LVU417
 1880               	.LBB76:
 1881               	.LBI76:
 1882               		.file 2 "./lib/lib8tion/math8.h"
   1:./lib/lib8tion/math8.h **** #ifndef __INC_LIB8TION_MATH_H
   2:./lib/lib8tion/math8.h **** #define __INC_LIB8TION_MATH_H
   3:./lib/lib8tion/math8.h **** 
   4:./lib/lib8tion/math8.h **** #include "scale8.h"
   5:./lib/lib8tion/math8.h **** 
   6:./lib/lib8tion/math8.h **** ///@ingroup lib8tion
   7:./lib/lib8tion/math8.h **** 
   8:./lib/lib8tion/math8.h **** ///@defgroup Math Basic math operations
   9:./lib/lib8tion/math8.h **** /// Fast, efficient 8-bit math functions specifically
  10:./lib/lib8tion/math8.h **** /// designed for high-performance LED programming.
  11:./lib/lib8tion/math8.h **** ///
  12:./lib/lib8tion/math8.h **** /// Because of the AVR(Arduino) and ARM assembly language
  13:./lib/lib8tion/math8.h **** /// implementations provided, using these functions often
  14:./lib/lib8tion/math8.h **** /// results in smaller and faster code than the equivalent
  15:./lib/lib8tion/math8.h **** /// program using plain "C" arithmetic and logic.
  16:./lib/lib8tion/math8.h **** ///@{
  17:./lib/lib8tion/math8.h **** 
  18:./lib/lib8tion/math8.h **** 
  19:./lib/lib8tion/math8.h **** /// add one byte to another, saturating at 0xFF
  20:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  21:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  22:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  23:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qadd8( uint8_t i, uint8_t j)
 1883               		.loc 2 23 34 view .LVU418
 1884               	.LBB77:
  24:./lib/lib8tion/math8.h **** {
  25:./lib/lib8tion/math8.h **** #if QADD8_C == 1
  26:./lib/lib8tion/math8.h ****     uint16_t t = i + j;
  27:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
  28:./lib/lib8tion/math8.h ****     return t;
  29:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
  30:./lib/lib8tion/math8.h ****     asm volatile(
 1885               		.loc 2 30 5 view .LVU419
 1886               	.LBE77:
 1887               	.LBE76:
 416:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1888               		.loc 1 416 17 is_stmt 0 view .LVU420
 1889 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1890 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1891               	.LBB79:
 1892               	.LBB78:
 1893               		.loc 2 30 5 view .LVU421
 1894 0004 6281      		ldd r22,Z+2
 1895 0006 28E0      		ldi r18,lo8(8)
 1896               	/* #APP */
 1897               	 ;  30 "./lib/lib8tion/math8.h" 1
 1898 0008 620F      		add r22, r18    
 1899 000a 00F4      		brcc L_1572     
 1900 000c 6FEF      		ldi r22, 0xFF  
 1901               		L_1572: 
 1902               	 ;  0 "" 2
 1903               	.LVL112:
  31:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
  32:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  33:./lib/lib8tion/math8.h **** 
  34:./lib/lib8tion/math8.h ****          /* Now test the C flag.
  35:./lib/lib8tion/math8.h ****            If C is clear, we branch around a load of 0xFF into i.
  36:./lib/lib8tion/math8.h ****            If C is set, we go ahead and load 0xFF into i.
  37:./lib/lib8tion/math8.h ****          */
  38:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
  39:./lib/lib8tion/math8.h ****          "ldi %0, 0xFF  \n\t"
  40:./lib/lib8tion/math8.h ****          "L_%=: "
  41:./lib/lib8tion/math8.h ****          : "+a" (i)
  42:./lib/lib8tion/math8.h ****          : "a"  (j) );
  43:./lib/lib8tion/math8.h ****     return i;
 1904               		.loc 2 43 5 is_stmt 1 view .LVU422
 1905               		.loc 2 43 5 is_stmt 0 view .LVU423
 1906               	/* #NOAPP */
 1907               	.LBE78:
 1908               	.LBE79:
 417:quantum/rgblight.c **** }
 1909               		.loc 1 417 3 is_stmt 1 view .LVU424
 1910 000e 282F      		mov r18,r24
 1911 0010 4381      		ldd r20,Z+3
 1912 0012 8181      		ldd r24,Z+1
 1913               	.LVL113:
 417:quantum/rgblight.c **** }
 1914               		.loc 1 417 3 is_stmt 0 view .LVU425
 1915 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1916               	.LVL114:
 417:quantum/rgblight.c **** }
 1917               		.loc 1 417 3 view .LVU426
 1918               		.cfi_endproc
 1919               	.LFE117:
 1921               		.section	.text.rgblight_increase_sat_noeeprom,"ax",@progbits
 1922               	.global	rgblight_increase_sat_noeeprom
 1924               	rgblight_increase_sat_noeeprom:
 1925               	.LFB118:
 419:quantum/rgblight.c ****   rgblight_increase_sat_helper(false);
 1926               		.loc 1 419 43 is_stmt 1 view -0
 1927               		.cfi_startproc
 1928               	/* prologue: function */
 1929               	/* frame size = 0 */
 1930               	/* stack size = 0 */
 1931               	.L__stack_usage = 0
 420:quantum/rgblight.c **** }
 1932               		.loc 1 420 3 view .LVU428
 1933 0000 80E0      		ldi r24,0
 1934 0002 0C94 0000 		jmp rgblight_increase_sat_helper
 1935               	.LVL115:
 1936               		.cfi_endproc
 1937               	.LFE118:
 1939               		.section	.text.rgblight_increase_sat,"ax",@progbits
 1940               	.global	rgblight_increase_sat
 1942               	rgblight_increase_sat:
 1943               	.LFB119:
 422:quantum/rgblight.c ****   rgblight_increase_sat_helper(true);
 1944               		.loc 1 422 34 view -0
 1945               		.cfi_startproc
 1946               	/* prologue: function */
 1947               	/* frame size = 0 */
 1948               	/* stack size = 0 */
 1949               	.L__stack_usage = 0
 423:quantum/rgblight.c **** }
 1950               		.loc 1 423 3 view .LVU430
 1951 0000 81E0      		ldi r24,lo8(1)
 1952 0002 0C94 0000 		jmp rgblight_increase_sat_helper
 1953               	.LVL116:
 1954               		.cfi_endproc
 1955               	.LFE119:
 1957               		.section	.text.rgblight_decrease_sat_helper,"ax",@progbits
 1958               	.global	rgblight_decrease_sat_helper
 1960               	rgblight_decrease_sat_helper:
 1961               	.LVL117:
 1962               	.LFB120:
 425:quantum/rgblight.c ****   uint8_t sat = qsub8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 1963               		.loc 1 425 57 view -0
 1964               		.cfi_startproc
 1965               	/* prologue: function */
 1966               	/* frame size = 0 */
 1967               	/* stack size = 0 */
 1968               	.L__stack_usage = 0
 426:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1969               		.loc 1 426 3 view .LVU432
 1970               	.LBB80:
 1971               	.LBI80:
  44:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
  45:./lib/lib8tion/math8.h ****     asm volatile( "uqadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  46:./lib/lib8tion/math8.h ****     return i;
  47:./lib/lib8tion/math8.h **** #else
  48:./lib/lib8tion/math8.h **** #error "No implementation for qadd8 available."
  49:./lib/lib8tion/math8.h **** #endif
  50:./lib/lib8tion/math8.h **** }
  51:./lib/lib8tion/math8.h **** 
  52:./lib/lib8tion/math8.h **** /// Add one byte to another, saturating at 0x7F
  53:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  54:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  55:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  56:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int8_t qadd7( int8_t i, int8_t j)
  57:./lib/lib8tion/math8.h **** {
  58:./lib/lib8tion/math8.h **** #if QADD7_C == 1
  59:./lib/lib8tion/math8.h ****     int16_t t = i + j;
  60:./lib/lib8tion/math8.h ****     if (t > 127) t = 127;
  61:./lib/lib8tion/math8.h ****     return t;
  62:./lib/lib8tion/math8.h **** #elif QADD7_AVRASM == 1
  63:./lib/lib8tion/math8.h ****     asm volatile(
  64:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the V flag */
  65:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  66:./lib/lib8tion/math8.h **** 
  67:./lib/lib8tion/math8.h ****          /* Now test the V flag.
  68:./lib/lib8tion/math8.h ****           If V is clear, we branch around a load of 0x7F into i.
  69:./lib/lib8tion/math8.h ****           If V is set, we go ahead and load 0x7F into i.
  70:./lib/lib8tion/math8.h ****           */
  71:./lib/lib8tion/math8.h ****          "brvc L_%=     \n\t"
  72:./lib/lib8tion/math8.h ****          "ldi %0, 0x7F  \n\t"
  73:./lib/lib8tion/math8.h ****          "L_%=: "
  74:./lib/lib8tion/math8.h ****          : "+a" (i)
  75:./lib/lib8tion/math8.h ****          : "a"  (j) );
  76:./lib/lib8tion/math8.h **** 
  77:./lib/lib8tion/math8.h ****     return i;
  78:./lib/lib8tion/math8.h **** #elif QADD7_ARM_DSP_ASM == 1
  79:./lib/lib8tion/math8.h ****     asm volatile( "qadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  80:./lib/lib8tion/math8.h ****     return i;
  81:./lib/lib8tion/math8.h **** #else
  82:./lib/lib8tion/math8.h **** #error "No implementation for qadd7 available."
  83:./lib/lib8tion/math8.h **** #endif
  84:./lib/lib8tion/math8.h **** }
  85:./lib/lib8tion/math8.h **** 
  86:./lib/lib8tion/math8.h **** /// subtract one byte from another, saturating at 0x00
  87:./lib/lib8tion/math8.h **** /// @returns i - j with a floor of 0
  88:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qsub8( uint8_t i, uint8_t j)
 1972               		.loc 2 88 34 view .LVU433
 1973               	.LBB81:
  89:./lib/lib8tion/math8.h **** {
  90:./lib/lib8tion/math8.h **** #if QSUB8_C == 1
  91:./lib/lib8tion/math8.h ****     int16_t t = i - j;
  92:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
  93:./lib/lib8tion/math8.h ****     return t;
  94:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
  95:./lib/lib8tion/math8.h **** 
  96:./lib/lib8tion/math8.h ****     asm volatile(
 1974               		.loc 2 96 5 view .LVU434
 1975               	.LBE81:
 1976               	.LBE80:
 426:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1977               		.loc 1 426 17 is_stmt 0 view .LVU435
 1978 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1979 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1980               	.LBB83:
 1981               	.LBB82:
 1982               		.loc 2 96 5 view .LVU436
 1983 0004 6281      		ldd r22,Z+2
 1984 0006 28E0      		ldi r18,lo8(8)
 1985               	/* #APP */
 1986               	 ;  96 "./lib/lib8tion/math8.h" 1
 1987 0008 621B      		sub r22, r18    
 1988 000a 00F4      		brcc L_1628     
 1989 000c 60E0      		ldi r22, 0x00  
 1990               		L_1628: 
 1991               	 ;  0 "" 2
 1992               	.LVL118:
  97:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
  98:./lib/lib8tion/math8.h ****          "sub %0, %1    \n\t"
  99:./lib/lib8tion/math8.h **** 
 100:./lib/lib8tion/math8.h ****          /* Now test the C flag.
 101:./lib/lib8tion/math8.h ****           If C is clear, we branch around a load of 0x00 into i.
 102:./lib/lib8tion/math8.h ****           If C is set, we go ahead and load 0x00 into i.
 103:./lib/lib8tion/math8.h ****           */
 104:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
 105:./lib/lib8tion/math8.h ****          "ldi %0, 0x00  \n\t"
 106:./lib/lib8tion/math8.h ****          "L_%=: "
 107:./lib/lib8tion/math8.h ****          : "+a" (i)
 108:./lib/lib8tion/math8.h ****          : "a"  (j) );
 109:./lib/lib8tion/math8.h **** 
 110:./lib/lib8tion/math8.h ****     return i;
 1993               		.loc 2 110 5 is_stmt 1 view .LVU437
 1994               		.loc 2 110 5 is_stmt 0 view .LVU438
 1995               	/* #NOAPP */
 1996               	.LBE82:
 1997               	.LBE83:
 427:quantum/rgblight.c **** }
 1998               		.loc 1 427 3 is_stmt 1 view .LVU439
 1999 000e 282F      		mov r18,r24
 2000 0010 4381      		ldd r20,Z+3
 2001 0012 8181      		ldd r24,Z+1
 2002               	.LVL119:
 427:quantum/rgblight.c **** }
 2003               		.loc 1 427 3 is_stmt 0 view .LVU440
 2004 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2005               	.LVL120:
 427:quantum/rgblight.c **** }
 2006               		.loc 1 427 3 view .LVU441
 2007               		.cfi_endproc
 2008               	.LFE120:
 2010               		.section	.text.rgblight_decrease_sat_noeeprom,"ax",@progbits
 2011               	.global	rgblight_decrease_sat_noeeprom
 2013               	rgblight_decrease_sat_noeeprom:
 2014               	.LFB121:
 429:quantum/rgblight.c ****   rgblight_decrease_sat_helper(false);
 2015               		.loc 1 429 43 is_stmt 1 view -0
 2016               		.cfi_startproc
 2017               	/* prologue: function */
 2018               	/* frame size = 0 */
 2019               	/* stack size = 0 */
 2020               	.L__stack_usage = 0
 430:quantum/rgblight.c **** }
 2021               		.loc 1 430 3 view .LVU443
 2022 0000 80E0      		ldi r24,0
 2023 0002 0C94 0000 		jmp rgblight_decrease_sat_helper
 2024               	.LVL121:
 2025               		.cfi_endproc
 2026               	.LFE121:
 2028               		.section	.text.rgblight_decrease_sat,"ax",@progbits
 2029               	.global	rgblight_decrease_sat
 2031               	rgblight_decrease_sat:
 2032               	.LFB122:
 432:quantum/rgblight.c ****   rgblight_decrease_sat_helper(true);
 2033               		.loc 1 432 34 view -0
 2034               		.cfi_startproc
 2035               	/* prologue: function */
 2036               	/* frame size = 0 */
 2037               	/* stack size = 0 */
 2038               	.L__stack_usage = 0
 433:quantum/rgblight.c **** }
 2039               		.loc 1 433 3 view .LVU445
 2040 0000 81E0      		ldi r24,lo8(1)
 2041 0002 0C94 0000 		jmp rgblight_decrease_sat_helper
 2042               	.LVL122:
 2043               		.cfi_endproc
 2044               	.LFE122:
 2046               		.section	.text.rgblight_increase_val_helper,"ax",@progbits
 2047               	.global	rgblight_increase_val_helper
 2049               	rgblight_increase_val_helper:
 2050               	.LVL123:
 2051               	.LFB123:
 435:quantum/rgblight.c ****   uint8_t val = qadd8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 2052               		.loc 1 435 57 view -0
 2053               		.cfi_startproc
 2054               	/* prologue: function */
 2055               	/* frame size = 0 */
 2056               	/* stack size = 0 */
 2057               	.L__stack_usage = 0
 436:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 2058               		.loc 1 436 3 view .LVU447
 2059               	.LBB84:
 2060               	.LBI84:
  23:./lib/lib8tion/math8.h **** {
 2061               		.loc 2 23 34 view .LVU448
 2062               	.LBB85:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 2063               		.loc 2 30 5 view .LVU449
 2064               	.LBE85:
 2065               	.LBE84:
 436:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 2066               		.loc 1 436 17 is_stmt 0 view .LVU450
 2067 0000 E0E0      		ldi r30,lo8(rgblight_config)
 2068 0002 F0E0      		ldi r31,hi8(rgblight_config)
 2069               	.LBB87:
 2070               	.LBB86:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 2071               		.loc 2 30 5 view .LVU451
 2072 0004 4381      		ldd r20,Z+3
 2073 0006 28E0      		ldi r18,lo8(8)
 2074               	/* #APP */
 2075               	 ;  30 "./lib/lib8tion/math8.h" 1
 2076 0008 420F      		add r20, r18    
 2077 000a 00F4      		brcc L_1684     
 2078 000c 4FEF      		ldi r20, 0xFF  
 2079               		L_1684: 
 2080               	 ;  0 "" 2
 2081               	.LVL124:
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 2082               		.loc 2 43 5 is_stmt 1 view .LVU452
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 2083               		.loc 2 43 5 is_stmt 0 view .LVU453
 2084               	/* #NOAPP */
 2085               	.LBE86:
 2086               	.LBE87:
 437:quantum/rgblight.c **** }
 2087               		.loc 1 437 3 is_stmt 1 view .LVU454
 2088 000e 282F      		mov r18,r24
 2089 0010 6281      		ldd r22,Z+2
 2090 0012 8181      		ldd r24,Z+1
 2091               	.LVL125:
 437:quantum/rgblight.c **** }
 2092               		.loc 1 437 3 is_stmt 0 view .LVU455
 2093 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2094               	.LVL126:
 437:quantum/rgblight.c **** }
 2095               		.loc 1 437 3 view .LVU456
 2096               		.cfi_endproc
 2097               	.LFE123:
 2099               		.section	.text.rgblight_increase_val_noeeprom,"ax",@progbits
 2100               	.global	rgblight_increase_val_noeeprom
 2102               	rgblight_increase_val_noeeprom:
 2103               	.LFB124:
 439:quantum/rgblight.c ****   rgblight_increase_val_helper(false);
 2104               		.loc 1 439 43 is_stmt 1 view -0
 2105               		.cfi_startproc
 2106               	/* prologue: function */
 2107               	/* frame size = 0 */
 2108               	/* stack size = 0 */
 2109               	.L__stack_usage = 0
 440:quantum/rgblight.c **** }
 2110               		.loc 1 440 3 view .LVU458
 2111 0000 80E0      		ldi r24,0
 2112 0002 0C94 0000 		jmp rgblight_increase_val_helper
 2113               	.LVL127:
 2114               		.cfi_endproc
 2115               	.LFE124:
 2117               		.section	.text.rgblight_increase_val,"ax",@progbits
 2118               	.global	rgblight_increase_val
 2120               	rgblight_increase_val:
 2121               	.LFB125:
 442:quantum/rgblight.c ****   rgblight_increase_val_helper(true);
 2122               		.loc 1 442 34 view -0
 2123               		.cfi_startproc
 2124               	/* prologue: function */
 2125               	/* frame size = 0 */
 2126               	/* stack size = 0 */
 2127               	.L__stack_usage = 0
 443:quantum/rgblight.c **** }
 2128               		.loc 1 443 3 view .LVU460
 2129 0000 81E0      		ldi r24,lo8(1)
 2130 0002 0C94 0000 		jmp rgblight_increase_val_helper
 2131               	.LVL128:
 2132               		.cfi_endproc
 2133               	.LFE125:
 2135               		.section	.text.rgblight_decrease_val_helper,"ax",@progbits
 2136               	.global	rgblight_decrease_val_helper
 2138               	rgblight_decrease_val_helper:
 2139               	.LVL129:
 2140               	.LFB126:
 445:quantum/rgblight.c ****   uint8_t val = qsub8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 2141               		.loc 1 445 57 view -0
 2142               		.cfi_startproc
 2143               	/* prologue: function */
 2144               	/* frame size = 0 */
 2145               	/* stack size = 0 */
 2146               	.L__stack_usage = 0
 446:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 2147               		.loc 1 446 3 view .LVU462
 2148               	.LBB88:
 2149               	.LBI88:
  88:./lib/lib8tion/math8.h **** {
 2150               		.loc 2 88 34 view .LVU463
 2151               	.LBB89:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 2152               		.loc 2 96 5 view .LVU464
 2153               	.LBE89:
 2154               	.LBE88:
 446:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 2155               		.loc 1 446 17 is_stmt 0 view .LVU465
 2156 0000 E0E0      		ldi r30,lo8(rgblight_config)
 2157 0002 F0E0      		ldi r31,hi8(rgblight_config)
 2158               	.LBB91:
 2159               	.LBB90:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 2160               		.loc 2 96 5 view .LVU466
 2161 0004 4381      		ldd r20,Z+3
 2162 0006 28E0      		ldi r18,lo8(8)
 2163               	/* #APP */
 2164               	 ;  96 "./lib/lib8tion/math8.h" 1
 2165 0008 421B      		sub r20, r18    
 2166 000a 00F4      		brcc L_1740     
 2167 000c 40E0      		ldi r20, 0x00  
 2168               		L_1740: 
 2169               	 ;  0 "" 2
 2170               	.LVL130:
 2171               		.loc 2 110 5 is_stmt 1 view .LVU467
 2172               		.loc 2 110 5 is_stmt 0 view .LVU468
 2173               	/* #NOAPP */
 2174               	.LBE90:
 2175               	.LBE91:
 447:quantum/rgblight.c **** }
 2176               		.loc 1 447 3 is_stmt 1 view .LVU469
 2177 000e 282F      		mov r18,r24
 2178 0010 6281      		ldd r22,Z+2
 2179 0012 8181      		ldd r24,Z+1
 2180               	.LVL131:
 447:quantum/rgblight.c **** }
 2181               		.loc 1 447 3 is_stmt 0 view .LVU470
 2182 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2183               	.LVL132:
 447:quantum/rgblight.c **** }
 2184               		.loc 1 447 3 view .LVU471
 2185               		.cfi_endproc
 2186               	.LFE126:
 2188               		.section	.text.rgblight_decrease_val_noeeprom,"ax",@progbits
 2189               	.global	rgblight_decrease_val_noeeprom
 2191               	rgblight_decrease_val_noeeprom:
 2192               	.LFB127:
 449:quantum/rgblight.c ****   rgblight_decrease_val_helper(false);
 2193               		.loc 1 449 43 is_stmt 1 view -0
 2194               		.cfi_startproc
 2195               	/* prologue: function */
 2196               	/* frame size = 0 */
 2197               	/* stack size = 0 */
 2198               	.L__stack_usage = 0
 450:quantum/rgblight.c **** }
 2199               		.loc 1 450 3 view .LVU473
 2200 0000 80E0      		ldi r24,0
 2201 0002 0C94 0000 		jmp rgblight_decrease_val_helper
 2202               	.LVL133:
 2203               		.cfi_endproc
 2204               	.LFE127:
 2206               		.section	.text.rgblight_decrease_val,"ax",@progbits
 2207               	.global	rgblight_decrease_val
 2209               	rgblight_decrease_val:
 2210               	.LFB128:
 452:quantum/rgblight.c ****   rgblight_decrease_val_helper(true);
 2211               		.loc 1 452 34 view -0
 2212               		.cfi_startproc
 2213               	/* prologue: function */
 2214               	/* frame size = 0 */
 2215               	/* stack size = 0 */
 2216               	.L__stack_usage = 0
 453:quantum/rgblight.c **** }
 2217               		.loc 1 453 3 view .LVU475
 2218 0000 81E0      		ldi r24,lo8(1)
 2219 0002 0C94 0000 		jmp rgblight_decrease_val_helper
 2220               	.LVL134:
 2221               		.cfi_endproc
 2222               	.LFE128:
 2224               		.section	.text.rgblight_sethsv,"ax",@progbits
 2225               	.global	rgblight_sethsv
 2227               	rgblight_sethsv:
 2228               	.LVL135:
 2229               	.LFB133:
 551:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(hue, sat, val, true);
 2230               		.loc 1 551 61 view -0
 2231               		.cfi_startproc
 2232               	/* prologue: function */
 2233               	/* frame size = 0 */
 2234               	/* stack size = 0 */
 2235               	.L__stack_usage = 0
 552:quantum/rgblight.c **** }
 2236               		.loc 1 552 3 view .LVU477
 2237 0000 21E0      		ldi r18,lo8(1)
 2238 0002 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2239               	.LVL136:
 552:quantum/rgblight.c **** }
 2240               		.loc 1 552 3 is_stmt 0 view .LVU478
 2241               		.cfi_endproc
 2242               	.LFE133:
 2244               		.section	.text.rgblight_sethsv_noeeprom,"ax",@progbits
 2245               	.global	rgblight_sethsv_noeeprom
 2247               	rgblight_sethsv_noeeprom:
 2248               	.LVL137:
 2249               	.LFB134:
 555:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(hue, sat, val, false);
 2250               		.loc 1 555 70 is_stmt 1 view -0
 2251               		.cfi_startproc
 2252               	/* prologue: function */
 2253               	/* frame size = 0 */
 2254               	/* stack size = 0 */
 2255               	.L__stack_usage = 0
 556:quantum/rgblight.c **** }
 2256               		.loc 1 556 3 view .LVU480
 2257 0000 20E0      		ldi r18,0
 2258 0002 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2259               	.LVL138:
 556:quantum/rgblight.c **** }
 2260               		.loc 1 556 3 is_stmt 0 view .LVU481
 2261               		.cfi_endproc
 2262               	.LFE134:
 2264               		.section	.text.rgblight_setrgb_at,"ax",@progbits
 2265               	.global	rgblight_setrgb_at
 2267               	rgblight_setrgb_at:
 2268               	.LVL139:
 2269               	.LFB139:
 582:quantum/rgblight.c ****   if (!rgblight_config.enable || index >= RGBLED_NUM) { return; }
 2270               		.loc 1 582 73 is_stmt 1 view -0
 2271               		.cfi_startproc
 2272               	/* prologue: function */
 2273               	/* frame size = 0 */
 2274               	/* stack size = 0 */
 2275               	.L__stack_usage = 0
 583:quantum/rgblight.c **** 
 2276               		.loc 1 583 3 view .LVU483
 583:quantum/rgblight.c **** 
 2277               		.loc 1 583 23 is_stmt 0 view .LVU484
 2278 0000 9091 0000 		lds r25,rgblight_config
 583:quantum/rgblight.c **** 
 2279               		.loc 1 583 6 view .LVU485
 2280 0004 90FF      		sbrs r25,0
 2281 0006 00C0      		rjmp .L129
 583:quantum/rgblight.c **** 
 2282               		.loc 1 583 31 discriminator 2 view .LVU486
 2283 0008 2E30      		cpi r18,lo8(14)
 2284 000a 00F4      		brsh .L129
 585:quantum/rgblight.c ****   led[index].g = g;
 2285               		.loc 1 585 3 is_stmt 1 view .LVU487
 585:quantum/rgblight.c ****   led[index].g = g;
 2286               		.loc 1 585 13 is_stmt 0 view .LVU488
 2287 000c 30E0      		ldi r19,0
 585:quantum/rgblight.c ****   led[index].g = g;
 2288               		.loc 1 585 16 view .LVU489
 2289 000e F901      		movw r30,r18
 2290 0010 EE0F      		lsl r30
 2291 0012 FF1F      		rol r31
 2292 0014 E20F      		add r30,r18
 2293 0016 F31F      		adc r31,r19
 2294 0018 E050      		subi r30,lo8(-(led))
 2295 001a F040      		sbci r31,hi8(-(led))
 2296 001c 8183      		std Z+1,r24
 586:quantum/rgblight.c ****   led[index].b = b;
 2297               		.loc 1 586 3 is_stmt 1 view .LVU490
 586:quantum/rgblight.c ****   led[index].b = b;
 2298               		.loc 1 586 16 is_stmt 0 view .LVU491
 2299 001e 6083      		st Z,r22
 587:quantum/rgblight.c ****   rgblight_set();
 2300               		.loc 1 587 3 is_stmt 1 view .LVU492
 587:quantum/rgblight.c ****   rgblight_set();
 2301               		.loc 1 587 16 is_stmt 0 view .LVU493
 2302 0020 4283      		std Z+2,r20
 588:quantum/rgblight.c **** }
 2303               		.loc 1 588 3 is_stmt 1 view .LVU494
 2304 0022 0C94 0000 		jmp rgblight_set
 2305               	.LVL140:
 2306               	.L129:
 2307               	/* epilogue start */
 589:quantum/rgblight.c **** 
 2308               		.loc 1 589 1 is_stmt 0 view .LVU495
 2309 0026 0895      		ret
 2310               		.cfi_endproc
 2311               	.LFE139:
 2313               		.section	.text.rgblight_sethsv_at,"ax",@progbits
 2314               	.global	rgblight_sethsv_at
 2316               	rgblight_sethsv_at:
 2317               	.LVL141:
 2318               	.LFB140:
 591:quantum/rgblight.c ****   if (!rgblight_config.enable) { return; }
 2319               		.loc 1 591 79 is_stmt 1 view -0
 2320               		.cfi_startproc
 591:quantum/rgblight.c ****   if (!rgblight_config.enable) { return; }
 2321               		.loc 1 591 79 is_stmt 0 view .LVU497
 2322 0000 1F93      		push r17
 2323               	.LCFI71:
 2324               		.cfi_def_cfa_offset 3
 2325               		.cfi_offset 17, -2
 2326 0002 CF93      		push r28
 2327               	.LCFI72:
 2328               		.cfi_def_cfa_offset 4
 2329               		.cfi_offset 28, -3
 2330 0004 DF93      		push r29
 2331               	.LCFI73:
 2332               		.cfi_def_cfa_offset 5
 2333               		.cfi_offset 29, -4
 2334 0006 00D0      		rcall .
 2335 0008 0F92      		push __tmp_reg__
 2336               	.LCFI74:
 2337               		.cfi_def_cfa_offset 8
 2338 000a CDB7      		in r28,__SP_L__
 2339 000c DEB7      		in r29,__SP_H__
 2340               	.LCFI75:
 2341               		.cfi_def_cfa_register 28
 2342               	/* prologue: function */
 2343               	/* frame size = 3 */
 2344               	/* stack size = 6 */
 2345               	.L__stack_usage = 6
 2346 000e 122F      		mov r17,r18
 592:quantum/rgblight.c **** 
 2347               		.loc 1 592 3 is_stmt 1 view .LVU498
 592:quantum/rgblight.c **** 
 2348               		.loc 1 592 23 is_stmt 0 view .LVU499
 2349 0010 9091 0000 		lds r25,rgblight_config
 592:quantum/rgblight.c **** 
 2350               		.loc 1 592 6 view .LVU500
 2351 0014 90FF      		sbrs r25,0
 2352 0016 00C0      		rjmp .L134
 594:quantum/rgblight.c ****   sethsv(hue, sat, val, &tmp_led);
 2353               		.loc 1 594 3 is_stmt 1 view .LVU501
 595:quantum/rgblight.c ****   rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 2354               		.loc 1 595 3 view .LVU502
 2355               	.LVL142:
 2356               	.LBB94:
 2357               	.LBI94:
 127:quantum/rgblight.c ****   sethsv_raw( hue, sat,
 2358               		.loc 1 127 6 view .LVU503
 2359               	.LBB95:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 2360               		.loc 1 128 3 view .LVU504
 2361 0018 9E01      		movw r18,r28
 2362               	.LVL143:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 2363               		.loc 1 128 3 is_stmt 0 view .LVU505
 2364 001a 2F5F      		subi r18,-1
 2365 001c 3F4F      		sbci r19,-1
 2366 001e 0E94 0000 		call sethsv_raw
 2367               	.LVL144:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 2368               		.loc 1 128 3 view .LVU506
 2369               	.LBE95:
 2370               	.LBE94:
 596:quantum/rgblight.c **** }
 2371               		.loc 1 596 3 is_stmt 1 view .LVU507
 2372 0022 212F      		mov r18,r17
 2373 0024 4B81      		ldd r20,Y+3
 2374 0026 6981      		ldd r22,Y+1
 2375 0028 8A81      		ldd r24,Y+2
 2376 002a 0E94 0000 		call rgblight_setrgb_at
 2377               	.LVL145:
 2378               	.L134:
 2379               	/* epilogue start */
 597:quantum/rgblight.c **** 
 2380               		.loc 1 597 1 is_stmt 0 view .LVU508
 2381 002e 0F90      		pop __tmp_reg__
 2382 0030 0F90      		pop __tmp_reg__
 2383 0032 0F90      		pop __tmp_reg__
 2384 0034 DF91      		pop r29
 2385 0036 CF91      		pop r28
 2386 0038 1F91      		pop r17
 2387               	.LVL146:
 597:quantum/rgblight.c **** 
 2388               		.loc 1 597 1 view .LVU509
 2389 003a 0895      		ret
 2390               		.cfi_endproc
 2391               	.LFE140:
 2393               		.section	.text.rgblight_setrgb_range,"ax",@progbits
 2394               	.global	rgblight_setrgb_range
 2396               	rgblight_setrgb_range:
 2397               	.LVL147:
 2398               	.LFB142:
 612:quantum/rgblight.c ****   if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) { return; }
 2399               		.loc 1 612 89 is_stmt 1 view -0
 2400               		.cfi_startproc
 612:quantum/rgblight.c ****   if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) { return; }
 2401               		.loc 1 612 89 is_stmt 0 view .LVU511
 2402 0000 0F93      		push r16
 2403               	.LCFI76:
 2404               		.cfi_def_cfa_offset 3
 2405               		.cfi_offset 16, -2
 2406               	/* prologue: function */
 2407               	/* frame size = 0 */
 2408               	/* stack size = 1 */
 2409               	.L__stack_usage = 1
 613:quantum/rgblight.c **** 
 2410               		.loc 1 613 3 is_stmt 1 view .LVU512
 613:quantum/rgblight.c **** 
 2411               		.loc 1 613 23 is_stmt 0 view .LVU513
 2412 0002 9091 0000 		lds r25,rgblight_config
 613:quantum/rgblight.c **** 
 2413               		.loc 1 613 6 view .LVU514
 2414 0006 90FF      		sbrs r25,0
 2415 0008 00C0      		rjmp .L137
 613:quantum/rgblight.c **** 
 2416               		.loc 1 613 44 discriminator 2 view .LVU515
 2417 000a 2017      		cp r18,r16
 2418 000c 00F4      		brsh .L137
 613:quantum/rgblight.c **** 
 2419               		.loc 1 613 60 discriminator 4 view .LVU516
 2420 000e 0F30      		cpi r16,lo8(15)
 2421 0010 00F4      		brsh .L137
 2422 0012 93E0      		ldi r25,lo8(3)
 2423 0014 299F      		mul r18,r25
 2424 0016 F001      		movw r30,r0
 2425 0018 1124      		clr __zero_reg__
 2426 001a E050      		subi r30,lo8(-(led))
 2427 001c F040      		sbci r31,hi8(-(led))
 2428               	.LVL148:
 2429               	.L139:
 2430               	.LBB96:
 616:quantum/rgblight.c ****     led[i].g = g;
 2431               		.loc 1 616 5 is_stmt 1 discriminator 3 view .LVU517
 616:quantum/rgblight.c ****     led[i].g = g;
 2432               		.loc 1 616 14 is_stmt 0 discriminator 3 view .LVU518
 2433 001e 8183      		std Z+1,r24
 617:quantum/rgblight.c ****     led[i].b = b;
 2434               		.loc 1 617 5 is_stmt 1 discriminator 3 view .LVU519
 617:quantum/rgblight.c ****     led[i].b = b;
 2435               		.loc 1 617 14 is_stmt 0 discriminator 3 view .LVU520
 2436 0020 6083      		st Z,r22
 618:quantum/rgblight.c ****   }
 2437               		.loc 1 618 5 is_stmt 1 discriminator 3 view .LVU521
 618:quantum/rgblight.c ****   }
 2438               		.loc 1 618 14 is_stmt 0 discriminator 3 view .LVU522
 2439 0022 4283      		std Z+2,r20
 615:quantum/rgblight.c ****     led[i].r = r;
 2440               		.loc 1 615 37 discriminator 3 view .LVU523
 2441 0024 2F5F      		subi r18,lo8(-(1))
 2442               	.LVL149:
 615:quantum/rgblight.c ****     led[i].r = r;
 2443               		.loc 1 615 37 discriminator 3 view .LVU524
 2444 0026 3396      		adiw r30,3
 615:quantum/rgblight.c ****     led[i].r = r;
 2445               		.loc 1 615 3 discriminator 3 view .LVU525
 2446 0028 0213      		cpse r16,r18
 2447 002a 00C0      		rjmp .L139
 615:quantum/rgblight.c ****     led[i].r = r;
 2448               		.loc 1 615 3 discriminator 3 view .LVU526
 2449               	.LBE96:
 620:quantum/rgblight.c ****   wait_ms(1);
 2450               		.loc 1 620 3 is_stmt 1 view .LVU527
 2451 002c 0E94 0000 		call rgblight_set
 2452               	.LVL150:
 621:quantum/rgblight.c **** }
 2453               		.loc 1 621 3 view .LVU528
 2454               	.LBB97:
 2455               	.LBI97:
 2456               		.file 3 "/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h"
   1:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** _delay_ms(double __ms)
 2457               		.loc 3 166 1 view .LVU529
 2458               	.LBB98:
 167:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	double __tmp ;
 2459               		.loc 3 168 2 view .LVU530
 169:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 2460               		.loc 3 172 2 view .LVU531
 173:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 2461               		.loc 3 173 2 view .LVU532
 174:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 2462               		.loc 3 174 2 view .LVU533
 175:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 2463               		.loc 3 184 3 view .LVU534
 185:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 2464               		.loc 3 187 2 view .LVU535
 2465 0030 8FE9      		ldi r24,lo8(3999)
 2466 0032 9FE0      		ldi r25,hi8(3999)
 2467 0034 0197      	1:	sbiw r24,1
 2468 0036 01F4      		brne 1b
 2469 0038 00C0      		rjmp .
 2470 003a 0000      		nop
 2471               	.LVL151:
 2472               	.L137:
 2473               	/* epilogue start */
 2474               		.loc 3 187 2 is_stmt 0 view .LVU536
 2475               	.LBE98:
 2476               	.LBE97:
 622:quantum/rgblight.c **** 
 2477               		.loc 1 622 1 view .LVU537
 2478 003c 0F91      		pop r16
 2479               	.LVL152:
 622:quantum/rgblight.c **** 
 2480               		.loc 1 622 1 view .LVU538
 2481 003e 0895      		ret
 2482               		.cfi_endproc
 2483               	.LFE142:
 2485               		.section	.text.rgblight_sethsv_range,"ax",@progbits
 2486               	.global	rgblight_sethsv_range
 2488               	rgblight_sethsv_range:
 2489               	.LVL153:
 2490               	.LFB143:
 624:quantum/rgblight.c ****   if (!rgblight_config.enable) { return; }
 2491               		.loc 1 624 95 is_stmt 1 view -0
 2492               		.cfi_startproc
 624:quantum/rgblight.c ****   if (!rgblight_config.enable) { return; }
 2493               		.loc 1 624 95 is_stmt 0 view .LVU540
 2494 0000 0F93      		push r16
 2495               	.LCFI77:
 2496               		.cfi_def_cfa_offset 3
 2497               		.cfi_offset 16, -2
 2498 0002 1F93      		push r17
 2499               	.LCFI78:
 2500               		.cfi_def_cfa_offset 4
 2501               		.cfi_offset 17, -3
 2502 0004 CF93      		push r28
 2503               	.LCFI79:
 2504               		.cfi_def_cfa_offset 5
 2505               		.cfi_offset 28, -4
 2506 0006 DF93      		push r29
 2507               	.LCFI80:
 2508               		.cfi_def_cfa_offset 6
 2509               		.cfi_offset 29, -5
 2510 0008 00D0      		rcall .
 2511 000a 0F92      		push __tmp_reg__
 2512               	.LCFI81:
 2513               		.cfi_def_cfa_offset 9
 2514 000c CDB7      		in r28,__SP_L__
 2515 000e DEB7      		in r29,__SP_H__
 2516               	.LCFI82:
 2517               		.cfi_def_cfa_register 28
 2518               	/* prologue: function */
 2519               	/* frame size = 3 */
 2520               	/* stack size = 7 */
 2521               	.L__stack_usage = 7
 2522 0010 122F      		mov r17,r18
 625:quantum/rgblight.c **** 
 2523               		.loc 1 625 3 is_stmt 1 view .LVU541
 625:quantum/rgblight.c **** 
 2524               		.loc 1 625 23 is_stmt 0 view .LVU542
 2525 0012 9091 0000 		lds r25,rgblight_config
 625:quantum/rgblight.c **** 
 2526               		.loc 1 625 6 view .LVU543
 2527 0016 90FF      		sbrs r25,0
 2528 0018 00C0      		rjmp .L144
 627:quantum/rgblight.c ****   sethsv(hue, sat, val, &tmp_led);
 2529               		.loc 1 627 3 is_stmt 1 view .LVU544
 628:quantum/rgblight.c ****   rgblight_setrgb_range(tmp_led.r, tmp_led.g, tmp_led.b, start, end);
 2530               		.loc 1 628 3 view .LVU545
 2531               	.LVL154:
 2532               	.LBB101:
 2533               	.LBI101:
 127:quantum/rgblight.c ****   sethsv_raw( hue, sat,
 2534               		.loc 1 127 6 view .LVU546
 2535               	.LBB102:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 2536               		.loc 1 128 3 view .LVU547
 2537 001a 9E01      		movw r18,r28
 2538               	.LVL155:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 2539               		.loc 1 128 3 is_stmt 0 view .LVU548
 2540 001c 2F5F      		subi r18,-1
 2541 001e 3F4F      		sbci r19,-1
 2542 0020 0E94 0000 		call sethsv_raw
 2543               	.LVL156:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 2544               		.loc 1 128 3 view .LVU549
 2545               	.LBE102:
 2546               	.LBE101:
 629:quantum/rgblight.c **** }
 2547               		.loc 1 629 3 is_stmt 1 view .LVU550
 2548 0024 212F      		mov r18,r17
 2549 0026 4B81      		ldd r20,Y+3
 2550 0028 6981      		ldd r22,Y+1
 2551 002a 8A81      		ldd r24,Y+2
 2552 002c 0E94 0000 		call rgblight_setrgb_range
 2553               	.LVL157:
 2554               	.L144:
 2555               	/* epilogue start */
 630:quantum/rgblight.c **** 
 2556               		.loc 1 630 1 is_stmt 0 view .LVU551
 2557 0030 0F90      		pop __tmp_reg__
 2558 0032 0F90      		pop __tmp_reg__
 2559 0034 0F90      		pop __tmp_reg__
 2560 0036 DF91      		pop r29
 2561 0038 CF91      		pop r28
 2562 003a 1F91      		pop r17
 2563               	.LVL158:
 630:quantum/rgblight.c **** 
 2564               		.loc 1 630 1 view .LVU552
 2565 003c 0F91      		pop r16
 2566               	.LVL159:
 630:quantum/rgblight.c **** 
 2567               		.loc 1 630 1 view .LVU553
 2568 003e 0895      		ret
 2569               		.cfi_endproc
 2570               	.LFE143:
 2572               		.section	.text.rgblight_sethsv_master,"ax",@progbits
 2573               	.global	rgblight_sethsv_master
 2575               	rgblight_sethsv_master:
 2576               	.LVL160:
 2577               	.LFB146:
 641:quantum/rgblight.c ****   rgblight_sethsv_range(hue, sat, val, 0, (uint8_t) RGBLED_NUM/2);
 2578               		.loc 1 641 68 is_stmt 1 view -0
 2579               		.cfi_startproc
 641:quantum/rgblight.c ****   rgblight_sethsv_range(hue, sat, val, 0, (uint8_t) RGBLED_NUM/2);
 2580               		.loc 1 641 68 is_stmt 0 view .LVU555
 2581 0000 0F93      		push r16
 2582               	.LCFI83:
 2583               		.cfi_def_cfa_offset 3
 2584               		.cfi_offset 16, -2
 2585               	/* prologue: function */
 2586               	/* frame size = 0 */
 2587               	/* stack size = 1 */
 2588               	.L__stack_usage = 1
 642:quantum/rgblight.c **** }
 2589               		.loc 1 642 3 is_stmt 1 view .LVU556
 2590 0002 07E0      		ldi r16,lo8(7)
 2591 0004 20E0      		ldi r18,0
 2592 0006 0E94 0000 		call rgblight_sethsv_range
 2593               	.LVL161:
 2594               	/* epilogue start */
 643:quantum/rgblight.c **** 
 2595               		.loc 1 643 1 is_stmt 0 view .LVU557
 2596 000a 0F91      		pop r16
 2597 000c 0895      		ret
 2598               		.cfi_endproc
 2599               	.LFE146:
 2601               		.section	.text.rgblight_sethsv_slave,"ax",@progbits
 2602               	.global	rgblight_sethsv_slave
 2604               	rgblight_sethsv_slave:
 2605               	.LVL162:
 2606               	.LFB147:
 645:quantum/rgblight.c ****   rgblight_sethsv_range(hue, sat, val, (uint8_t) RGBLED_NUM/2, (uint8_t) RGBLED_NUM);
 2607               		.loc 1 645 67 is_stmt 1 view -0
 2608               		.cfi_startproc
 645:quantum/rgblight.c ****   rgblight_sethsv_range(hue, sat, val, (uint8_t) RGBLED_NUM/2, (uint8_t) RGBLED_NUM);
 2609               		.loc 1 645 67 is_stmt 0 view .LVU559
 2610 0000 0F93      		push r16
 2611               	.LCFI84:
 2612               		.cfi_def_cfa_offset 3
 2613               		.cfi_offset 16, -2
 2614               	/* prologue: function */
 2615               	/* frame size = 0 */
 2616               	/* stack size = 1 */
 2617               	.L__stack_usage = 1
 646:quantum/rgblight.c **** }
 2618               		.loc 1 646 3 is_stmt 1 view .LVU560
 2619 0002 0EE0      		ldi r16,lo8(14)
 2620 0004 27E0      		ldi r18,lo8(7)
 2621 0006 0E94 0000 		call rgblight_sethsv_range
 2622               	.LVL163:
 2623               	/* epilogue start */
 647:quantum/rgblight.c **** #endif // ifndef RGBLIGHT_SPLIT
 2624               		.loc 1 647 1 is_stmt 0 view .LVU561
 2625 000a 0F91      		pop r16
 2626 000c 0895      		ret
 2627               		.cfi_endproc
 2628               	.LFE147:
 2630               		.section	.text.rgblight_setrgb_master,"ax",@progbits
 2631               	.global	rgblight_setrgb_master
 2633               	rgblight_setrgb_master:
 2634               	.LVL164:
 2635               	.LFB144:
 633:quantum/rgblight.c ****   rgblight_setrgb_range(r, g, b, 0 , (uint8_t) RGBLED_NUM/2);
 2636               		.loc 1 633 62 is_stmt 1 view -0
 2637               		.cfi_startproc
 633:quantum/rgblight.c ****   rgblight_setrgb_range(r, g, b, 0 , (uint8_t) RGBLED_NUM/2);
 2638               		.loc 1 633 62 is_stmt 0 view .LVU563
 2639 0000 0F93      		push r16
 2640               	.LCFI85:
 2641               		.cfi_def_cfa_offset 3
 2642               		.cfi_offset 16, -2
 2643               	/* prologue: function */
 2644               	/* frame size = 0 */
 2645               	/* stack size = 1 */
 2646               	.L__stack_usage = 1
 634:quantum/rgblight.c **** }
 2647               		.loc 1 634 3 is_stmt 1 view .LVU564
 2648 0002 07E0      		ldi r16,lo8(7)
 2649 0004 20E0      		ldi r18,0
 2650 0006 0E94 0000 		call rgblight_setrgb_range
 2651               	.LVL165:
 2652               	/* epilogue start */
 635:quantum/rgblight.c **** 
 2653               		.loc 1 635 1 is_stmt 0 view .LVU565
 2654 000a 0F91      		pop r16
 2655 000c 0895      		ret
 2656               		.cfi_endproc
 2657               	.LFE144:
 2659               		.section	.text.rgblight_setrgb_slave,"ax",@progbits
 2660               	.global	rgblight_setrgb_slave
 2662               	rgblight_setrgb_slave:
 2663               	.LVL166:
 2664               	.LFB145:
 637:quantum/rgblight.c ****   rgblight_setrgb_range(r, g, b, (uint8_t) RGBLED_NUM/2, (uint8_t) RGBLED_NUM);
 2665               		.loc 1 637 61 is_stmt 1 view -0
 2666               		.cfi_startproc
 637:quantum/rgblight.c ****   rgblight_setrgb_range(r, g, b, (uint8_t) RGBLED_NUM/2, (uint8_t) RGBLED_NUM);
 2667               		.loc 1 637 61 is_stmt 0 view .LVU567
 2668 0000 0F93      		push r16
 2669               	.LCFI86:
 2670               		.cfi_def_cfa_offset 3
 2671               		.cfi_offset 16, -2
 2672               	/* prologue: function */
 2673               	/* frame size = 0 */
 2674               	/* stack size = 1 */
 2675               	.L__stack_usage = 1
 638:quantum/rgblight.c **** }
 2676               		.loc 1 638 3 is_stmt 1 view .LVU568
 2677 0002 0EE0      		ldi r16,lo8(14)
 2678 0004 27E0      		ldi r18,lo8(7)
 2679 0006 0E94 0000 		call rgblight_setrgb_range
 2680               	.LVL167:
 2681               	/* epilogue start */
 639:quantum/rgblight.c **** 
 2682               		.loc 1 639 1 is_stmt 0 view .LVU569
 2683 000a 0F91      		pop r16
 2684 000c 0895      		ret
 2685               		.cfi_endproc
 2686               	.LFE145:
 2688               		.section	.text.rgblight_effect_rainbow_swirl,"ax",@progbits
 2689               	.global	rgblight_effect_rainbow_swirl
 2691               	rgblight_effect_rainbow_swirl:
 2692               	.LVL168:
 2693               	.LFB158:
 933:quantum/rgblight.c ****   uint8_t hue;
 2694               		.loc 1 933 62 is_stmt 1 view -0
 2695               		.cfi_startproc
 933:quantum/rgblight.c ****   uint8_t hue;
 2696               		.loc 1 933 62 is_stmt 0 view .LVU571
 2697 0000 EF92      		push r14
 2698               	.LCFI87:
 2699               		.cfi_def_cfa_offset 3
 2700               		.cfi_offset 14, -2
 2701 0002 FF92      		push r15
 2702               	.LCFI88:
 2703               		.cfi_def_cfa_offset 4
 2704               		.cfi_offset 15, -3
 2705 0004 1F93      		push r17
 2706               	.LCFI89:
 2707               		.cfi_def_cfa_offset 5
 2708               		.cfi_offset 17, -4
 2709 0006 CF93      		push r28
 2710               	.LCFI90:
 2711               		.cfi_def_cfa_offset 6
 2712               		.cfi_offset 28, -5
 2713 0008 DF93      		push r29
 2714               	.LCFI91:
 2715               		.cfi_def_cfa_offset 7
 2716               		.cfi_offset 29, -6
 2717               	/* prologue: function */
 2718               	/* frame size = 0 */
 2719               	/* stack size = 5 */
 2720               	.L__stack_usage = 5
 2721 000a EC01      		movw r28,r24
 934:quantum/rgblight.c ****   uint8_t i;
 2722               		.loc 1 934 3 is_stmt 1 view .LVU572
 935:quantum/rgblight.c **** 
 2723               		.loc 1 935 3 view .LVU573
 937:quantum/rgblight.c ****     hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 2724               		.loc 1 937 3 view .LVU574
 2725               	.LVL169:
 937:quantum/rgblight.c ****     hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 2726               		.loc 1 937 10 is_stmt 0 view .LVU575
 2727 000c 10E0      		ldi r17,0
 938:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos]);
 2728               		.loc 1 938 41 view .LVU576
 2729 000e EE24      		clr r14
 2730 0010 EA94      		dec r14
 2731 0012 F12C      		mov r15,__zero_reg__
 2732               	.LVL170:
 2733               	.L152:
 937:quantum/rgblight.c ****     hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 2734               		.loc 1 937 17 discriminator 1 view .LVU577
 2735 0014 6091 0000 		lds r22,effect_num_leds
 937:quantum/rgblight.c ****     hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 2736               		.loc 1 937 3 discriminator 1 view .LVU578
 2737 0018 1617      		cp r17,r22
 2738 001a 00F0      		brlo .L153
 941:quantum/rgblight.c **** 
 2739               		.loc 1 941 3 is_stmt 1 view .LVU579
 2740 001c 0E94 0000 		call rgblight_set
 2741               	.LVL171:
 943:quantum/rgblight.c ****     anim->current_hue++;
 2742               		.loc 1 943 3 view .LVU580
 943:quantum/rgblight.c ****     anim->current_hue++;
 2743               		.loc 1 943 7 is_stmt 0 view .LVU581
 2744 0020 9A81      		ldd r25,Y+2
 2745 0022 8C81      		ldd r24,Y+4
 943:quantum/rgblight.c ****     anim->current_hue++;
 2746               		.loc 1 943 6 view .LVU582
 2747 0024 90FF      		sbrs r25,0
 2748 0026 00C0      		rjmp .L154
 944:quantum/rgblight.c ****   } else {
 2749               		.loc 1 944 5 is_stmt 1 view .LVU583
 944:quantum/rgblight.c ****   } else {
 2750               		.loc 1 944 22 is_stmt 0 view .LVU584
 2751 0028 8F5F      		subi r24,lo8(-(1))
 2752               	.L156:
 946:quantum/rgblight.c ****   }
 2753               		.loc 1 946 22 view .LVU585
 2754 002a 8C83      		std Y+4,r24
 2755               	/* epilogue start */
 948:quantum/rgblight.c **** #endif
 2756               		.loc 1 948 1 view .LVU586
 2757 002c DF91      		pop r29
 2758 002e CF91      		pop r28
 2759               	.LVL172:
 948:quantum/rgblight.c **** #endif
 2760               		.loc 1 948 1 view .LVU587
 2761 0030 1F91      		pop r17
 2762               	.LVL173:
 948:quantum/rgblight.c **** #endif
 2763               		.loc 1 948 1 view .LVU588
 2764 0032 FF90      		pop r15
 2765 0034 EF90      		pop r14
 2766 0036 0895      		ret
 2767               	.LVL174:
 2768               	.L153:
 938:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos]);
 2769               		.loc 1 938 5 is_stmt 1 discriminator 3 view .LVU589
 939:quantum/rgblight.c ****   }
 2770               		.loc 1 939 5 discriminator 3 view .LVU590
 2771               	.LBB105:
 2772               	.LBI105:
 127:quantum/rgblight.c ****   sethsv_raw( hue, sat,
 2773               		.loc 1 127 6 discriminator 3 view .LVU591
 2774               	.LBB106:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 2775               		.loc 1 128 3 discriminator 3 view .LVU592
 2776               	.LBE106:
 2777               	.LBE105:
 939:quantum/rgblight.c ****   }
 2778               		.loc 1 939 78 is_stmt 0 discriminator 3 view .LVU593
 2779 0038 2091 0000 		lds r18,effect_start_pos
 2780 003c 422F      		mov r20,r18
 2781 003e 410F      		add r20,r17
 2782 0040 5527      		clr r21
 2783 0042 551F      		rol r21
 2784 0044 CA01      		movw r24,r20
 939:quantum/rgblight.c ****   }
 2785               		.loc 1 939 5 discriminator 3 view .LVU594
 2786 0046 9A01      		movw r18,r20
 2787 0048 220F      		lsl r18
 2788 004a 331F      		rol r19
 2789 004c 280F      		add r18,r24
 2790 004e 391F      		adc r19,r25
 2791 0050 2050      		subi r18,lo8(-(led))
 2792 0052 3040      		sbci r19,hi8(-(led))
 938:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos]);
 2793               		.loc 1 938 41 discriminator 3 view .LVU595
 2794 0054 70E0      		ldi r23,0
 2795 0056 C701      		movw r24,r14
 2796 0058 0E94 0000 		call __divmodhi4
 2797               	.LVL175:
 938:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos]);
 2798               		.loc 1 938 41 discriminator 3 view .LVU596
 2799 005c 962F      		mov r25,r22
 938:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos]);
 2800               		.loc 1 938 9 discriminator 3 view .LVU597
 2801 005e 8C81      		ldd r24,Y+4
 2802               	.LBB108:
 2803               	.LBB107:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 2804               		.loc 1 128 3 discriminator 3 view .LVU598
 2805 0060 4091 0000 		lds r20,rgblight_config+3
 2806 0064 6091 0000 		lds r22,rgblight_config+2
 2807 0068 199F      		mul r17,r25
 2808 006a 800D      		add r24,r0
 2809 006c 1124      		clr __zero_reg__
 2810 006e 0E94 0000 		call sethsv_raw
 2811               	.LVL176:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 2812               		.loc 1 128 3 discriminator 3 view .LVU599
 2813               	.LBE107:
 2814               	.LBE108:
 937:quantum/rgblight.c ****     hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 2815               		.loc 1 937 37 discriminator 3 view .LVU600
 2816 0072 1F5F      		subi r17,lo8(-(1))
 2817               	.LVL177:
 937:quantum/rgblight.c ****     hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 2818               		.loc 1 937 37 discriminator 3 view .LVU601
 2819 0074 00C0      		rjmp .L152
 2820               	.L154:
 946:quantum/rgblight.c ****   }
 2821               		.loc 1 946 5 is_stmt 1 view .LVU602
 946:quantum/rgblight.c ****   }
 2822               		.loc 1 946 22 is_stmt 0 view .LVU603
 2823 0076 8150      		subi r24,lo8(-(-1))
 2824 0078 00C0      		rjmp .L156
 2825               		.cfi_endproc
 2826               	.LFE158:
 2828               		.section	.text.rgblight_effect_snake,"ax",@progbits
 2829               	.global	rgblight_effect_snake
 2831               	rgblight_effect_snake:
 2832               	.LVL178:
 2833               	.LFB159:
 955:quantum/rgblight.c ****   static uint8_t pos = 0;
 2834               		.loc 1 955 54 is_stmt 1 view -0
 2835               		.cfi_startproc
 955:quantum/rgblight.c ****   static uint8_t pos = 0;
 2836               		.loc 1 955 54 is_stmt 0 view .LVU605
 2837 0000 BF92      		push r11
 2838               	.LCFI92:
 2839               		.cfi_def_cfa_offset 3
 2840               		.cfi_offset 11, -2
 2841 0002 CF92      		push r12
 2842               	.LCFI93:
 2843               		.cfi_def_cfa_offset 4
 2844               		.cfi_offset 12, -3
 2845 0004 DF92      		push r13
 2846               	.LCFI94:
 2847               		.cfi_def_cfa_offset 5
 2848               		.cfi_offset 13, -4
 2849 0006 EF92      		push r14
 2850               	.LCFI95:
 2851               		.cfi_def_cfa_offset 6
 2852               		.cfi_offset 14, -5
 2853 0008 FF92      		push r15
 2854               	.LCFI96:
 2855               		.cfi_def_cfa_offset 7
 2856               		.cfi_offset 15, -6
 2857 000a 0F93      		push r16
 2858               	.LCFI97:
 2859               		.cfi_def_cfa_offset 8
 2860               		.cfi_offset 16, -7
 2861 000c 1F93      		push r17
 2862               	.LCFI98:
 2863               		.cfi_def_cfa_offset 9
 2864               		.cfi_offset 17, -8
 2865 000e CF93      		push r28
 2866               	.LCFI99:
 2867               		.cfi_def_cfa_offset 10
 2868               		.cfi_offset 28, -9
 2869 0010 DF93      		push r29
 2870               	.LCFI100:
 2871               		.cfi_def_cfa_offset 11
 2872               		.cfi_offset 29, -10
 2873               	/* prologue: function */
 2874               	/* frame size = 0 */
 2875               	/* stack size = 9 */
 2876               	.L__stack_usage = 9
 956:quantum/rgblight.c ****   uint8_t i, j;
 2877               		.loc 1 956 3 is_stmt 1 view .LVU606
 957:quantum/rgblight.c ****   int8_t k;
 2878               		.loc 1 957 3 view .LVU607
 958:quantum/rgblight.c ****   int8_t increment = 1;
 2879               		.loc 1 958 3 view .LVU608
 959:quantum/rgblight.c **** 
 2880               		.loc 1 959 3 view .LVU609
 2881               	.LVL179:
 961:quantum/rgblight.c ****     increment = -1;
 2882               		.loc 1 961 3 view .LVU610
 961:quantum/rgblight.c ****     increment = -1;
 2883               		.loc 1 961 7 is_stmt 0 view .LVU611
 2884 0012 FC01      		movw r30,r24
 2885 0014 8281      		ldd r24,Z+2
 2886               	.LVL180:
 962:quantum/rgblight.c ****   }
 2887               		.loc 1 962 15 view .LVU612
 2888 0016 0FEF      		ldi r16,lo8(-1)
 961:quantum/rgblight.c ****     increment = -1;
 2889               		.loc 1 961 6 view .LVU613
 2890 0018 80FF      		sbrs r24,0
 959:quantum/rgblight.c **** 
 2891               		.loc 1 959 10 view .LVU614
 2892 001a 01E0      		ldi r16,lo8(1)
 2893               	.L158:
 2894               	.LVL181:
 976:quantum/rgblight.c ****     LED_TYPE *ledp = led + i + effect_start_pos;
 2895               		.loc 1 976 3 is_stmt 1 view .LVU615
 976:quantum/rgblight.c ****     LED_TYPE *ledp = led + i + effect_start_pos;
 2896               		.loc 1 976 10 is_stmt 0 view .LVU616
 2897 001c 10E0      		ldi r17,0
 2898               	.LVL182:
 2899               	.L159:
 976:quantum/rgblight.c ****     LED_TYPE *ledp = led + i + effect_start_pos;
 2900               		.loc 1 976 3 discriminator 1 view .LVU617
 2901 001e 8091 0000 		lds r24,effect_num_leds
 2902 0022 1817      		cp r17,r24
 2903 0024 00F0      		brlo .L163
 993:quantum/rgblight.c ****   if (increment == 1) {
 2904               		.loc 1 993 3 is_stmt 1 view .LVU618
 2905 0026 0E94 0000 		call rgblight_set
 2906               	.LVL183:
 994:quantum/rgblight.c ****     if (pos - 1 < 0) {
 2907               		.loc 1 994 3 view .LVU619
 2908 002a 8091 0000 		lds r24,pos.3258
 994:quantum/rgblight.c ****     if (pos - 1 < 0) {
 2909               		.loc 1 994 6 is_stmt 0 view .LVU620
 2910 002e 0130      		cpi r16,lo8(1)
 2911 0030 01F0      		breq .+2
 2912 0032 00C0      		rjmp .L164
 995:quantum/rgblight.c ****       pos = effect_num_leds - 1;
 2913               		.loc 1 995 5 is_stmt 1 view .LVU621
 995:quantum/rgblight.c ****       pos = effect_num_leds - 1;
 2914               		.loc 1 995 8 is_stmt 0 view .LVU622
 2915 0034 8111      		cpse r24,__zero_reg__
 2916 0036 00C0      		rjmp .L165
 996:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2917               		.loc 1 996 7 is_stmt 1 view .LVU623
 996:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2918               		.loc 1 996 29 is_stmt 0 view .LVU624
 2919 0038 8091 0000 		lds r24,effect_num_leds
 2920               	.L165:
1001:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2921               		.loc 1 1001 7 is_stmt 1 view .LVU625
1001:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2922               		.loc 1 1001 11 is_stmt 0 view .LVU626
 2923 003c 8150      		subi r24,lo8(-(-1))
 2924               	.L169:
1007:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2925               		.loc 1 1007 9 view .LVU627
 2926 003e 8093 0000 		sts pos.3258,r24
 2927               	/* epilogue start */
1012:quantum/rgblight.c **** #endif
 2928               		.loc 1 1012 1 view .LVU628
 2929 0042 DF91      		pop r29
 2930 0044 CF91      		pop r28
 2931 0046 1F91      		pop r17
 2932               	.LVL184:
1012:quantum/rgblight.c **** #endif
 2933               		.loc 1 1012 1 view .LVU629
 2934 0048 0F91      		pop r16
 2935               	.LVL185:
1012:quantum/rgblight.c **** #endif
 2936               		.loc 1 1012 1 view .LVU630
 2937 004a FF90      		pop r15
 2938 004c EF90      		pop r14
 2939 004e DF90      		pop r13
 2940 0050 CF90      		pop r12
 2941 0052 BF90      		pop r11
 2942 0054 0895      		ret
 2943               	.LVL186:
 2944               	.L163:
 2945               	.LBB112:
 977:quantum/rgblight.c ****     ledp->r = 0;
 2946               		.loc 1 977 5 is_stmt 1 view .LVU631
 977:quantum/rgblight.c ****     ledp->r = 0;
 2947               		.loc 1 977 30 is_stmt 0 view .LVU632
 2948 0056 C091 0000 		lds r28,effect_start_pos
 2949 005a C12E      		mov r12,r17
 2950 005c D12C      		mov r13,__zero_reg__
 2951 005e CC0D      		add r28,r12
 2952 0060 DD2D      		mov r29,r13
 2953 0062 D11D      		adc r29,__zero_reg__
 2954 0064 CE01      		movw r24,r28
 2955 0066 880F      		lsl r24
 2956 0068 991F      		rol r25
 2957 006a C80F      		add r28,r24
 2958 006c D91F      		adc r29,r25
 977:quantum/rgblight.c ****     ledp->r = 0;
 2959               		.loc 1 977 15 view .LVU633
 2960 006e C050      		subi r28,lo8(-(led))
 2961 0070 D040      		sbci r29,hi8(-(led))
 2962               	.LVL187:
 978:quantum/rgblight.c ****     ledp->g = 0;
 2963               		.loc 1 978 5 is_stmt 1 view .LVU634
 978:quantum/rgblight.c ****     ledp->g = 0;
 2964               		.loc 1 978 13 is_stmt 0 view .LVU635
 2965 0072 1982      		std Y+1,__zero_reg__
 979:quantum/rgblight.c ****     ledp->b = 0;
 2966               		.loc 1 979 5 is_stmt 1 view .LVU636
 979:quantum/rgblight.c ****     ledp->b = 0;
 2967               		.loc 1 979 13 is_stmt 0 view .LVU637
 2968 0074 1882      		st Y,__zero_reg__
 980:quantum/rgblight.c ****     for (j = 0; j < RGBLIGHT_EFFECT_SNAKE_LENGTH; j++) {
 2969               		.loc 1 980 5 is_stmt 1 view .LVU638
 980:quantum/rgblight.c ****     for (j = 0; j < RGBLIGHT_EFFECT_SNAKE_LENGTH; j++) {
 2970               		.loc 1 980 13 is_stmt 0 view .LVU639
 2971 0076 1A82      		std Y+2,__zero_reg__
 981:quantum/rgblight.c ****       k = pos + j * increment;
 2972               		.loc 1 981 5 is_stmt 1 view .LVU640
 2973               	.LVL188:
 980:quantum/rgblight.c ****     for (j = 0; j < RGBLIGHT_EFFECT_SNAKE_LENGTH; j++) {
 2974               		.loc 1 980 13 is_stmt 0 view .LVU641
 2975 0078 34E0      		ldi r19,lo8(4)
 2976 007a E32E      		mov r14,r19
 2977 007c F12C      		mov r15,__zero_reg__
 2978 007e B12C      		mov r11,__zero_reg__
 2979               	.LVL189:
 2980               	.L162:
 982:quantum/rgblight.c ****       if (k < 0) {
 2981               		.loc 1 982 7 is_stmt 1 view .LVU642
 982:quantum/rgblight.c ****       if (k < 0) {
 2982               		.loc 1 982 15 is_stmt 0 view .LVU643
 2983 0080 8091 0000 		lds r24,pos.3258
 2984 0084 8B0D      		add r24,r11
 2985               	.LVL190:
 983:quantum/rgblight.c ****         k = k + effect_num_leds;
 2986               		.loc 1 983 7 is_stmt 1 view .LVU644
 983:quantum/rgblight.c ****         k = k + effect_num_leds;
 2987               		.loc 1 983 10 is_stmt 0 view .LVU645
 2988 0086 87FF      		sbrs r24,7
 2989 0088 00C0      		rjmp .L160
 984:quantum/rgblight.c ****       }
 2990               		.loc 1 984 9 is_stmt 1 view .LVU646
 984:quantum/rgblight.c ****       }
 2991               		.loc 1 984 15 is_stmt 0 view .LVU647
 2992 008a 9091 0000 		lds r25,effect_num_leds
 2993 008e 890F      		add r24,r25
 2994               	.LVL191:
 2995               	.L160:
 986:quantum/rgblight.c ****         sethsv(rgblight_config.hue, rgblight_config.sat,
 2996               		.loc 1 986 7 is_stmt 1 view .LVU648
 986:quantum/rgblight.c ****         sethsv(rgblight_config.hue, rgblight_config.sat,
 2997               		.loc 1 986 13 is_stmt 0 view .LVU649
 2998 0090 082E      		mov __tmp_reg__,r24
 2999 0092 000C      		lsl r0
 3000 0094 990B      		sbc r25,r25
 986:quantum/rgblight.c ****         sethsv(rgblight_config.hue, rgblight_config.sat,
 3001               		.loc 1 986 10 view .LVU650
 3002 0096 C816      		cp r12,r24
 3003 0098 D906      		cpc r13,r25
 3004 009a 01F4      		brne .L161
 987:quantum/rgblight.c ****                (uint8_t)(rgblight_config.val*(RGBLIGHT_EFFECT_SNAKE_LENGTH-j)/RGBLIGHT_EFFECT_SNAKE
 3005               		.loc 1 987 9 is_stmt 1 view .LVU651
 3006               	.LVL192:
 3007               	.LBB113:
 3008               	.LBI113:
 127:quantum/rgblight.c ****   sethsv_raw( hue, sat,
 3009               		.loc 1 127 6 view .LVU652
 3010               	.LBB114:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 3011               		.loc 1 128 3 view .LVU653
 3012               	.LBE114:
 3013               	.LBE113:
 988:quantum/rgblight.c ****                ledp);
 3014               		.loc 1 988 41 is_stmt 0 view .LVU654
 3015 009c 8091 0000 		lds r24,rgblight_config+3
 3016               	.LVL193:
 988:quantum/rgblight.c ****                ledp);
 3017               		.loc 1 988 45 view .LVU655
 3018 00a0 8E9D      		mul r24,r14
 3019 00a2 A001      		movw r20,r0
 3020 00a4 8F9D      		mul r24,r15
 3021 00a6 500D      		add r21,r0
 3022 00a8 1124      		clr __zero_reg__
 988:quantum/rgblight.c ****                ledp);
 3023               		.loc 1 988 78 view .LVU656
 3024 00aa 5595      		asr r21
 3025 00ac 4795      		ror r20
 3026 00ae 5595      		asr r21
 3027 00b0 4795      		ror r20
 3028               	.LBB116:
 3029               	.LBB115:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 3030               		.loc 1 128 3 view .LVU657
 3031 00b2 9E01      		movw r18,r28
 3032 00b4 6091 0000 		lds r22,rgblight_config+2
 3033 00b8 8091 0000 		lds r24,rgblight_config+1
 3034 00bc 0E94 0000 		call sethsv_raw
 3035               	.LVL194:
 3036               	.L161:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 3037               		.loc 1 128 3 view .LVU658
 3038 00c0 B00E      		add r11,r16
 3039 00c2 F1E0      		ldi r31,1
 3040 00c4 EF1A      		sub r14,r31
 3041 00c6 F108      		sbc r15,__zero_reg__
 3042               	.LBE115:
 3043               	.LBE116:
 981:quantum/rgblight.c ****       k = pos + j * increment;
 3044               		.loc 1 981 5 discriminator 2 view .LVU659
 3045 00c8 01F4      		brne .L162
 3046               	.LBE112:
 976:quantum/rgblight.c ****     LED_TYPE *ledp = led + i + effect_start_pos;
 3047               		.loc 1 976 37 discriminator 2 view .LVU660
 3048 00ca 1F5F      		subi r17,lo8(-(1))
 3049               	.LVL195:
 976:quantum/rgblight.c ****     LED_TYPE *ledp = led + i + effect_start_pos;
 3050               		.loc 1 976 37 discriminator 2 view .LVU661
 3051 00cc 00C0      		rjmp .L159
 3052               	.LVL196:
 3053               	.L164:
1007:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3054               		.loc 1 1007 5 is_stmt 1 view .LVU662
1007:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3055               		.loc 1 1007 16 is_stmt 0 view .LVU663
 3056 00ce 90E0      		ldi r25,0
 3057 00d0 0196      		adiw r24,1
1007:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3058               		.loc 1 1007 21 view .LVU664
 3059 00d2 6091 0000 		lds r22,effect_num_leds
 3060 00d6 70E0      		ldi r23,0
 3061 00d8 0E94 0000 		call __divmodhi4
 3062 00dc 00C0      		rjmp .L169
 3063               		.cfi_endproc
 3064               	.LFE159:
 3066               		.section	.text.rgblight_effect_knight,"ax",@progbits
 3067               	.global	rgblight_effect_knight
 3069               	rgblight_effect_knight:
 3070               	.LVL197:
 3071               	.LFB160:
1019:quantum/rgblight.c **** 
 3072               		.loc 1 1019 55 is_stmt 1 view -0
 3073               		.cfi_startproc
1019:quantum/rgblight.c **** 
 3074               		.loc 1 1019 55 is_stmt 0 view .LVU666
 3075 0000 0F93      		push r16
 3076               	.LCFI101:
 3077               		.cfi_def_cfa_offset 3
 3078               		.cfi_offset 16, -2
 3079 0002 1F93      		push r17
 3080               	.LCFI102:
 3081               		.cfi_def_cfa_offset 4
 3082               		.cfi_offset 17, -3
 3083 0004 CF93      		push r28
 3084               	.LCFI103:
 3085               		.cfi_def_cfa_offset 5
 3086               		.cfi_offset 28, -4
 3087 0006 DF93      		push r29
 3088               	.LCFI104:
 3089               		.cfi_def_cfa_offset 6
 3090               		.cfi_offset 29, -5
 3091               	/* prologue: function */
 3092               	/* frame size = 0 */
 3093               	/* stack size = 4 */
 3094               	.L__stack_usage = 4
1021:quantum/rgblight.c ****   static int8_t high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
 3095               		.loc 1 1021 3 is_stmt 1 view .LVU667
1022:quantum/rgblight.c ****   static int8_t increment = 1;
 3096               		.loc 1 1022 3 view .LVU668
1023:quantum/rgblight.c ****   uint8_t i, cur;
 3097               		.loc 1 1023 3 view .LVU669
1024:quantum/rgblight.c **** 
 3098               		.loc 1 1024 3 view .LVU670
1035:quantum/rgblight.c ****     led[i].r = 0;
 3099               		.loc 1 1035 3 view .LVU671
1035:quantum/rgblight.c ****     led[i].r = 0;
 3100               		.loc 1 1035 10 is_stmt 0 view .LVU672
 3101 0008 8091 0000 		lds r24,effect_start_pos
 3102               	.LVL198:
1035:quantum/rgblight.c ****     led[i].r = 0;
 3103               		.loc 1 1035 32 view .LVU673
 3104 000c 9091 0000 		lds r25,effect_end_pos
 3105 0010 23E0      		ldi r18,lo8(3)
 3106 0012 829F      		mul r24,r18
 3107 0014 F001      		movw r30,r0
 3108 0016 1124      		clr __zero_reg__
 3109 0018 E050      		subi r30,lo8(-(led))
 3110 001a F040      		sbci r31,hi8(-(led))
 3111               	.L171:
1035:quantum/rgblight.c ****     led[i].r = 0;
 3112               		.loc 1 1035 3 discriminator 1 view .LVU674
 3113 001c 8917      		cp r24,r25
 3114 001e 00F0      		brlo .L172
1041:quantum/rgblight.c ****     cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % effect_num_leds + effect_start_pos;
 3115               		.loc 1 1041 10 view .LVU675
 3116 0020 C0E0      		ldi r28,0
1045:quantum/rgblight.c ****     } else {
 3117               		.loc 1 1045 7 view .LVU676
 3118 0022 D3E0      		ldi r29,lo8(3)
 3119               	.LVL199:
 3120               	.L173:
1041:quantum/rgblight.c ****     cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % effect_num_leds + effect_start_pos;
 3121               		.loc 1 1041 17 discriminator 1 view .LVU677
 3122 0024 6091 0000 		lds r22,effect_num_leds
1041:quantum/rgblight.c ****     cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % effect_num_leds + effect_start_pos;
 3123               		.loc 1 1041 3 discriminator 1 view .LVU678
 3124 0028 C617      		cp r28,r22
 3125 002a 00F0      		brlo .L176
1052:quantum/rgblight.c **** 
 3126               		.loc 1 1052 3 is_stmt 1 view .LVU679
 3127 002c 0E94 0000 		call rgblight_set
 3128               	.LVL200:
1056:quantum/rgblight.c ****   high_bound += increment;
 3129               		.loc 1 1056 3 view .LVU680
1056:quantum/rgblight.c ****   high_bound += increment;
 3130               		.loc 1 1056 13 is_stmt 0 view .LVU681
 3131 0030 2091 0000 		lds r18,increment.3276
 3132 0034 8091 0000 		lds r24,low_bound.3274
 3133 0038 820F      		add r24,r18
 3134 003a 8093 0000 		sts low_bound.3274,r24
1057:quantum/rgblight.c **** 
 3135               		.loc 1 1057 3 is_stmt 1 view .LVU682
1057:quantum/rgblight.c **** 
 3136               		.loc 1 1057 14 is_stmt 0 view .LVU683
 3137 003e 9091 0000 		lds r25,high_bound.3275
 3138 0042 920F      		add r25,r18
 3139 0044 9093 0000 		sts high_bound.3275,r25
1059:quantum/rgblight.c ****     increment = -increment;
 3140               		.loc 1 1059 3 is_stmt 1 view .LVU684
1059:quantum/rgblight.c ****     increment = -increment;
 3141               		.loc 1 1059 6 is_stmt 0 view .LVU685
 3142 0048 1916      		cp __zero_reg__,r25
 3143 004a 04F4      		brge .L177
1059:quantum/rgblight.c ****     increment = -increment;
 3144               		.loc 1 1059 36 discriminator 1 view .LVU686
 3145 004c 082E      		mov __tmp_reg__,r24
 3146 004e 000C      		lsl r0
 3147 0050 990B      		sbc r25,r25
1059:quantum/rgblight.c ****     increment = -increment;
 3148               		.loc 1 1059 70 discriminator 1 view .LVU687
 3149 0052 4091 0000 		lds r20,effect_num_leds
 3150 0056 4150      		subi r20,1
 3151 0058 550B      		sbc r21,r21
1059:quantum/rgblight.c ****     increment = -increment;
 3152               		.loc 1 1059 23 discriminator 1 view .LVU688
 3153 005a 8417      		cp r24,r20
 3154 005c 9507      		cpc r25,r21
 3155 005e 04F0      		brlt .L170
 3156               	.L177:
1060:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3157               		.loc 1 1060 5 is_stmt 1 view .LVU689
1060:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3158               		.loc 1 1060 15 is_stmt 0 view .LVU690
 3159 0060 2195      		neg r18
 3160 0062 2093 0000 		sts increment.3276,r18
 3161               	.L170:
 3162               	/* epilogue start */
1067:quantum/rgblight.c **** #endif
 3163               		.loc 1 1067 1 view .LVU691
 3164 0066 DF91      		pop r29
 3165 0068 CF91      		pop r28
 3166               	.LVL201:
1067:quantum/rgblight.c **** #endif
 3167               		.loc 1 1067 1 view .LVU692
 3168 006a 1F91      		pop r17
 3169 006c 0F91      		pop r16
 3170 006e 0895      		ret
 3171               	.LVL202:
 3172               	.L172:
1036:quantum/rgblight.c ****     led[i].g = 0;
 3173               		.loc 1 1036 5 is_stmt 1 discriminator 3 view .LVU693
1036:quantum/rgblight.c ****     led[i].g = 0;
 3174               		.loc 1 1036 14 is_stmt 0 discriminator 3 view .LVU694
 3175 0070 1182      		std Z+1,__zero_reg__
1037:quantum/rgblight.c ****     led[i].b = 0;
 3176               		.loc 1 1037 5 is_stmt 1 discriminator 3 view .LVU695
1037:quantum/rgblight.c ****     led[i].b = 0;
 3177               		.loc 1 1037 14 is_stmt 0 discriminator 3 view .LVU696
 3178 0072 1082      		st Z,__zero_reg__
1038:quantum/rgblight.c ****   }
 3179               		.loc 1 1038 5 is_stmt 1 discriminator 3 view .LVU697
1038:quantum/rgblight.c ****   }
 3180               		.loc 1 1038 14 is_stmt 0 discriminator 3 view .LVU698
 3181 0074 1282      		std Z+2,__zero_reg__
1035:quantum/rgblight.c ****     led[i].r = 0;
 3182               		.loc 1 1035 51 discriminator 3 view .LVU699
 3183 0076 8F5F      		subi r24,lo8(-(1))
 3184               	.LVL203:
1035:quantum/rgblight.c ****     led[i].r = 0;
 3185               		.loc 1 1035 51 discriminator 3 view .LVU700
 3186 0078 3396      		adiw r30,3
 3187 007a 00C0      		rjmp .L171
 3188               	.LVL204:
 3189               	.L176:
1042:quantum/rgblight.c **** 
 3190               		.loc 1 1042 5 is_stmt 1 view .LVU701
1042:quantum/rgblight.c **** 
 3191               		.loc 1 1042 14 is_stmt 0 view .LVU702
 3192 007c 0C2F      		mov r16,r28
 3193 007e 10E0      		ldi r17,0
1042:quantum/rgblight.c **** 
 3194               		.loc 1 1042 47 view .LVU703
 3195 0080 70E0      		ldi r23,0
 3196 0082 C801      		movw r24,r16
 3197 0084 0E94 0000 		call __divmodhi4
1042:quantum/rgblight.c **** 
 3198               		.loc 1 1042 9 view .LVU704
 3199 0088 2091 0000 		lds r18,effect_start_pos
 3200 008c 820F      		add r24,r18
 3201               	.LVL205:
1044:quantum/rgblight.c ****       sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[cur]);
 3202               		.loc 1 1044 5 is_stmt 1 view .LVU705
 3203 008e 482F      		mov r20,r24
 3204 0090 50E0      		ldi r21,0
1044:quantum/rgblight.c ****       sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[cur]);
 3205               		.loc 1 1044 11 is_stmt 0 view .LVU706
 3206 0092 2091 0000 		lds r18,low_bound.3274
 3207 0096 022E      		mov __tmp_reg__,r18
 3208 0098 000C      		lsl r0
 3209 009a 330B      		sbc r19,r19
1044:quantum/rgblight.c ****       sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[cur]);
 3210               		.loc 1 1044 8 view .LVU707
 3211 009c 0217      		cp r16,r18
 3212 009e 1307      		cpc r17,r19
 3213 00a0 04F0      		brlt .L174
 3214               	.LVL206:
1044:quantum/rgblight.c ****       sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[cur]);
 3215               		.loc 1 1044 29 discriminator 1 view .LVU708
 3216 00a2 2091 0000 		lds r18,high_bound.3275
 3217 00a6 022E      		mov __tmp_reg__,r18
 3218 00a8 000C      		lsl r0
 3219 00aa 330B      		sbc r19,r19
1044:quantum/rgblight.c ****       sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[cur]);
 3220               		.loc 1 1044 24 discriminator 1 view .LVU709
 3221 00ac 2017      		cp r18,r16
 3222 00ae 3107      		cpc r19,r17
 3223 00b0 04F0      		brlt .L174
1045:quantum/rgblight.c ****     } else {
 3224               		.loc 1 1045 7 is_stmt 1 view .LVU710
 3225               	.LVL207:
 3226               	.LBB119:
 3227               	.LBI119:
 127:quantum/rgblight.c ****   sethsv_raw( hue, sat,
 3228               		.loc 1 127 6 view .LVU711
 3229               	.LBB120:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 3230               		.loc 1 128 3 view .LVU712
 3231               	.LBE120:
 3232               	.LBE119:
1045:quantum/rgblight.c ****     } else {
 3233               		.loc 1 1045 7 is_stmt 0 view .LVU713
 3234 00b2 8D9F      		mul r24,r29
 3235 00b4 9001      		movw r18,r0
 3236 00b6 1124      		clr __zero_reg__
 3237 00b8 2050      		subi r18,lo8(-(led))
 3238 00ba 3040      		sbci r19,hi8(-(led))
 3239               	.LBB122:
 3240               	.LBB121:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 3241               		.loc 1 128 3 view .LVU714
 3242 00bc 4091 0000 		lds r20,rgblight_config+3
 3243 00c0 6091 0000 		lds r22,rgblight_config+2
 3244 00c4 8091 0000 		lds r24,rgblight_config+1
 3245               	.LVL208:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 3246               		.loc 1 128 3 view .LVU715
 3247 00c8 0E94 0000 		call sethsv_raw
 3248               	.LVL209:
 3249               	.L175:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 3250               		.loc 1 128 3 view .LVU716
 3251               	.LBE121:
 3252               	.LBE122:
1041:quantum/rgblight.c ****     cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % effect_num_leds + effect_start_pos;
 3253               		.loc 1 1041 52 discriminator 2 view .LVU717
 3254 00cc CF5F      		subi r28,lo8(-(1))
 3255               	.LVL210:
1041:quantum/rgblight.c ****     cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % effect_num_leds + effect_start_pos;
 3256               		.loc 1 1041 52 discriminator 2 view .LVU718
 3257 00ce 00C0      		rjmp .L173
 3258               	.LVL211:
 3259               	.L174:
1047:quantum/rgblight.c ****       led[cur].g = 0;
 3260               		.loc 1 1047 7 is_stmt 1 view .LVU719
1047:quantum/rgblight.c ****       led[cur].g = 0;
 3261               		.loc 1 1047 18 is_stmt 0 view .LVU720
 3262 00d0 FA01      		movw r30,r20
 3263 00d2 EE0F      		lsl r30
 3264 00d4 FF1F      		rol r31
 3265 00d6 E40F      		add r30,r20
 3266 00d8 F51F      		adc r31,r21
 3267 00da E050      		subi r30,lo8(-(led))
 3268 00dc F040      		sbci r31,hi8(-(led))
 3269 00de 1182      		std Z+1,__zero_reg__
1048:quantum/rgblight.c ****       led[cur].b = 0;
 3270               		.loc 1 1048 7 is_stmt 1 view .LVU721
1048:quantum/rgblight.c ****       led[cur].b = 0;
 3271               		.loc 1 1048 18 is_stmt 0 view .LVU722
 3272 00e0 1082      		st Z,__zero_reg__
1049:quantum/rgblight.c ****     }
 3273               		.loc 1 1049 7 is_stmt 1 view .LVU723
1049:quantum/rgblight.c ****     }
 3274               		.loc 1 1049 18 is_stmt 0 view .LVU724
 3275 00e2 1282      		std Z+2,__zero_reg__
 3276 00e4 00C0      		rjmp .L175
 3277               		.cfi_endproc
 3278               	.LFE160:
 3280               		.section	.text.rgblight_effect_christmas,"ax",@progbits
 3281               	.global	rgblight_effect_christmas
 3283               	rgblight_effect_christmas:
 3284               	.LVL212:
 3285               	.LFB161:
1071:quantum/rgblight.c ****   uint8_t hue;
 3286               		.loc 1 1071 58 is_stmt 1 view -0
 3287               		.cfi_startproc
1071:quantum/rgblight.c ****   uint8_t hue;
 3288               		.loc 1 1071 58 is_stmt 0 view .LVU726
 3289 0000 0F93      		push r16
 3290               	.LCFI105:
 3291               		.cfi_def_cfa_offset 3
 3292               		.cfi_offset 16, -2
 3293 0002 1F93      		push r17
 3294               	.LCFI106:
 3295               		.cfi_def_cfa_offset 4
 3296               		.cfi_offset 17, -3
 3297 0004 CF93      		push r28
 3298               	.LCFI107:
 3299               		.cfi_def_cfa_offset 5
 3300               		.cfi_offset 28, -4
 3301 0006 DF93      		push r29
 3302               	.LCFI108:
 3303               		.cfi_def_cfa_offset 6
 3304               		.cfi_offset 29, -5
 3305               	/* prologue: function */
 3306               	/* frame size = 0 */
 3307               	/* stack size = 4 */
 3308               	.L__stack_usage = 4
 3309 0008 8C01      		movw r16,r24
1072:quantum/rgblight.c ****   uint8_t i;
 3310               		.loc 1 1072 3 is_stmt 1 view .LVU727
1073:quantum/rgblight.c **** 
 3311               		.loc 1 1073 3 view .LVU728
1075:quantum/rgblight.c ****   for (i = 0; i < effect_num_leds; i++) {
 3312               		.loc 1 1075 3 view .LVU729
1075:quantum/rgblight.c ****   for (i = 0; i < effect_num_leds; i++) {
 3313               		.loc 1 1075 48 is_stmt 0 view .LVU730
 3314 000a FC01      		movw r30,r24
 3315 000c 8481      		ldd r24,Z+4
 3316 000e 9581      		ldd r25,Z+5
 3317               	.LVL213:
1075:quantum/rgblight.c ****   for (i = 0; i < effect_num_leds; i++) {
 3318               		.loc 1 1075 48 view .LVU731
 3319 0010 0196      		adiw r24,1
1075:quantum/rgblight.c ****   for (i = 0; i < effect_num_leds; i++) {
 3320               		.loc 1 1075 53 view .LVU732
 3321 0012 8170      		andi r24,1
 3322 0014 9927      		clr r25
1075:quantum/rgblight.c ****   for (i = 0; i < effect_num_leds; i++) {
 3323               		.loc 1 1075 24 view .LVU733
 3324 0016 9583      		std Z+5,r25
 3325 0018 8483      		std Z+4,r24
1076:quantum/rgblight.c ****     hue = 0 + ((i/RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 3326               		.loc 1 1076 3 is_stmt 1 view .LVU734
 3327               	.LVL214:
1076:quantum/rgblight.c ****     hue = 0 + ((i/RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 3328               		.loc 1 1076 10 is_stmt 0 view .LVU735
 3329 001a C0E0      		ldi r28,0
1077:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos]);
 3330               		.loc 1 1077 9 view .LVU736
 3331 001c D5E5      		ldi r29,lo8(85)
 3332               	.LVL215:
 3333               	.L180:
1076:quantum/rgblight.c ****     hue = 0 + ((i/RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 3334               		.loc 1 1076 3 discriminator 1 view .LVU737
 3335 001e 8091 0000 		lds r24,effect_num_leds
 3336 0022 C817      		cp r28,r24
 3337 0024 00F0      		brlo .L181
1080:quantum/rgblight.c **** }
 3338               		.loc 1 1080 3 is_stmt 1 view .LVU738
 3339               	/* epilogue start */
1081:quantum/rgblight.c **** #endif
 3340               		.loc 1 1081 1 is_stmt 0 view .LVU739
 3341 0026 DF91      		pop r29
 3342 0028 CF91      		pop r28
 3343               	.LVL216:
1081:quantum/rgblight.c **** #endif
 3344               		.loc 1 1081 1 view .LVU740
 3345 002a 1F91      		pop r17
 3346 002c 0F91      		pop r16
 3347               	.LVL217:
1080:quantum/rgblight.c **** }
 3348               		.loc 1 1080 3 view .LVU741
 3349 002e 0C94 0000 		jmp rgblight_set
 3350               	.LVL218:
 3351               	.L181:
1077:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos]);
 3352               		.loc 1 1077 5 is_stmt 1 discriminator 3 view .LVU742
1078:quantum/rgblight.c ****   }
 3353               		.loc 1 1078 5 discriminator 3 view .LVU743
 3354               	.LBB125:
 3355               	.LBI125:
 127:quantum/rgblight.c ****   sethsv_raw( hue, sat,
 3356               		.loc 1 127 6 discriminator 3 view .LVU744
 3357               	.LBB126:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 3358               		.loc 1 128 3 discriminator 3 view .LVU745
 3359               	.LBE126:
 3360               	.LBE125:
1078:quantum/rgblight.c ****   }
 3361               		.loc 1 1078 78 is_stmt 0 discriminator 3 view .LVU746
 3362 0032 2091 0000 		lds r18,effect_start_pos
 3363 0036 422F      		mov r20,r18
 3364 0038 4C0F      		add r20,r28
 3365 003a 5527      		clr r21
 3366 003c 551F      		rol r21
 3367 003e CA01      		movw r24,r20
1078:quantum/rgblight.c ****   }
 3368               		.loc 1 1078 5 discriminator 3 view .LVU747
 3369 0040 9A01      		movw r18,r20
 3370 0042 220F      		lsl r18
 3371 0044 331F      		rol r19
 3372 0046 280F      		add r18,r24
 3373 0048 391F      		adc r19,r25
 3374 004a 2050      		subi r18,lo8(-(led))
 3375 004c 3040      		sbci r19,hi8(-(led))
1077:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos]);
 3376               		.loc 1 1077 18 discriminator 3 view .LVU748
 3377 004e 8C2F      		mov r24,r28
 3378 0050 8695      		lsr r24
1077:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos]);
 3379               		.loc 1 1077 50 discriminator 3 view .LVU749
 3380 0052 F801      		movw r30,r16
 3381 0054 4481      		ldd r20,Z+4
 3382 0056 5581      		ldd r21,Z+5
 3383 0058 840F      		add r24,r20
 3384 005a 952F      		mov r25,r21
 3385 005c 911D      		adc r25,__zero_reg__
1077:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos]);
 3386               		.loc 1 1077 9 discriminator 3 view .LVU750
 3387 005e 8170      		andi r24,lo8(1)
 3388               	.LBB128:
 3389               	.LBB127:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 3390               		.loc 1 128 3 discriminator 3 view .LVU751
 3391 0060 4091 0000 		lds r20,rgblight_config+3
 3392 0064 6091 0000 		lds r22,rgblight_config+2
 3393 0068 8D9F      		mul r24,r29
 3394 006a 802D      		mov r24,r0
 3395 006c 1124      		clr r1
 3396 006e 0E94 0000 		call sethsv_raw
 3397               	.LVL219:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 3398               		.loc 1 128 3 discriminator 3 view .LVU752
 3399               	.LBE127:
 3400               	.LBE128:
1076:quantum/rgblight.c ****     hue = 0 + ((i/RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 3401               		.loc 1 1076 37 discriminator 3 view .LVU753
 3402 0072 CF5F      		subi r28,lo8(-(1))
 3403               	.LVL220:
1076:quantum/rgblight.c ****     hue = 0 + ((i/RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 3404               		.loc 1 1076 37 discriminator 3 view .LVU754
 3405 0074 00C0      		rjmp .L180
 3406               		.cfi_endproc
 3407               	.LFE161:
 3409               		.section	.text.rgblight_effect_alternating,"ax",@progbits
 3410               	.global	rgblight_effect_alternating
 3412               	rgblight_effect_alternating:
 3413               	.LVL221:
 3414               	.LFB163:
1106:quantum/rgblight.c **** #endif
1107:quantum/rgblight.c **** 
1108:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_ALTERNATING
1109:quantum/rgblight.c **** void rgblight_effect_alternating(animation_status_t *anim) {
 3415               		.loc 1 1109 60 is_stmt 1 view -0
 3416               		.cfi_startproc
 3417               		.loc 1 1109 60 is_stmt 0 view .LVU756
 3418 0000 0F93      		push r16
 3419               	.LCFI109:
 3420               		.cfi_def_cfa_offset 3
 3421               		.cfi_offset 16, -2
 3422 0002 1F93      		push r17
 3423               	.LCFI110:
 3424               		.cfi_def_cfa_offset 4
 3425               		.cfi_offset 17, -3
 3426 0004 CF93      		push r28
 3427               	.LCFI111:
 3428               		.cfi_def_cfa_offset 5
 3429               		.cfi_offset 28, -4
 3430 0006 DF93      		push r29
 3431               	.LCFI112:
 3432               		.cfi_def_cfa_offset 6
 3433               		.cfi_offset 29, -5
 3434               	/* prologue: function */
 3435               	/* frame size = 0 */
 3436               	/* stack size = 4 */
 3437               	.L__stack_usage = 4
 3438 0008 EC01      		movw r28,r24
1110:quantum/rgblight.c **** 
1111:quantum/rgblight.c ****   for (int i = 0; i < effect_num_leds; i++) {
 3439               		.loc 1 1111 3 is_stmt 1 view .LVU757
 3440               	.LBB137:
 3441               		.loc 1 1111 8 view .LVU758
 3442               	.LVL222:
 3443               		.loc 1 1111 12 is_stmt 0 view .LVU759
 3444 000a 10E0      		ldi r17,0
 3445 000c 00E0      		ldi r16,0
 3446               	.LVL223:
 3447               	.L183:
 3448               		.loc 1 1111 21 discriminator 1 view .LVU760
 3449 000e 9091 0000 		lds r25,effect_num_leds
 3450               		.loc 1 1111 3 discriminator 1 view .LVU761
 3451 0012 9017      		cp r25,r16
 3452 0014 1106      		cpc __zero_reg__,r17
 3453 0016 01F0      		breq .+2
 3454 0018 04F4      		brge .L187
 3455               	.LBE137:
1112:quantum/rgblight.c ****       LED_TYPE *ledp = led + i + effect_start_pos;
1113:quantum/rgblight.c ****       if (i<effect_num_leds/2 && anim->pos) {
1114:quantum/rgblight.c ****           sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
1115:quantum/rgblight.c ****       } else if (i>=effect_num_leds/2 && !anim->pos) {
1116:quantum/rgblight.c ****           sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
1117:quantum/rgblight.c ****       } else {
1118:quantum/rgblight.c ****           sethsv(rgblight_config.hue, rgblight_config.sat, 0, ledp);
1119:quantum/rgblight.c ****       }
1120:quantum/rgblight.c ****   }
1121:quantum/rgblight.c ****   rgblight_set();
 3456               		.loc 1 1121 3 is_stmt 1 view .LVU762
 3457 001a 0E94 0000 		call rgblight_set
 3458               	.LVL224:
1122:quantum/rgblight.c ****   anim->pos = (anim->pos + 1) % 2;
 3459               		.loc 1 1122 3 view .LVU763
 3460               		.loc 1 1122 20 is_stmt 0 view .LVU764
 3461 001e 8C81      		ldd r24,Y+4
 3462 0020 90E0      		ldi r25,0
 3463               		.loc 1 1122 26 view .LVU765
 3464 0022 0196      		adiw r24,1
 3465               		.loc 1 1122 31 view .LVU766
 3466 0024 8170      		andi r24,1
 3467 0026 9927      		clr r25
 3468               		.loc 1 1122 13 view .LVU767
 3469 0028 8C83      		std Y+4,r24
 3470               	/* epilogue start */
1123:quantum/rgblight.c **** }
 3471               		.loc 1 1123 1 view .LVU768
 3472 002a DF91      		pop r29
 3473 002c CF91      		pop r28
 3474               	.LVL225:
 3475               		.loc 1 1123 1 view .LVU769
 3476 002e 1F91      		pop r17
 3477 0030 0F91      		pop r16
 3478               	.LVL226:
 3479               		.loc 1 1123 1 view .LVU770
 3480 0032 0895      		ret
 3481               	.LVL227:
 3482               	.L187:
 3483               	.LBB146:
 3484               	.LBB138:
1112:quantum/rgblight.c ****       LED_TYPE *ledp = led + i + effect_start_pos;
 3485               		.loc 1 1112 7 is_stmt 1 view .LVU771
1112:quantum/rgblight.c ****       LED_TYPE *ledp = led + i + effect_start_pos;
 3486               		.loc 1 1112 32 is_stmt 0 view .LVU772
 3487 0034 2091 0000 		lds r18,effect_start_pos
 3488 0038 A801      		movw r20,r16
 3489 003a 420F      		add r20,r18
 3490 003c 511D      		adc r21,__zero_reg__
 3491 003e 9A01      		movw r18,r20
 3492 0040 220F      		lsl r18
 3493 0042 331F      		rol r19
 3494 0044 240F      		add r18,r20
 3495 0046 351F      		adc r19,r21
1112:quantum/rgblight.c ****       LED_TYPE *ledp = led + i + effect_start_pos;
 3496               		.loc 1 1112 17 view .LVU773
 3497 0048 2050      		subi r18,lo8(-(led))
 3498 004a 3040      		sbci r19,hi8(-(led))
 3499               	.LVL228:
1113:quantum/rgblight.c ****           sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3500               		.loc 1 1113 7 is_stmt 1 view .LVU774
 3501 004c 4C81      		ldd r20,Y+4
 3502 004e 6091 0000 		lds r22,rgblight_config+2
 3503 0052 8091 0000 		lds r24,rgblight_config+1
1113:quantum/rgblight.c ****           sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3504               		.loc 1 1113 28 is_stmt 0 view .LVU775
 3505 0056 9695      		lsr r25
1113:quantum/rgblight.c ****           sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3506               		.loc 1 1113 10 view .LVU776
 3507 0058 9017      		cp r25,r16
 3508 005a 1106      		cpc __zero_reg__,r17
 3509 005c 01F0      		breq .L184
 3510 005e 04F0      		brlt .L184
1113:quantum/rgblight.c ****           sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3511               		.loc 1 1113 31 discriminator 1 view .LVU777
 3512 0060 4423      		tst r20
 3513 0062 01F0      		breq .L185
 3514               	.L192:
1116:quantum/rgblight.c ****       } else {
 3515               		.loc 1 1116 11 is_stmt 1 view .LVU778
 3516               	.LVL229:
 3517               	.LBB139:
 3518               	.LBI139:
 127:quantum/rgblight.c ****   sethsv_raw( hue, sat,
 3519               		.loc 1 127 6 view .LVU779
 3520               	.LBB140:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 3521               		.loc 1 128 3 view .LVU780
 3522 0064 4091 0000 		lds r20,rgblight_config+3
 3523               	.LVL230:
 3524               	.L191:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 3525               		.loc 1 128 3 is_stmt 0 view .LVU781
 3526               	.LBE140:
 3527               	.LBE139:
 3528               	.LBB141:
 3529               	.LBB142:
 3530 0068 0E94 0000 		call sethsv_raw
 3531               	.LVL231:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 3532               		.loc 1 128 3 view .LVU782
 3533               	.LBE142:
 3534               	.LBE141:
 3535               	.LBE138:
1111:quantum/rgblight.c ****       LED_TYPE *ledp = led + i + effect_start_pos;
 3536               		.loc 1 1111 41 view .LVU783
 3537 006c 0F5F      		subi r16,-1
 3538 006e 1F4F      		sbci r17,-1
 3539               	.LVL232:
1111:quantum/rgblight.c ****       LED_TYPE *ledp = led + i + effect_start_pos;
 3540               		.loc 1 1111 41 view .LVU784
 3541 0070 00C0      		rjmp .L183
 3542               	.LVL233:
 3543               	.L184:
 3544               	.LBB145:
1115:quantum/rgblight.c ****           sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3545               		.loc 1 1115 14 is_stmt 1 discriminator 1 view .LVU785
1115:quantum/rgblight.c ****           sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3546               		.loc 1 1115 39 is_stmt 0 discriminator 1 view .LVU786
 3547 0072 4423      		tst r20
 3548 0074 01F0      		breq .L192
 3549               	.L185:
1118:quantum/rgblight.c ****       }
 3550               		.loc 1 1118 11 is_stmt 1 view .LVU787
 3551               	.LVL234:
 3552               	.LBB144:
 3553               	.LBI141:
 127:quantum/rgblight.c ****   sethsv_raw( hue, sat,
 3554               		.loc 1 127 6 view .LVU788
 3555               	.LBB143:
 128:quantum/rgblight.c ****               val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val,
 3556               		.loc 1 128 3 view .LVU789
 3557 0076 40E0      		ldi r20,0
 3558 0078 00C0      		rjmp .L191
 3559               	.LBE143:
 3560               	.LBE144:
 3561               	.LBE145:
 3562               	.LBE146:
 3563               		.cfi_endproc
 3564               	.LFE163:
 3566               		.section	.text.rgblight_timer_init,"ax",@progbits
 3567               	.global	rgblight_timer_init
 3569               	rgblight_timer_init:
 3570               	.LFB149:
 730:quantum/rgblight.c ****   // OLD!!!! Animation timer -- AVR Timer3
 3571               		.loc 1 730 32 view -0
 3572               		.cfi_startproc
 3573               	/* prologue: function */
 3574               	/* frame size = 0 */
 3575               	/* stack size = 0 */
 3576               	.L__stack_usage = 0
 747:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3577               		.loc 1 747 3 view .LVU791
 747:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3578               		.loc 1 747 33 is_stmt 0 view .LVU792
 3579 0000 1092 0000 		sts rgblight_status+1,__zero_reg__
 748:quantum/rgblight.c **** }
 3580               		.loc 1 748 41 is_stmt 1 view .LVU793
 3581               	/* epilogue start */
 749:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 3582               		.loc 1 749 1 is_stmt 0 view .LVU794
 3583 0004 0895      		ret
 3584               		.cfi_endproc
 3585               	.LFE149:
 3587               		.section	.text.rgblight_timer_enable,"ax",@progbits
 3588               	.global	rgblight_timer_enable
 3590               	rgblight_timer_enable:
 3591               	.LFB150:
 750:quantum/rgblight.c ****   if( !is_static_effect(rgblight_config.mode) ) {
 3592               		.loc 1 750 34 is_stmt 1 view -0
 3593               		.cfi_startproc
 3594               	/* prologue: function */
 3595               	/* frame size = 0 */
 3596               	/* stack size = 0 */
 3597               	.L__stack_usage = 0
 751:quantum/rgblight.c ****       rgblight_status.timer_enabled = true;
 3598               		.loc 1 751 3 view .LVU796
 3599               	.LVL235:
 3600               	.LBB150:
 3601               	.LBI150:
  75:quantum/rgblight.c ****     return memchr(static_effect_table, mode, sizeof(static_effect_table)) != NULL;
 3602               		.loc 1 75 19 view .LVU797
 3603               	.LBB151:
  76:quantum/rgblight.c **** }
 3604               		.loc 1 76 5 view .LVU798
 3605               	.LBE151:
 3606               	.LBE150:
 751:quantum/rgblight.c ****       rgblight_status.timer_enabled = true;
 3607               		.loc 1 751 40 is_stmt 0 view .LVU799
 3608 0000 6091 0000 		lds r22,rgblight_config
 3609 0004 6695      		lsr r22
 3610               	.LBB153:
 3611               	.LBB152:
  76:quantum/rgblight.c **** }
 3612               		.loc 1 76 12 view .LVU800
 3613 0006 70E0      		ldi r23,0
 3614 0008 4BE0      		ldi r20,lo8(11)
 3615 000a 50E0      		ldi r21,0
 3616 000c 80E0      		ldi r24,lo8(static_effect_table)
 3617 000e 90E0      		ldi r25,hi8(static_effect_table)
 3618 0010 0E94 0000 		call memchr
 3619               	.LVL236:
  76:quantum/rgblight.c **** }
 3620               		.loc 1 76 12 view .LVU801
 3621               	.LBE152:
 3622               	.LBE153:
 751:quantum/rgblight.c ****       rgblight_status.timer_enabled = true;
 3623               		.loc 1 751 5 view .LVU802
 3624 0014 892B      		or r24,r25
 3625 0016 01F4      		brne .L195
 752:quantum/rgblight.c ****   }
 3626               		.loc 1 752 7 is_stmt 1 view .LVU803
 752:quantum/rgblight.c ****   }
 3627               		.loc 1 752 37 is_stmt 0 view .LVU804
 3628 0018 81E0      		ldi r24,lo8(1)
 3629 001a 8093 0000 		sts rgblight_status+1,r24
 3630               	.L195:
 754:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3631               		.loc 1 754 3 is_stmt 1 view .LVU805
 754:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3632               		.loc 1 754 33 is_stmt 0 view .LVU806
 3633 001e 0E94 0000 		call timer_read
 3634               	.LVL237:
 754:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3635               		.loc 1 754 31 view .LVU807
 3636 0022 9093 0000 		sts animation_status+1,r25
 3637 0026 8093 0000 		sts animation_status,r24
 755:quantum/rgblight.c ****   dprintf("rgblight timer enabled.\n");
 3638               		.loc 1 755 41 is_stmt 1 view .LVU808
 756:quantum/rgblight.c **** }
 3639               		.loc 1 756 3 view .LVU809
 756:quantum/rgblight.c **** }
 3640               		.loc 1 756 3 view .LVU810
 3641 002a 8091 0000 		lds r24,debug_config
 3642 002e 80FF      		sbrs r24,0
 3643 0030 00C0      		rjmp .L194
 756:quantum/rgblight.c **** }
 3644               		.loc 1 756 3 discriminator 1 view .LVU811
 3645               	.LBB154:
 756:quantum/rgblight.c **** }
 3646               		.loc 1 756 3 discriminator 1 view .LVU812
 756:quantum/rgblight.c **** }
 3647               		.loc 1 756 3 discriminator 1 view .LVU813
 3648               	.LBE154:
 3649 0032 80E0      		ldi r24,lo8(__c.3202)
 3650 0034 90E0      		ldi r25,hi8(__c.3202)
 3651 0036 9F93      		push r25
 3652               	.LCFI113:
 3653               		.cfi_def_cfa_offset 3
 3654 0038 8F93      		push r24
 3655               	.LCFI114:
 3656               		.cfi_def_cfa_offset 4
 3657 003a 0E94 0000 		call __xprintf
 3658               	.LVL238:
 3659 003e 0F90      		pop __tmp_reg__
 3660 0040 0F90      		pop __tmp_reg__
 3661               	.LCFI115:
 3662               		.cfi_def_cfa_offset 2
 3663               	.L194:
 3664               	/* epilogue start */
 757:quantum/rgblight.c **** void rgblight_timer_disable(void) {
 3665               		.loc 1 757 1 is_stmt 0 view .LVU814
 3666 0042 0895      		ret
 3667               		.cfi_endproc
 3668               	.LFE150:
 3670               		.section	.text.rgblight_timer_disable,"ax",@progbits
 3671               	.global	rgblight_timer_disable
 3673               	rgblight_timer_disable:
 3674               	.LFB151:
 758:quantum/rgblight.c ****   rgblight_status.timer_enabled = false;
 3675               		.loc 1 758 35 is_stmt 1 view -0
 3676               		.cfi_startproc
 3677               	/* prologue: function */
 3678               	/* frame size = 0 */
 3679               	/* stack size = 0 */
 3680               	.L__stack_usage = 0
 759:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3681               		.loc 1 759 3 view .LVU816
 759:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3682               		.loc 1 759 33 is_stmt 0 view .LVU817
 3683 0000 1092 0000 		sts rgblight_status+1,__zero_reg__
 760:quantum/rgblight.c ****   dprintf("rgblight timer disable.\n");
 3684               		.loc 1 760 41 is_stmt 1 view .LVU818
 761:quantum/rgblight.c **** }
 3685               		.loc 1 761 3 view .LVU819
 761:quantum/rgblight.c **** }
 3686               		.loc 1 761 3 view .LVU820
 3687 0004 8091 0000 		lds r24,debug_config
 3688 0008 80FF      		sbrs r24,0
 3689 000a 00C0      		rjmp .L200
 761:quantum/rgblight.c **** }
 3690               		.loc 1 761 3 discriminator 1 view .LVU821
 3691               	.LBB155:
 761:quantum/rgblight.c **** }
 3692               		.loc 1 761 3 discriminator 1 view .LVU822
 761:quantum/rgblight.c **** }
 3693               		.loc 1 761 3 discriminator 1 view .LVU823
 3694               	.LBE155:
 3695 000c 80E0      		ldi r24,lo8(__c.3207)
 3696 000e 90E0      		ldi r25,hi8(__c.3207)
 3697 0010 9F93      		push r25
 3698               	.LCFI116:
 3699               		.cfi_def_cfa_offset 3
 3700 0012 8F93      		push r24
 3701               	.LCFI117:
 3702               		.cfi_def_cfa_offset 4
 3703 0014 0E94 0000 		call __xprintf
 3704               	.LVL239:
 3705 0018 0F90      		pop __tmp_reg__
 3706 001a 0F90      		pop __tmp_reg__
 3707               	.LCFI118:
 3708               		.cfi_def_cfa_offset 2
 3709               	.L200:
 3710               	/* epilogue start */
 762:quantum/rgblight.c **** void rgblight_timer_toggle(void) {
 3711               		.loc 1 762 1 is_stmt 0 view .LVU824
 3712 001c 0895      		ret
 3713               		.cfi_endproc
 3714               	.LFE151:
 3716               		.section	.text.rgblight_mode_eeprom_helper,"ax",@progbits
 3717               	.global	rgblight_mode_eeprom_helper
 3719               	rgblight_mode_eeprom_helper:
 3720               	.LVL240:
 3721               	.LFB102:
 296:quantum/rgblight.c ****   if (!rgblight_config.enable) {
 3722               		.loc 1 296 70 is_stmt 1 view -0
 3723               		.cfi_startproc
 3724               	/* prologue: function */
 3725               	/* frame size = 0 */
 3726               	/* stack size = 0 */
 3727               	.L__stack_usage = 0
 297:quantum/rgblight.c ****     return;
 3728               		.loc 1 297 3 view .LVU826
 297:quantum/rgblight.c ****     return;
 3729               		.loc 1 297 23 is_stmt 0 view .LVU827
 3730 0000 9091 0000 		lds r25,rgblight_config
 297:quantum/rgblight.c ****     return;
 3731               		.loc 1 297 6 view .LVU828
 3732 0004 90FF      		sbrs r25,0
 3733 0006 00C0      		rjmp .L205
 300:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 3734               		.loc 1 300 3 is_stmt 1 view .LVU829
 3735 0008 9170      		andi r25,lo8(1)
 300:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 3736               		.loc 1 300 6 is_stmt 0 view .LVU830
 3737 000a 8111      		cpse r24,__zero_reg__
 3738 000c 00C0      		rjmp .L207
 301:quantum/rgblight.c ****   } else if (mode > RGBLIGHT_MODES) {
 3739               		.loc 1 301 5 is_stmt 1 view .LVU831
 301:quantum/rgblight.c ****   } else if (mode > RGBLIGHT_MODES) {
 3740               		.loc 1 301 26 is_stmt 0 view .LVU832
 3741 000e 9260      		ori r25,lo8(2)
 3742               	.LVL241:
 3743               	.L219:
 305:quantum/rgblight.c ****   }
 3744               		.loc 1 305 26 view .LVU833
 3745 0010 9093 0000 		sts rgblight_config,r25
 307:quantum/rgblight.c ****   if (write_to_eeprom) {
 3746               		.loc 1 307 33 is_stmt 1 view .LVU834
 308:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 3747               		.loc 1 308 3 view .LVU835
 308:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 3748               		.loc 1 308 6 is_stmt 0 view .LVU836
 3749 0014 6623      		tst r22
 3750 0016 01F0      		breq .L210
 309:quantum/rgblight.c ****     dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 3751               		.loc 1 309 5 is_stmt 1 view .LVU837
 3752 0018 6091 0000 		lds r22,rgblight_config
 3753 001c 7091 0000 		lds r23,rgblight_config+1
 3754 0020 8091 0000 		lds r24,rgblight_config+2
 3755 0024 9091 0000 		lds r25,rgblight_config+3
 3756               	.LVL242:
 309:quantum/rgblight.c ****     dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 3757               		.loc 1 309 5 is_stmt 0 view .LVU838
 3758 0028 0E94 0000 		call eeconfig_update_rgblight
 3759               	.LVL243:
 310:quantum/rgblight.c ****   } else {
 3760               		.loc 1 310 5 is_stmt 1 view .LVU839
 310:quantum/rgblight.c ****   } else {
 3761               		.loc 1 310 5 view .LVU840
 3762 002c 8091 0000 		lds r24,debug_config
 3763 0030 80FF      		sbrs r24,0
 3764 0032 00C0      		rjmp .L212
 310:quantum/rgblight.c ****   } else {
 3765               		.loc 1 310 5 discriminator 1 view .LVU841
 3766               	.LBB160:
 310:quantum/rgblight.c ****   } else {
 3767               		.loc 1 310 5 discriminator 1 view .LVU842
 310:quantum/rgblight.c ****   } else {
 3768               		.loc 1 310 5 discriminator 1 view .LVU843
 3769               	.LBE160:
 3770 0034 8091 0000 		lds r24,rgblight_config
 3771 0038 8695      		lsr r24
 3772 003a 1F92      		push __zero_reg__
 3773               	.LCFI119:
 3774               		.cfi_def_cfa_offset 3
 3775 003c 8F93      		push r24
 3776               	.LCFI120:
 3777               		.cfi_def_cfa_offset 4
 3778 003e 80E0      		ldi r24,lo8(__c.2961)
 3779 0040 90E0      		ldi r25,hi8(__c.2961)
 3780               	.L220:
 312:quantum/rgblight.c ****   }
 3781               		.loc 1 312 5 is_stmt 0 discriminator 1 view .LVU844
 3782 0042 9F93      		push r25
 3783               	.LCFI121:
 3784               		.cfi_def_cfa_offset 5
 3785 0044 8F93      		push r24
 3786               	.LCFI122:
 3787               		.cfi_def_cfa_offset 6
 3788 0046 0E94 0000 		call __xprintf
 3789               	.LVL244:
 3790 004a 0F90      		pop __tmp_reg__
 3791 004c 0F90      		pop __tmp_reg__
 3792 004e 0F90      		pop __tmp_reg__
 3793 0050 0F90      		pop __tmp_reg__
 3794               	.LCFI123:
 3795               		.cfi_def_cfa_offset 2
 3796               	.L212:
 314:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 3797               		.loc 1 314 3 is_stmt 1 view .LVU845
 3798               	.LVL245:
 3799               	.LBB161:
 3800               	.LBI161:
  75:quantum/rgblight.c ****     return memchr(static_effect_table, mode, sizeof(static_effect_table)) != NULL;
 3801               		.loc 1 75 19 view .LVU846
 3802               	.LBB162:
  76:quantum/rgblight.c **** }
 3803               		.loc 1 76 5 view .LVU847
 3804               	.LBE162:
 3805               	.LBE161:
 314:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 3806               		.loc 1 314 39 is_stmt 0 view .LVU848
 3807 0052 6091 0000 		lds r22,rgblight_config
 3808 0056 6695      		lsr r22
 3809               	.LBB164:
 3810               	.LBB163:
  76:quantum/rgblight.c **** }
 3811               		.loc 1 76 12 view .LVU849
 3812 0058 70E0      		ldi r23,0
 3813 005a 4BE0      		ldi r20,lo8(11)
 3814 005c 50E0      		ldi r21,0
 3815 005e 80E0      		ldi r24,lo8(static_effect_table)
 3816 0060 90E0      		ldi r25,hi8(static_effect_table)
 3817 0062 0E94 0000 		call memchr
 3818               	.LVL246:
  76:quantum/rgblight.c **** }
 3819               		.loc 1 76 12 view .LVU850
 3820               	.LBE163:
 3821               	.LBE164:
 314:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 3822               		.loc 1 314 5 view .LVU851
 3823 0066 892B      		or r24,r25
 3824 0068 01F0      		breq .L214
 316:quantum/rgblight.c **** #endif
 3825               		.loc 1 316 7 is_stmt 1 view .LVU852
 3826 006a 0E94 0000 		call rgblight_timer_disable
 3827               	.LVL247:
 3828               	.L215:
 324:quantum/rgblight.c **** #endif
 3829               		.loc 1 324 5 view .LVU853
 324:quantum/rgblight.c **** #endif
 3830               		.loc 1 324 30 is_stmt 0 view .LVU854
 3831 006e 81E0      		ldi r24,lo8(1)
 3832 0070 8093 0000 		sts animation_status+3,r24
 326:quantum/rgblight.c **** }
 3833               		.loc 1 326 3 is_stmt 1 view .LVU855
 3834 0074 4091 0000 		lds r20,rgblight_config+3
 3835 0078 6091 0000 		lds r22,rgblight_config+2
 3836 007c 8091 0000 		lds r24,rgblight_config+1
 3837 0080 0C94 0000 		jmp rgblight_sethsv_noeeprom
 3838               	.LVL248:
 3839               	.L207:
 302:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODES;
 3840               		.loc 1 302 10 view .LVU856
 302:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODES;
 3841               		.loc 1 302 13 is_stmt 0 view .LVU857
 3842 0084 8532      		cpi r24,lo8(37)
 3843 0086 00F0      		brlo .L209
 303:quantum/rgblight.c ****   } else {
 3844               		.loc 1 303 5 is_stmt 1 view .LVU858
 303:quantum/rgblight.c ****   } else {
 3845               		.loc 1 303 26 is_stmt 0 view .LVU859
 3846 0088 9864      		ori r25,lo8(72)
 3847 008a 00C0      		rjmp .L219
 3848               	.L209:
 305:quantum/rgblight.c ****   }
 3849               		.loc 1 305 5 is_stmt 1 view .LVU860
 305:quantum/rgblight.c ****   }
 3850               		.loc 1 305 26 is_stmt 0 view .LVU861
 3851 008c 880F      		lsl r24
 3852               	.LVL249:
 305:quantum/rgblight.c ****   }
 3853               		.loc 1 305 26 view .LVU862
 3854 008e 982B      		or r25,r24
 3855 0090 00C0      		rjmp .L219
 3856               	.L210:
 312:quantum/rgblight.c ****   }
 3857               		.loc 1 312 5 is_stmt 1 view .LVU863
 312:quantum/rgblight.c ****   }
 3858               		.loc 1 312 5 view .LVU864
 3859 0092 8091 0000 		lds r24,debug_config
 3860 0096 80FF      		sbrs r24,0
 3861 0098 00C0      		rjmp .L212
 312:quantum/rgblight.c ****   }
 3862               		.loc 1 312 5 discriminator 1 view .LVU865
 3863               	.LBB165:
 312:quantum/rgblight.c ****   }
 3864               		.loc 1 312 5 discriminator 1 view .LVU866
 312:quantum/rgblight.c ****   }
 3865               		.loc 1 312 5 discriminator 1 view .LVU867
 3866               	.LBE165:
 3867 009a 8091 0000 		lds r24,rgblight_config
 3868 009e 8695      		lsr r24
 3869 00a0 1F92      		push __zero_reg__
 3870               	.LCFI124:
 3871               		.cfi_remember_state
 3872               		.cfi_def_cfa_offset 3
 3873 00a2 8F93      		push r24
 3874               	.LCFI125:
 3875               		.cfi_def_cfa_offset 4
 3876 00a4 80E0      		ldi r24,lo8(__c.2963)
 3877 00a6 90E0      		ldi r25,hi8(__c.2963)
 3878 00a8 00C0      		rjmp .L220
 3879               	.LVL250:
 3880               	.L214:
 3881               	.LCFI126:
 3882               		.cfi_restore_state
 320:quantum/rgblight.c **** #endif
 3883               		.loc 1 320 7 view .LVU868
 3884 00aa 0E94 0000 		call rgblight_timer_enable
 3885               	.LVL251:
 3886 00ae 00C0      		rjmp .L215
 3887               	.LVL252:
 3888               	.L205:
 3889               	/* epilogue start */
 327:quantum/rgblight.c **** 
 3890               		.loc 1 327 1 is_stmt 0 view .LVU869
 3891 00b0 0895      		ret
 3892               		.cfi_endproc
 3893               	.LFE102:
 3895               		.section	.text.rgblight_step_helper,"ax",@progbits
 3896               	.global	rgblight_step_helper
 3898               	rgblight_step_helper:
 3899               	.LVL253:
 3900               	.LFB95:
 259:quantum/rgblight.c ****   uint8_t mode = 0;
 3901               		.loc 1 259 49 is_stmt 1 view -0
 3902               		.cfi_startproc
 3903               	/* prologue: function */
 3904               	/* frame size = 0 */
 3905               	/* stack size = 0 */
 3906               	.L__stack_usage = 0
 259:quantum/rgblight.c ****   uint8_t mode = 0;
 3907               		.loc 1 259 49 is_stmt 0 view .LVU871
 3908 0000 682F      		mov r22,r24
 260:quantum/rgblight.c ****   mode = rgblight_config.mode + 1;
 3909               		.loc 1 260 3 is_stmt 1 view .LVU872
 3910               	.LVL254:
 261:quantum/rgblight.c ****   if (mode > RGBLIGHT_MODES) {
 3911               		.loc 1 261 3 view .LVU873
 261:quantum/rgblight.c ****   if (mode > RGBLIGHT_MODES) {
 3912               		.loc 1 261 25 is_stmt 0 view .LVU874
 3913 0002 9091 0000 		lds r25,rgblight_config
 3914 0006 9695      		lsr r25
 261:quantum/rgblight.c ****   if (mode > RGBLIGHT_MODES) {
 3915               		.loc 1 261 8 view .LVU875
 3916 0008 81E0      		ldi r24,lo8(1)
 3917               	.LVL255:
 261:quantum/rgblight.c ****   if (mode > RGBLIGHT_MODES) {
 3918               		.loc 1 261 8 view .LVU876
 3919 000a 890F      		add r24,r25
 3920               	.LVL256:
 262:quantum/rgblight.c ****     mode = 1;
 3921               		.loc 1 262 3 is_stmt 1 view .LVU877
 262:quantum/rgblight.c ****     mode = 1;
 3922               		.loc 1 262 6 is_stmt 0 view .LVU878
 3923 000c 8532      		cpi r24,lo8(37)
 3924 000e 00F0      		brlo .L222
 263:quantum/rgblight.c ****   }
 3925               		.loc 1 263 10 view .LVU879
 3926 0010 81E0      		ldi r24,lo8(1)
 3927               	.LVL257:
 3928               	.L222:
 265:quantum/rgblight.c **** }
 3929               		.loc 1 265 3 is_stmt 1 view .LVU880
 3930 0012 0C94 0000 		jmp rgblight_mode_eeprom_helper
 3931               	.LVL258:
 265:quantum/rgblight.c **** }
 3932               		.loc 1 265 3 is_stmt 0 view .LVU881
 3933               		.cfi_endproc
 3934               	.LFE95:
 3936               		.section	.text.rgblight_step_noeeprom,"ax",@progbits
 3937               	.global	rgblight_step_noeeprom
 3939               	rgblight_step_noeeprom:
 3940               	.LFB96:
 267:quantum/rgblight.c ****   rgblight_step_helper(false);
 3941               		.loc 1 267 35 is_stmt 1 view -0
 3942               		.cfi_startproc
 3943               	/* prologue: function */
 3944               	/* frame size = 0 */
 3945               	/* stack size = 0 */
 3946               	.L__stack_usage = 0
 268:quantum/rgblight.c **** }
 3947               		.loc 1 268 3 view .LVU883
 3948 0000 80E0      		ldi r24,0
 3949 0002 0C94 0000 		jmp rgblight_step_helper
 3950               	.LVL259:
 3951               		.cfi_endproc
 3952               	.LFE96:
 3954               		.section	.text.rgblight_step,"ax",@progbits
 3955               	.global	rgblight_step
 3957               	rgblight_step:
 3958               	.LFB97:
 270:quantum/rgblight.c ****   rgblight_step_helper(true);
 3959               		.loc 1 270 26 view -0
 3960               		.cfi_startproc
 3961               	/* prologue: function */
 3962               	/* frame size = 0 */
 3963               	/* stack size = 0 */
 3964               	.L__stack_usage = 0
 271:quantum/rgblight.c **** }
 3965               		.loc 1 271 3 view .LVU885
 3966 0000 81E0      		ldi r24,lo8(1)
 3967 0002 0C94 0000 		jmp rgblight_step_helper
 3968               	.LVL260:
 3969               		.cfi_endproc
 3970               	.LFE97:
 3972               		.section	.text.rgblight_step_reverse_helper,"ax",@progbits
 3973               	.global	rgblight_step_reverse_helper
 3975               	rgblight_step_reverse_helper:
 3976               	.LVL261:
 3977               	.LFB98:
 273:quantum/rgblight.c ****   uint8_t mode = 0;
 3978               		.loc 1 273 57 view -0
 3979               		.cfi_startproc
 3980               	/* prologue: function */
 3981               	/* frame size = 0 */
 3982               	/* stack size = 0 */
 3983               	.L__stack_usage = 0
 273:quantum/rgblight.c ****   uint8_t mode = 0;
 3984               		.loc 1 273 57 is_stmt 0 view .LVU887
 3985 0000 682F      		mov r22,r24
 274:quantum/rgblight.c ****   mode = rgblight_config.mode - 1;
 3986               		.loc 1 274 3 is_stmt 1 view .LVU888
 3987               	.LVL262:
 275:quantum/rgblight.c ****   if (mode < 1) {
 3988               		.loc 1 275 3 view .LVU889
 275:quantum/rgblight.c ****   if (mode < 1) {
 3989               		.loc 1 275 25 is_stmt 0 view .LVU890
 3990 0002 9091 0000 		lds r25,rgblight_config
 3991 0006 9695      		lsr r25
 275:quantum/rgblight.c ****   if (mode < 1) {
 3992               		.loc 1 275 8 view .LVU891
 3993 0008 8FEF      		ldi r24,lo8(-1)
 3994               	.LVL263:
 275:quantum/rgblight.c ****   if (mode < 1) {
 3995               		.loc 1 275 8 view .LVU892
 3996 000a 890F      		add r24,r25
 3997               	.LVL264:
 276:quantum/rgblight.c ****     mode = RGBLIGHT_MODES;
 3998               		.loc 1 276 3 is_stmt 1 view .LVU893
 276:quantum/rgblight.c ****     mode = RGBLIGHT_MODES;
 3999               		.loc 1 276 6 is_stmt 0 view .LVU894
 4000 000c 01F4      		brne .L226
 277:quantum/rgblight.c ****   }
 4001               		.loc 1 277 10 view .LVU895
 4002 000e 84E2      		ldi r24,lo8(36)
 4003               	.LVL265:
 4004               	.L226:
 279:quantum/rgblight.c **** }
 4005               		.loc 1 279 3 is_stmt 1 view .LVU896
 4006 0010 0C94 0000 		jmp rgblight_mode_eeprom_helper
 4007               	.LVL266:
 279:quantum/rgblight.c **** }
 4008               		.loc 1 279 3 is_stmt 0 view .LVU897
 4009               		.cfi_endproc
 4010               	.LFE98:
 4012               		.section	.text.rgblight_step_reverse_noeeprom,"ax",@progbits
 4013               	.global	rgblight_step_reverse_noeeprom
 4015               	rgblight_step_reverse_noeeprom:
 4016               	.LFB99:
 281:quantum/rgblight.c ****   rgblight_step_reverse_helper(false);
 4017               		.loc 1 281 43 is_stmt 1 view -0
 4018               		.cfi_startproc
 4019               	/* prologue: function */
 4020               	/* frame size = 0 */
 4021               	/* stack size = 0 */
 4022               	.L__stack_usage = 0
 282:quantum/rgblight.c **** }
 4023               		.loc 1 282 3 view .LVU899
 4024 0000 80E0      		ldi r24,0
 4025 0002 0C94 0000 		jmp rgblight_step_reverse_helper
 4026               	.LVL267:
 4027               		.cfi_endproc
 4028               	.LFE99:
 4030               		.section	.text.rgblight_step_reverse,"ax",@progbits
 4031               	.global	rgblight_step_reverse
 4033               	rgblight_step_reverse:
 4034               	.LFB100:
 284:quantum/rgblight.c ****   rgblight_step_reverse_helper(true);
 4035               		.loc 1 284 34 view -0
 4036               		.cfi_startproc
 4037               	/* prologue: function */
 4038               	/* frame size = 0 */
 4039               	/* stack size = 0 */
 4040               	.L__stack_usage = 0
 285:quantum/rgblight.c **** }
 4041               		.loc 1 285 3 view .LVU901
 4042 0000 81E0      		ldi r24,lo8(1)
 4043 0002 0C94 0000 		jmp rgblight_step_reverse_helper
 4044               	.LVL268:
 4045               		.cfi_endproc
 4046               	.LFE100:
 4048               		.section	.text.rgblight_mode,"ax",@progbits
 4049               	.global	rgblight_mode
 4051               	rgblight_mode:
 4052               	.LVL269:
 4053               	.LFB103:
 329:quantum/rgblight.c ****   rgblight_mode_eeprom_helper(mode, true);
 4054               		.loc 1 329 34 view -0
 4055               		.cfi_startproc
 4056               	/* prologue: function */
 4057               	/* frame size = 0 */
 4058               	/* stack size = 0 */
 4059               	.L__stack_usage = 0
 330:quantum/rgblight.c **** }
 4060               		.loc 1 330 3 view .LVU903
 4061 0000 61E0      		ldi r22,lo8(1)
 4062 0002 0C94 0000 		jmp rgblight_mode_eeprom_helper
 4063               	.LVL270:
 330:quantum/rgblight.c **** }
 4064               		.loc 1 330 3 is_stmt 0 view .LVU904
 4065               		.cfi_endproc
 4066               	.LFE103:
 4068               		.section	.text.rgblight_increase,"ax",@progbits
 4069               	.global	rgblight_increase
 4071               	rgblight_increase:
 4072               	.LFB93:
 244:quantum/rgblight.c ****   uint8_t mode = 0;
 4073               		.loc 1 244 30 is_stmt 1 view -0
 4074               		.cfi_startproc
 4075               	/* prologue: function */
 4076               	/* frame size = 0 */
 4077               	/* stack size = 0 */
 4078               	.L__stack_usage = 0
 245:quantum/rgblight.c ****   if (rgblight_config.mode < RGBLIGHT_MODES) {
 4079               		.loc 1 245 3 view .LVU906
 4080               	.LVL271:
 246:quantum/rgblight.c ****     mode = rgblight_config.mode + 1;
 4081               		.loc 1 246 3 view .LVU907
 246:quantum/rgblight.c ****     mode = rgblight_config.mode + 1;
 4082               		.loc 1 246 22 is_stmt 0 view .LVU908
 4083 0000 8091 0000 		lds r24,rgblight_config
 4084 0004 8695      		lsr r24
 246:quantum/rgblight.c ****     mode = rgblight_config.mode + 1;
 4085               		.loc 1 246 6 view .LVU909
 4086 0006 8432      		cpi r24,lo8(36)
 4087 0008 00F4      		brsh .L232
 247:quantum/rgblight.c ****   }
 4088               		.loc 1 247 5 is_stmt 1 view .LVU910
 247:quantum/rgblight.c ****   }
 4089               		.loc 1 247 10 is_stmt 0 view .LVU911
 4090 000a 8F5F      		subi r24,lo8(-(1))
 4091               	.LVL272:
 4092               	.L231:
 249:quantum/rgblight.c **** }
 4093               		.loc 1 249 3 is_stmt 1 view .LVU912
 4094 000c 0C94 0000 		jmp rgblight_mode
 4095               	.LVL273:
 4096               	.L232:
 245:quantum/rgblight.c ****   if (rgblight_config.mode < RGBLIGHT_MODES) {
 4097               		.loc 1 245 11 is_stmt 0 view .LVU913
 4098 0010 80E0      		ldi r24,0
 4099 0012 00C0      		rjmp .L231
 4100               		.cfi_endproc
 4101               	.LFE93:
 4103               		.section	.text.rgblight_decrease,"ax",@progbits
 4104               	.global	rgblight_decrease
 4106               	rgblight_decrease:
 4107               	.LFB94:
 251:quantum/rgblight.c ****   uint8_t mode = 0;
 4108               		.loc 1 251 30 is_stmt 1 view -0
 4109               		.cfi_startproc
 4110               	/* prologue: function */
 4111               	/* frame size = 0 */
 4112               	/* stack size = 0 */
 4113               	.L__stack_usage = 0
 252:quantum/rgblight.c ****   // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 4114               		.loc 1 252 3 view .LVU915
 4115               	.LVL274:
 254:quantum/rgblight.c ****     mode = rgblight_config.mode - 1;
 4116               		.loc 1 254 3 view .LVU916
 254:quantum/rgblight.c ****     mode = rgblight_config.mode - 1;
 4117               		.loc 1 254 22 is_stmt 0 view .LVU917
 4118 0000 8091 0000 		lds r24,rgblight_config
 4119 0004 8695      		lsr r24
 254:quantum/rgblight.c ****     mode = rgblight_config.mode - 1;
 4120               		.loc 1 254 6 view .LVU918
 4121 0006 8230      		cpi r24,lo8(2)
 4122 0008 00F0      		brlo .L235
 255:quantum/rgblight.c ****   }
 4123               		.loc 1 255 5 is_stmt 1 view .LVU919
 255:quantum/rgblight.c ****   }
 4124               		.loc 1 255 10 is_stmt 0 view .LVU920
 4125 000a 8150      		subi r24,lo8(-(-1))
 4126               	.LVL275:
 4127               	.L234:
 257:quantum/rgblight.c **** }
 4128               		.loc 1 257 3 is_stmt 1 view .LVU921
 4129 000c 0C94 0000 		jmp rgblight_mode
 4130               	.LVL276:
 4131               	.L235:
 252:quantum/rgblight.c ****   // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 4132               		.loc 1 252 11 is_stmt 0 view .LVU922
 4133 0010 80E0      		ldi r24,0
 4134 0012 00C0      		rjmp .L234
 4135               		.cfi_endproc
 4136               	.LFE94:
 4138               		.section	.text.rgblight_enable,"ax",@progbits
 4139               	.global	rgblight_enable
 4141               	rgblight_enable:
 4142               	.LFB107:
 358:quantum/rgblight.c ****   rgblight_config.enable = 1;
 4143               		.loc 1 358 28 is_stmt 1 view -0
 4144               		.cfi_startproc
 4145               	/* prologue: function */
 4146               	/* frame size = 0 */
 4147               	/* stack size = 0 */
 4148               	.L__stack_usage = 0
 359:quantum/rgblight.c ****   // No need to update EEPROM here. rgblight_mode() will do that, actually
 4149               		.loc 1 359 3 view .LVU924
 359:quantum/rgblight.c ****   // No need to update EEPROM here. rgblight_mode() will do that, actually
 4150               		.loc 1 359 26 is_stmt 0 view .LVU925
 4151 0000 8091 0000 		lds r24,rgblight_config
 4152 0004 8160      		ori r24,lo8(1<<0)
 4153 0006 8093 0000 		sts rgblight_config,r24
 362:quantum/rgblight.c ****   rgblight_mode(rgblight_config.mode);
 4154               		.loc 1 362 3 is_stmt 1 view .LVU926
 362:quantum/rgblight.c ****   rgblight_mode(rgblight_config.mode);
 4155               		.loc 1 362 3 view .LVU927
 4156 000a 8091 0000 		lds r24,debug_config
 4157 000e 80FF      		sbrs r24,0
 4158 0010 00C0      		rjmp .L237
 362:quantum/rgblight.c ****   rgblight_mode(rgblight_config.mode);
 4159               		.loc 1 362 3 discriminator 1 view .LVU928
 4160               	.LBB166:
 362:quantum/rgblight.c ****   rgblight_mode(rgblight_config.mode);
 4161               		.loc 1 362 3 discriminator 1 view .LVU929
 362:quantum/rgblight.c ****   rgblight_mode(rgblight_config.mode);
 4162               		.loc 1 362 3 discriminator 1 view .LVU930
 4163               	.LBE166:
 4164 0012 1F92      		push __zero_reg__
 4165               	.LCFI127:
 4166               		.cfi_def_cfa_offset 3
 4167 0014 81E0      		ldi r24,lo8(1)
 4168 0016 8F93      		push r24
 4169               	.LCFI128:
 4170               		.cfi_def_cfa_offset 4
 4171 0018 80E0      		ldi r24,lo8(__c.2984)
 4172 001a 90E0      		ldi r25,hi8(__c.2984)
 4173 001c 9F93      		push r25
 4174               	.LCFI129:
 4175               		.cfi_def_cfa_offset 5
 4176 001e 8F93      		push r24
 4177               	.LCFI130:
 4178               		.cfi_def_cfa_offset 6
 4179 0020 0E94 0000 		call __xprintf
 4180               	.LVL277:
 4181 0024 0F90      		pop __tmp_reg__
 4182 0026 0F90      		pop __tmp_reg__
 4183 0028 0F90      		pop __tmp_reg__
 4184 002a 0F90      		pop __tmp_reg__
 4185               	.LCFI131:
 4186               		.cfi_def_cfa_offset 2
 4187               	.L237:
 363:quantum/rgblight.c **** }
 4188               		.loc 1 363 3 view .LVU931
 363:quantum/rgblight.c **** }
 4189               		.loc 1 363 32 is_stmt 0 view .LVU932
 4190 002c 8091 0000 		lds r24,rgblight_config
 363:quantum/rgblight.c **** }
 4191               		.loc 1 363 3 view .LVU933
 4192 0030 8695      		lsr r24
 4193 0032 0C94 0000 		jmp rgblight_mode
 4194               	.LVL278:
 4195               		.cfi_endproc
 4196               	.LFE107:
 4198               		.section	.text.rgblight_mode_noeeprom,"ax",@progbits
 4199               	.global	rgblight_mode_noeeprom
 4201               	rgblight_mode_noeeprom:
 4202               	.LVL279:
 4203               	.LFB104:
 333:quantum/rgblight.c ****   rgblight_mode_eeprom_helper(mode, false);
 4204               		.loc 1 333 43 is_stmt 1 view -0
 4205               		.cfi_startproc
 4206               	/* prologue: function */
 4207               	/* frame size = 0 */
 4208               	/* stack size = 0 */
 4209               	.L__stack_usage = 0
 334:quantum/rgblight.c **** }
 4210               		.loc 1 334 3 view .LVU935
 4211 0000 60E0      		ldi r22,0
 4212 0002 0C94 0000 		jmp rgblight_mode_eeprom_helper
 4213               	.LVL280:
 334:quantum/rgblight.c **** }
 4214               		.loc 1 334 3 is_stmt 0 view .LVU936
 4215               		.cfi_endproc
 4216               	.LFE104:
 4218               		.section	.text.rgblight_init,"ax",@progbits
 4219               	.global	rgblight_init
 4221               	rgblight_init:
 4222               	.LFB90:
 190:quantum/rgblight.c ****   /* if already initialized, don't do it again.
 4223               		.loc 1 190 26 is_stmt 1 view -0
 4224               		.cfi_startproc
 4225               	/* prologue: function */
 4226               	/* frame size = 0 */
 4227               	/* stack size = 0 */
 4228               	.L__stack_usage = 0
 194:quantum/rgblight.c **** 
 4229               		.loc 1 194 3 view .LVU938
 194:quantum/rgblight.c **** 
 4230               		.loc 1 194 6 is_stmt 0 view .LVU939
 4231 0000 8091 0000 		lds r24,is_rgblight_initialized
 4232 0004 8111      		cpse r24,__zero_reg__
 4233 0006 00C0      		rjmp .L242
 196:quantum/rgblight.c ****   dprintf("rgblight_init called.\n");
 4234               		.loc 1 196 3 is_stmt 1 view .LVU940
 196:quantum/rgblight.c ****   dprintf("rgblight_init called.\n");
 4235               		.loc 1 196 16 is_stmt 0 view .LVU941
 4236 0008 8091 0000 		lds r24,debug_config
 4237 000c 8160      		ori r24,lo8(1<<0)
 4238 000e 8093 0000 		sts debug_config,r24
 197:quantum/rgblight.c ****   dprintf("rgblight_init start!\n");
 4239               		.loc 1 197 3 is_stmt 1 view .LVU942
 197:quantum/rgblight.c ****   dprintf("rgblight_init start!\n");
 4240               		.loc 1 197 3 view .LVU943
 4241 0012 80FF      		sbrs r24,0
 4242 0014 00C0      		rjmp .L245
 197:quantum/rgblight.c ****   dprintf("rgblight_init start!\n");
 4243               		.loc 1 197 3 discriminator 1 view .LVU944
 4244               	.LBB173:
 197:quantum/rgblight.c ****   dprintf("rgblight_init start!\n");
 4245               		.loc 1 197 3 discriminator 1 view .LVU945
 197:quantum/rgblight.c ****   dprintf("rgblight_init start!\n");
 4246               		.loc 1 197 3 discriminator 1 view .LVU946
 4247               	.LBE173:
 4248 0016 80E0      		ldi r24,lo8(__c.2912)
 4249 0018 90E0      		ldi r25,hi8(__c.2912)
 4250 001a 9F93      		push r25
 4251               	.LCFI132:
 4252               		.cfi_def_cfa_offset 3
 4253 001c 8F93      		push r24
 4254               	.LCFI133:
 4255               		.cfi_def_cfa_offset 4
 4256 001e 0E94 0000 		call __xprintf
 4257               	.LVL281:
 198:quantum/rgblight.c ****   if (!eeconfig_is_enabled()) {
 4258               		.loc 1 198 3 discriminator 1 view .LVU947
 198:quantum/rgblight.c ****   if (!eeconfig_is_enabled()) {
 4259               		.loc 1 198 3 discriminator 1 view .LVU948
 4260 0022 8091 0000 		lds r24,debug_config
 4261 0026 0F90      		pop __tmp_reg__
 4262 0028 0F90      		pop __tmp_reg__
 4263               	.LCFI134:
 4264               		.cfi_def_cfa_offset 2
 4265 002a 80FF      		sbrs r24,0
 4266 002c 00C0      		rjmp .L245
 198:quantum/rgblight.c ****   if (!eeconfig_is_enabled()) {
 4267               		.loc 1 198 3 discriminator 1 view .LVU949
 4268               	.LBB174:
 198:quantum/rgblight.c ****   if (!eeconfig_is_enabled()) {
 4269               		.loc 1 198 3 discriminator 1 view .LVU950
 198:quantum/rgblight.c ****   if (!eeconfig_is_enabled()) {
 4270               		.loc 1 198 3 discriminator 1 view .LVU951
 4271               	.LBE174:
 4272 002e 80E0      		ldi r24,lo8(__c.2914)
 4273 0030 90E0      		ldi r25,hi8(__c.2914)
 4274 0032 9F93      		push r25
 4275               	.LCFI135:
 4276               		.cfi_def_cfa_offset 3
 4277 0034 8F93      		push r24
 4278               	.LCFI136:
 4279               		.cfi_def_cfa_offset 4
 4280 0036 0E94 0000 		call __xprintf
 4281               	.LVL282:
 4282 003a 0F90      		pop __tmp_reg__
 4283 003c 0F90      		pop __tmp_reg__
 4284               	.LCFI137:
 4285               		.cfi_def_cfa_offset 2
 4286               	.L245:
 199:quantum/rgblight.c ****     dprintf("rgblight_init eeconfig is not enabled.\n");
 4287               		.loc 1 199 3 view .LVU952
 199:quantum/rgblight.c ****     dprintf("rgblight_init eeconfig is not enabled.\n");
 4288               		.loc 1 199 8 is_stmt 0 view .LVU953
 4289 003e 0E94 0000 		call eeconfig_is_enabled
 4290               	.LVL283:
 199:quantum/rgblight.c ****     dprintf("rgblight_init eeconfig is not enabled.\n");
 4291               		.loc 1 199 6 view .LVU954
 4292 0042 8111      		cpse r24,__zero_reg__
 4293 0044 00C0      		rjmp .L247
 200:quantum/rgblight.c ****     eeconfig_init();
 4294               		.loc 1 200 5 is_stmt 1 view .LVU955
 200:quantum/rgblight.c ****     eeconfig_init();
 4295               		.loc 1 200 5 view .LVU956
 4296 0046 8091 0000 		lds r24,debug_config
 4297 004a 80FF      		sbrs r24,0
 4298 004c 00C0      		rjmp .L248
 200:quantum/rgblight.c ****     eeconfig_init();
 4299               		.loc 1 200 5 discriminator 1 view .LVU957
 4300               	.LBB175:
 200:quantum/rgblight.c ****     eeconfig_init();
 4301               		.loc 1 200 5 discriminator 1 view .LVU958
 200:quantum/rgblight.c ****     eeconfig_init();
 4302               		.loc 1 200 5 discriminator 1 view .LVU959
 4303               	.LBE175:
 4304 004e 80E0      		ldi r24,lo8(__c.2916)
 4305 0050 90E0      		ldi r25,hi8(__c.2916)
 4306 0052 9F93      		push r25
 4307               	.LCFI138:
 4308               		.cfi_def_cfa_offset 3
 4309 0054 8F93      		push r24
 4310               	.LCFI139:
 4311               		.cfi_def_cfa_offset 4
 4312 0056 0E94 0000 		call __xprintf
 4313               	.LVL284:
 4314 005a 0F90      		pop __tmp_reg__
 4315 005c 0F90      		pop __tmp_reg__
 4316               	.LCFI140:
 4317               		.cfi_def_cfa_offset 2
 4318               	.L248:
 201:quantum/rgblight.c ****     eeconfig_update_rgblight_default();
 4319               		.loc 1 201 5 view .LVU960
 4320 005e 0E94 0000 		call eeconfig_init
 4321               	.LVL285:
 202:quantum/rgblight.c ****   }
 4322               		.loc 1 202 5 view .LVU961
 4323 0062 0E94 0000 		call eeconfig_update_rgblight_default
 4324               	.LVL286:
 4325               	.L247:
 204:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 4326               		.loc 1 204 3 view .LVU962
 204:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 4327               		.loc 1 204 25 is_stmt 0 view .LVU963
 4328 0066 0E94 0000 		call eeconfig_read_rgblight
 4329               	.LVL287:
 204:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 4330               		.loc 1 204 23 view .LVU964
 4331 006a 6093 0000 		sts rgblight_config,r22
 4332 006e 7093 0000 		sts rgblight_config+1,r23
 4333 0072 8093 0000 		sts rgblight_config+2,r24
 4334 0076 9093 0000 		sts rgblight_config+3,r25
 205:quantum/rgblight.c ****   if (!rgblight_config.mode) {
 4335               		.loc 1 205 37 is_stmt 1 view .LVU965
 206:quantum/rgblight.c ****     dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 4336               		.loc 1 206 3 view .LVU966
 206:quantum/rgblight.c ****     dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 4337               		.loc 1 206 7 is_stmt 0 view .LVU967
 4338 007a 6E7F      		andi r22,lo8(-2)
 206:quantum/rgblight.c ****     dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 4339               		.loc 1 206 6 view .LVU968
 4340 007c 01F4      		brne .L249
 207:quantum/rgblight.c ****     eeconfig_update_rgblight_default();
 4341               		.loc 1 207 5 is_stmt 1 view .LVU969
 207:quantum/rgblight.c ****     eeconfig_update_rgblight_default();
 4342               		.loc 1 207 5 view .LVU970
 4343 007e 8091 0000 		lds r24,debug_config
 4344 0082 80FF      		sbrs r24,0
 4345 0084 00C0      		rjmp .L250
 207:quantum/rgblight.c ****     eeconfig_update_rgblight_default();
 4346               		.loc 1 207 5 discriminator 1 view .LVU971
 4347               	.LBB176:
 207:quantum/rgblight.c ****     eeconfig_update_rgblight_default();
 4348               		.loc 1 207 5 discriminator 1 view .LVU972
 207:quantum/rgblight.c ****     eeconfig_update_rgblight_default();
 4349               		.loc 1 207 5 discriminator 1 view .LVU973
 4350               	.LBE176:
 4351 0086 80E0      		ldi r24,lo8(__c.2918)
 4352 0088 90E0      		ldi r25,hi8(__c.2918)
 4353 008a 9F93      		push r25
 4354               	.LCFI141:
 4355               		.cfi_def_cfa_offset 3
 4356 008c 8F93      		push r24
 4357               	.LCFI142:
 4358               		.cfi_def_cfa_offset 4
 4359 008e 0E94 0000 		call __xprintf
 4360               	.LVL288:
 4361 0092 0F90      		pop __tmp_reg__
 4362 0094 0F90      		pop __tmp_reg__
 4363               	.LCFI143:
 4364               		.cfi_def_cfa_offset 2
 4365               	.L250:
 208:quantum/rgblight.c ****     rgblight_config.raw = eeconfig_read_rgblight();
 4366               		.loc 1 208 5 view .LVU974
 4367 0096 0E94 0000 		call eeconfig_update_rgblight_default
 4368               	.LVL289:
 209:quantum/rgblight.c ****   }
 4369               		.loc 1 209 5 view .LVU975
 209:quantum/rgblight.c ****   }
 4370               		.loc 1 209 27 is_stmt 0 view .LVU976
 4371 009a 0E94 0000 		call eeconfig_read_rgblight
 4372               	.LVL290:
 209:quantum/rgblight.c ****   }
 4373               		.loc 1 209 25 view .LVU977
 4374 009e 6093 0000 		sts rgblight_config,r22
 4375 00a2 7093 0000 		sts rgblight_config+1,r23
 4376 00a6 8093 0000 		sts rgblight_config+2,r24
 4377 00aa 9093 0000 		sts rgblight_config+3,r25
 4378               	.L249:
 211:quantum/rgblight.c **** 
 4379               		.loc 1 211 3 is_stmt 1 view .LVU978
 4380 00ae 0E94 0000 		call rgblight_check_config
 4381               	.LVL291:
 213:quantum/rgblight.c **** 
 4382               		.loc 1 213 3 view .LVU979
 4383 00b2 0E94 0000 		call eeconfig_debug_rgblight
 4384               	.LVL292:
 216:quantum/rgblight.c **** #endif
 4385               		.loc 1 216 5 view .LVU980
 4386               	.LBB177:
 4387               	.LBI177:
 730:quantum/rgblight.c ****   // OLD!!!! Animation timer -- AVR Timer3
 4388               		.loc 1 730 6 view .LVU981
 4389               	.LBB178:
 747:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4390               		.loc 1 747 3 view .LVU982
 747:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4391               		.loc 1 747 33 is_stmt 0 view .LVU983
 4392 00b6 1092 0000 		sts rgblight_status+1,__zero_reg__
 748:quantum/rgblight.c **** }
 4393               		.loc 1 748 41 is_stmt 1 view .LVU984
 4394               	.LBE178:
 4395               	.LBE177:
 219:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 4396               		.loc 1 219 3 view .LVU985
 219:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 4397               		.loc 1 219 7 is_stmt 0 view .LVU986
 4398 00ba 8091 0000 		lds r24,rgblight_config
 219:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 4399               		.loc 1 219 6 view .LVU987
 4400 00be 80FF      		sbrs r24,0
 4401 00c0 00C0      		rjmp .L251
 220:quantum/rgblight.c ****   }
 4402               		.loc 1 220 5 is_stmt 1 view .LVU988
 4403 00c2 8695      		lsr r24
 4404 00c4 0E94 0000 		call rgblight_mode_noeeprom
 4405               	.LVL293:
 4406               	.L251:
 223:quantum/rgblight.c **** 
 4407               		.loc 1 223 3 view .LVU989
 223:quantum/rgblight.c **** 
 4408               		.loc 1 223 27 is_stmt 0 view .LVU990
 4409 00c8 81E0      		ldi r24,lo8(1)
 4410 00ca 8093 0000 		sts is_rgblight_initialized,r24
 4411               	.L242:
 4412               	/* epilogue start */
 225:quantum/rgblight.c **** 
 4413               		.loc 1 225 1 view .LVU991
 4414 00ce 0895      		ret
 4415               		.cfi_endproc
 4416               	.LFE90:
 4418               		.section	.text.rgblight_enable_noeeprom,"ax",@progbits
 4419               	.global	rgblight_enable_noeeprom
 4421               	rgblight_enable_noeeprom:
 4422               	.LFB108:
 366:quantum/rgblight.c ****   rgblight_config.enable = 1;
 4423               		.loc 1 366 37 is_stmt 1 view -0
 4424               		.cfi_startproc
 4425               	/* prologue: function */
 4426               	/* frame size = 0 */
 4427               	/* stack size = 0 */
 4428               	.L__stack_usage = 0
 367:quantum/rgblight.c ****   dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 4429               		.loc 1 367 3 view .LVU993
 367:quantum/rgblight.c ****   dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 4430               		.loc 1 367 26 is_stmt 0 view .LVU994
 4431 0000 8091 0000 		lds r24,rgblight_config
 4432 0004 8160      		ori r24,lo8(1<<0)
 4433 0006 8093 0000 		sts rgblight_config,r24
 368:quantum/rgblight.c ****   rgblight_mode_noeeprom(rgblight_config.mode);
 4434               		.loc 1 368 3 is_stmt 1 view .LVU995
 368:quantum/rgblight.c ****   rgblight_mode_noeeprom(rgblight_config.mode);
 4435               		.loc 1 368 3 view .LVU996
 4436 000a 8091 0000 		lds r24,debug_config
 4437 000e 80FF      		sbrs r24,0
 4438 0010 00C0      		rjmp .L265
 368:quantum/rgblight.c ****   rgblight_mode_noeeprom(rgblight_config.mode);
 4439               		.loc 1 368 3 discriminator 1 view .LVU997
 4440               	.LBB179:
 368:quantum/rgblight.c ****   rgblight_mode_noeeprom(rgblight_config.mode);
 4441               		.loc 1 368 3 discriminator 1 view .LVU998
 368:quantum/rgblight.c ****   rgblight_mode_noeeprom(rgblight_config.mode);
 4442               		.loc 1 368 3 discriminator 1 view .LVU999
 4443               	.LBE179:
 4444 0012 1F92      		push __zero_reg__
 4445               	.LCFI144:
 4446               		.cfi_def_cfa_offset 3
 4447 0014 81E0      		ldi r24,lo8(1)
 4448 0016 8F93      		push r24
 4449               	.LCFI145:
 4450               		.cfi_def_cfa_offset 4
 4451 0018 80E0      		ldi r24,lo8(__c.2989)
 4452 001a 90E0      		ldi r25,hi8(__c.2989)
 4453 001c 9F93      		push r25
 4454               	.LCFI146:
 4455               		.cfi_def_cfa_offset 5
 4456 001e 8F93      		push r24
 4457               	.LCFI147:
 4458               		.cfi_def_cfa_offset 6
 4459 0020 0E94 0000 		call __xprintf
 4460               	.LVL294:
 4461 0024 0F90      		pop __tmp_reg__
 4462 0026 0F90      		pop __tmp_reg__
 4463 0028 0F90      		pop __tmp_reg__
 4464 002a 0F90      		pop __tmp_reg__
 4465               	.LCFI148:
 4466               		.cfi_def_cfa_offset 2
 4467               	.L265:
 369:quantum/rgblight.c **** }
 4468               		.loc 1 369 3 view .LVU1000
 369:quantum/rgblight.c **** }
 4469               		.loc 1 369 41 is_stmt 0 view .LVU1001
 4470 002c 8091 0000 		lds r24,rgblight_config
 369:quantum/rgblight.c **** }
 4471               		.loc 1 369 3 view .LVU1002
 4472 0030 8695      		lsr r24
 4473 0032 0C94 0000 		jmp rgblight_mode_noeeprom
 4474               	.LVL295:
 4475               		.cfi_endproc
 4476               	.LFE108:
 4478               		.section	.text.rgblight_update_dword,"ax",@progbits
 4479               	.global	rgblight_update_dword
 4481               	rgblight_update_dword:
 4482               	.LVL296:
 4483               	.LFB92:
 231:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 4484               		.loc 1 231 44 is_stmt 1 view -0
 4485               		.cfi_startproc
 4486               	/* prologue: function */
 4487               	/* frame size = 0 */
 4488               	/* stack size = 0 */
 4489               	.L__stack_usage = 0
 232:quantum/rgblight.c ****   rgblight_config.raw = dword;
 4490               		.loc 1 232 37 view .LVU1004
 233:quantum/rgblight.c ****   if (rgblight_config.enable)
 4491               		.loc 1 233 3 view .LVU1005
 233:quantum/rgblight.c ****   if (rgblight_config.enable)
 4492               		.loc 1 233 23 is_stmt 0 view .LVU1006
 4493 0000 6093 0000 		sts rgblight_config,r22
 4494 0004 7093 0000 		sts rgblight_config+1,r23
 4495 0008 8093 0000 		sts rgblight_config+2,r24
 4496 000c 9093 0000 		sts rgblight_config+3,r25
 234:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 4497               		.loc 1 234 3 is_stmt 1 view .LVU1007
 234:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 4498               		.loc 1 234 6 is_stmt 0 view .LVU1008
 4499 0010 60FF      		sbrs r22,0
 4500 0012 00C0      		rjmp .L270
 235:quantum/rgblight.c ****   else {
 4501               		.loc 1 235 5 is_stmt 1 view .LVU1009
 4502 0014 862F      		mov r24,r22
 4503 0016 8695      		lsr r24
 4504 0018 0C94 0000 		jmp rgblight_mode_noeeprom
 4505               	.LVL297:
 4506               	.L270:
 238:quantum/rgblight.c **** #endif
 4507               		.loc 1 238 7 view .LVU1010
 4508 001c 0E94 0000 		call rgblight_timer_disable
 4509               	.LVL298:
 240:quantum/rgblight.c ****   }
 4510               		.loc 1 240 7 view .LVU1011
 4511 0020 0C94 0000 		jmp rgblight_set
 4512               	.LVL299:
 4513               		.cfi_endproc
 4514               	.LFE92:
 4516               		.section	.text.rgblight_disable,"ax",@progbits
 4517               	.global	rgblight_disable
 4519               	rgblight_disable:
 4520               	.LFB109:
 372:quantum/rgblight.c ****   rgblight_config.enable = 0;
 4521               		.loc 1 372 29 view -0
 4522               		.cfi_startproc
 4523               	/* prologue: function */
 4524               	/* frame size = 0 */
 4525               	/* stack size = 0 */
 4526               	.L__stack_usage = 0
 373:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 4527               		.loc 1 373 3 view .LVU1013
 373:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 4528               		.loc 1 373 26 is_stmt 0 view .LVU1014
 4529 0000 8091 0000 		lds r24,rgblight_config
 4530 0004 8E7F      		andi r24,lo8(~(1<<0))
 4531 0006 8093 0000 		sts rgblight_config,r24
 374:quantum/rgblight.c ****   dprintf("rgblight disable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 4532               		.loc 1 374 3 is_stmt 1 view .LVU1015
 4533 000a 6091 0000 		lds r22,rgblight_config
 4534 000e 7091 0000 		lds r23,rgblight_config+1
 4535 0012 8091 0000 		lds r24,rgblight_config+2
 4536 0016 9091 0000 		lds r25,rgblight_config+3
 4537 001a 0E94 0000 		call eeconfig_update_rgblight
 4538               	.LVL300:
 375:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 4539               		.loc 1 375 3 view .LVU1016
 375:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 4540               		.loc 1 375 3 view .LVU1017
 4541 001e 8091 0000 		lds r24,debug_config
 4542 0022 80FF      		sbrs r24,0
 4543 0024 00C0      		rjmp .L272
 375:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 4544               		.loc 1 375 3 discriminator 1 view .LVU1018
 4545               	.LBB180:
 375:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 4546               		.loc 1 375 3 discriminator 1 view .LVU1019
 375:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 4547               		.loc 1 375 3 discriminator 1 view .LVU1020
 4548               	.LBE180:
 4549 0026 8091 0000 		lds r24,rgblight_config
 4550 002a 8170      		andi r24,1
 4551 002c 1F92      		push __zero_reg__
 4552               	.LCFI149:
 4553               		.cfi_def_cfa_offset 3
 4554 002e 8F93      		push r24
 4555               	.LCFI150:
 4556               		.cfi_def_cfa_offset 4
 4557 0030 80E0      		ldi r24,lo8(__c.2994)
 4558 0032 90E0      		ldi r25,hi8(__c.2994)
 4559 0034 9F93      		push r25
 4560               	.LCFI151:
 4561               		.cfi_def_cfa_offset 5
 4562 0036 8F93      		push r24
 4563               	.LCFI152:
 4564               		.cfi_def_cfa_offset 6
 4565 0038 0E94 0000 		call __xprintf
 4566               	.LVL301:
 4567 003c 0F90      		pop __tmp_reg__
 4568 003e 0F90      		pop __tmp_reg__
 4569 0040 0F90      		pop __tmp_reg__
 4570 0042 0F90      		pop __tmp_reg__
 4571               	.LCFI153:
 4572               		.cfi_def_cfa_offset 2
 4573               	.L272:
 377:quantum/rgblight.c **** #endif
 4574               		.loc 1 377 7 view .LVU1021
 4575 0044 0E94 0000 		call rgblight_timer_disable
 4576               	.LVL302:
 379:quantum/rgblight.c ****   wait_ms(50);
 4577               		.loc 1 379 33 view .LVU1022
 380:quantum/rgblight.c ****   rgblight_set();
 4578               		.loc 1 380 3 view .LVU1023
 4579               	.LBB181:
 4580               	.LBI181:
 166:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** {
 4581               		.loc 3 166 1 view .LVU1024
 4582               	.LBB182:
 168:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 4583               		.loc 3 168 2 view .LVU1025
 172:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 4584               		.loc 3 172 2 view .LVU1026
 173:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 4585               		.loc 3 173 2 view .LVU1027
 174:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 4586               		.loc 3 174 2 view .LVU1028
 184:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	#endif
 4587               		.loc 3 184 3 view .LVU1029
 4588               		.loc 3 187 2 view .LVU1030
 4589 0048 2FEF      		ldi r18,lo8(159999)
 4590 004a 80E7      		ldi r24,hi8(159999)
 4591 004c 92E0      		ldi r25,hlo8(159999)
 4592 004e 2150      	1:	subi r18,1
 4593 0050 8040      		sbci r24,0
 4594 0052 9040      		sbci r25,0
 4595 0054 01F4      		brne 1b
 4596 0056 00C0      		rjmp .
 4597 0058 0000      		nop
 4598               	.LVL303:
 4599               		.loc 3 187 2 is_stmt 0 view .LVU1031
 4600               	.LBE182:
 4601               	.LBE181:
 381:quantum/rgblight.c **** }
 4602               		.loc 1 381 3 is_stmt 1 view .LVU1032
 4603 005a 0C94 0000 		jmp rgblight_set
 4604               	.LVL304:
 4605               		.cfi_endproc
 4606               	.LFE109:
 4608               		.section	.text.rgblight_toggle,"ax",@progbits
 4609               	.global	rgblight_toggle
 4611               	rgblight_toggle:
 4612               	.LFB105:
 338:quantum/rgblight.c ****   dprintf("rgblight toggle [EEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 4613               		.loc 1 338 28 view -0
 4614               		.cfi_startproc
 4615               	/* prologue: function */
 4616               	/* frame size = 0 */
 4617               	/* stack size = 0 */
 4618               	.L__stack_usage = 0
 339:quantum/rgblight.c ****   if (rgblight_config.enable) {
 4619               		.loc 1 339 3 view .LVU1034
 339:quantum/rgblight.c ****   if (rgblight_config.enable) {
 4620               		.loc 1 339 3 view .LVU1035
 4621 0000 8091 0000 		lds r24,debug_config
 4622 0004 80FF      		sbrs r24,0
 4623 0006 00C0      		rjmp .L277
 339:quantum/rgblight.c ****   if (rgblight_config.enable) {
 4624               		.loc 1 339 3 discriminator 1 view .LVU1036
 4625               	.LBB183:
 339:quantum/rgblight.c ****   if (rgblight_config.enable) {
 4626               		.loc 1 339 3 discriminator 1 view .LVU1037
 339:quantum/rgblight.c ****   if (rgblight_config.enable) {
 4627               		.loc 1 339 3 discriminator 1 view .LVU1038
 4628               	.LBE183:
 4629 0008 8091 0000 		lds r24,rgblight_config
 4630 000c 8095      		com r24
 4631 000e 8170      		andi r24,lo8(1)
 4632 0010 1F92      		push __zero_reg__
 4633               	.LCFI154:
 4634               		.cfi_def_cfa_offset 3
 4635 0012 8F93      		push r24
 4636               	.LCFI155:
 4637               		.cfi_def_cfa_offset 4
 4638 0014 80E0      		ldi r24,lo8(__c.2974)
 4639 0016 90E0      		ldi r25,hi8(__c.2974)
 4640 0018 9F93      		push r25
 4641               	.LCFI156:
 4642               		.cfi_def_cfa_offset 5
 4643 001a 8F93      		push r24
 4644               	.LCFI157:
 4645               		.cfi_def_cfa_offset 6
 4646 001c 0E94 0000 		call __xprintf
 4647               	.LVL305:
 4648 0020 0F90      		pop __tmp_reg__
 4649 0022 0F90      		pop __tmp_reg__
 4650 0024 0F90      		pop __tmp_reg__
 4651 0026 0F90      		pop __tmp_reg__
 4652               	.LCFI158:
 4653               		.cfi_def_cfa_offset 2
 4654               	.L277:
 340:quantum/rgblight.c ****     rgblight_disable();
 4655               		.loc 1 340 3 view .LVU1039
 340:quantum/rgblight.c ****     rgblight_disable();
 4656               		.loc 1 340 7 is_stmt 0 view .LVU1040
 4657 0028 8091 0000 		lds r24,rgblight_config
 340:quantum/rgblight.c ****     rgblight_disable();
 4658               		.loc 1 340 6 view .LVU1041
 4659 002c 80FD      		sbrc r24,0
 341:quantum/rgblight.c ****   }
 4660               		.loc 1 341 5 is_stmt 1 view .LVU1042
 4661 002e 0C94 0000 		jmp rgblight_disable
 4662               	.LVL306:
 4663               	.L278:
 344:quantum/rgblight.c ****   }
 4664               		.loc 1 344 5 view .LVU1043
 4665 0032 0C94 0000 		jmp rgblight_enable
 4666               	.LVL307:
 4667               		.cfi_endproc
 4668               	.LFE105:
 4670               		.section	.text.rgblight_disable_noeeprom,"ax",@progbits
 4671               	.global	rgblight_disable_noeeprom
 4673               	rgblight_disable_noeeprom:
 4674               	.LFB110:
 384:quantum/rgblight.c ****   rgblight_config.enable = 0;
 4675               		.loc 1 384 38 view -0
 4676               		.cfi_startproc
 4677               	/* prologue: function */
 4678               	/* frame size = 0 */
 4679               	/* stack size = 0 */
 4680               	.L__stack_usage = 0
 385:quantum/rgblight.c ****   dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 4681               		.loc 1 385 3 view .LVU1045
 385:quantum/rgblight.c ****   dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 4682               		.loc 1 385 26 is_stmt 0 view .LVU1046
 4683 0000 8091 0000 		lds r24,rgblight_config
 4684 0004 8E7F      		andi r24,lo8(~(1<<0))
 4685 0006 8093 0000 		sts rgblight_config,r24
 386:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 4686               		.loc 1 386 3 is_stmt 1 view .LVU1047
 386:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 4687               		.loc 1 386 3 view .LVU1048
 4688 000a 8091 0000 		lds r24,debug_config
 4689 000e 80FF      		sbrs r24,0
 4690 0010 00C0      		rjmp .L283
 386:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 4691               		.loc 1 386 3 discriminator 1 view .LVU1049
 4692               	.LBB184:
 386:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 4693               		.loc 1 386 3 discriminator 1 view .LVU1050
 386:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 4694               		.loc 1 386 3 discriminator 1 view .LVU1051
 4695               	.LBE184:
 4696 0012 1F92      		push __zero_reg__
 4697               	.LCFI159:
 4698               		.cfi_def_cfa_offset 3
 4699 0014 1F92      		push __zero_reg__
 4700               	.LCFI160:
 4701               		.cfi_def_cfa_offset 4
 4702 0016 80E0      		ldi r24,lo8(__c.2999)
 4703 0018 90E0      		ldi r25,hi8(__c.2999)
 4704 001a 9F93      		push r25
 4705               	.LCFI161:
 4706               		.cfi_def_cfa_offset 5
 4707 001c 8F93      		push r24
 4708               	.LCFI162:
 4709               		.cfi_def_cfa_offset 6
 4710 001e 0E94 0000 		call __xprintf
 4711               	.LVL308:
 4712 0022 0F90      		pop __tmp_reg__
 4713 0024 0F90      		pop __tmp_reg__
 4714 0026 0F90      		pop __tmp_reg__
 4715 0028 0F90      		pop __tmp_reg__
 4716               	.LCFI163:
 4717               		.cfi_def_cfa_offset 2
 4718               	.L283:
 388:quantum/rgblight.c **** #endif
 4719               		.loc 1 388 5 view .LVU1052
 4720 002a 0E94 0000 		call rgblight_timer_disable
 4721               	.LVL309:
 390:quantum/rgblight.c ****   wait_ms(50);
 4722               		.loc 1 390 33 view .LVU1053
 391:quantum/rgblight.c ****   rgblight_set();
 4723               		.loc 1 391 3 view .LVU1054
 4724               	.LBB185:
 4725               	.LBI185:
 166:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** {
 4726               		.loc 3 166 1 view .LVU1055
 4727               	.LBB186:
 168:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 4728               		.loc 3 168 2 view .LVU1056
 172:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 4729               		.loc 3 172 2 view .LVU1057
 173:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 4730               		.loc 3 173 2 view .LVU1058
 174:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 4731               		.loc 3 174 2 view .LVU1059
 184:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	#endif
 4732               		.loc 3 184 3 view .LVU1060
 4733               		.loc 3 187 2 view .LVU1061
 4734 002e 2FEF      		ldi r18,lo8(159999)
 4735 0030 80E7      		ldi r24,hi8(159999)
 4736 0032 92E0      		ldi r25,hlo8(159999)
 4737 0034 2150      	1:	subi r18,1
 4738 0036 8040      		sbci r24,0
 4739 0038 9040      		sbci r25,0
 4740 003a 01F4      		brne 1b
 4741 003c 00C0      		rjmp .
 4742 003e 0000      		nop
 4743               	.LVL310:
 4744               		.loc 3 187 2 is_stmt 0 view .LVU1062
 4745               	.LBE186:
 4746               	.LBE185:
 392:quantum/rgblight.c **** }
 4747               		.loc 1 392 3 is_stmt 1 view .LVU1063
 4748 0040 0C94 0000 		jmp rgblight_set
 4749               	.LVL311:
 4750               		.cfi_endproc
 4751               	.LFE110:
 4753               		.section	.text.rgblight_toggle_noeeprom,"ax",@progbits
 4754               	.global	rgblight_toggle_noeeprom
 4756               	rgblight_toggle_noeeprom:
 4757               	.LFB106:
 348:quantum/rgblight.c ****   dprintf("rgblight toggle [NOEEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 4758               		.loc 1 348 37 view -0
 4759               		.cfi_startproc
 4760               	/* prologue: function */
 4761               	/* frame size = 0 */
 4762               	/* stack size = 0 */
 4763               	.L__stack_usage = 0
 349:quantum/rgblight.c ****   if (rgblight_config.enable) {
 4764               		.loc 1 349 3 view .LVU1065
 349:quantum/rgblight.c ****   if (rgblight_config.enable) {
 4765               		.loc 1 349 3 view .LVU1066
 4766 0000 8091 0000 		lds r24,debug_config
 4767 0004 80FF      		sbrs r24,0
 4768 0006 00C0      		rjmp .L288
 349:quantum/rgblight.c ****   if (rgblight_config.enable) {
 4769               		.loc 1 349 3 discriminator 1 view .LVU1067
 4770               	.LBB187:
 349:quantum/rgblight.c ****   if (rgblight_config.enable) {
 4771               		.loc 1 349 3 discriminator 1 view .LVU1068
 349:quantum/rgblight.c ****   if (rgblight_config.enable) {
 4772               		.loc 1 349 3 discriminator 1 view .LVU1069
 4773               	.LBE187:
 4774 0008 8091 0000 		lds r24,rgblight_config
 4775 000c 8095      		com r24
 4776 000e 8170      		andi r24,lo8(1)
 4777 0010 1F92      		push __zero_reg__
 4778               	.LCFI164:
 4779               		.cfi_def_cfa_offset 3
 4780 0012 8F93      		push r24
 4781               	.LCFI165:
 4782               		.cfi_def_cfa_offset 4
 4783 0014 80E0      		ldi r24,lo8(__c.2979)
 4784 0016 90E0      		ldi r25,hi8(__c.2979)
 4785 0018 9F93      		push r25
 4786               	.LCFI166:
 4787               		.cfi_def_cfa_offset 5
 4788 001a 8F93      		push r24
 4789               	.LCFI167:
 4790               		.cfi_def_cfa_offset 6
 4791 001c 0E94 0000 		call __xprintf
 4792               	.LVL312:
 4793 0020 0F90      		pop __tmp_reg__
 4794 0022 0F90      		pop __tmp_reg__
 4795 0024 0F90      		pop __tmp_reg__
 4796 0026 0F90      		pop __tmp_reg__
 4797               	.LCFI168:
 4798               		.cfi_def_cfa_offset 2
 4799               	.L288:
 350:quantum/rgblight.c ****     rgblight_disable_noeeprom();
 4800               		.loc 1 350 3 view .LVU1070
 350:quantum/rgblight.c ****     rgblight_disable_noeeprom();
 4801               		.loc 1 350 7 is_stmt 0 view .LVU1071
 4802 0028 8091 0000 		lds r24,rgblight_config
 350:quantum/rgblight.c ****     rgblight_disable_noeeprom();
 4803               		.loc 1 350 6 view .LVU1072
 4804 002c 80FD      		sbrc r24,0
 351:quantum/rgblight.c ****   }
 4805               		.loc 1 351 5 is_stmt 1 view .LVU1073
 4806 002e 0C94 0000 		jmp rgblight_disable_noeeprom
 4807               	.LVL313:
 4808               	.L289:
 354:quantum/rgblight.c ****   }
 4809               		.loc 1 354 5 view .LVU1074
 4810 0032 0C94 0000 		jmp rgblight_enable_noeeprom
 4811               	.LVL314:
 4812               		.cfi_endproc
 4813               	.LFE106:
 4815               		.section	.text.rgblight_timer_toggle,"ax",@progbits
 4816               	.global	rgblight_timer_toggle
 4818               	rgblight_timer_toggle:
 4819               	.LFB152:
 763:quantum/rgblight.c ****   dprintf("rgblight timer toggle.\n");
 4820               		.loc 1 763 34 view -0
 4821               		.cfi_startproc
 4822               	/* prologue: function */
 4823               	/* frame size = 0 */
 4824               	/* stack size = 0 */
 4825               	.L__stack_usage = 0
 764:quantum/rgblight.c ****   if(rgblight_status.timer_enabled) {
 4826               		.loc 1 764 3 view .LVU1076
 764:quantum/rgblight.c ****   if(rgblight_status.timer_enabled) {
 4827               		.loc 1 764 3 view .LVU1077
 4828 0000 8091 0000 		lds r24,debug_config
 4829 0004 80FF      		sbrs r24,0
 4830 0006 00C0      		rjmp .L294
 764:quantum/rgblight.c ****   if(rgblight_status.timer_enabled) {
 4831               		.loc 1 764 3 discriminator 1 view .LVU1078
 4832               	.LBB188:
 764:quantum/rgblight.c ****   if(rgblight_status.timer_enabled) {
 4833               		.loc 1 764 3 discriminator 1 view .LVU1079
 764:quantum/rgblight.c ****   if(rgblight_status.timer_enabled) {
 4834               		.loc 1 764 3 discriminator 1 view .LVU1080
 4835               	.LBE188:
 4836 0008 80E0      		ldi r24,lo8(__c.3212)
 4837 000a 90E0      		ldi r25,hi8(__c.3212)
 4838 000c 9F93      		push r25
 4839               	.LCFI169:
 4840               		.cfi_def_cfa_offset 3
 4841 000e 8F93      		push r24
 4842               	.LCFI170:
 4843               		.cfi_def_cfa_offset 4
 4844 0010 0E94 0000 		call __xprintf
 4845               	.LVL315:
 4846 0014 0F90      		pop __tmp_reg__
 4847 0016 0F90      		pop __tmp_reg__
 4848               	.LCFI171:
 4849               		.cfi_def_cfa_offset 2
 4850               	.L294:
 765:quantum/rgblight.c ****       rgblight_timer_disable();
 4851               		.loc 1 765 3 view .LVU1081
 765:quantum/rgblight.c ****       rgblight_timer_disable();
 4852               		.loc 1 765 5 is_stmt 0 view .LVU1082
 4853 0018 8091 0000 		lds r24,rgblight_status+1
 4854 001c 8111      		cpse r24,__zero_reg__
 766:quantum/rgblight.c ****   } else {
 4855               		.loc 1 766 7 is_stmt 1 view .LVU1083
 4856 001e 0C94 0000 		jmp rgblight_timer_disable
 4857               	.LVL316:
 4858               	.L295:
 768:quantum/rgblight.c ****   }
 4859               		.loc 1 768 7 view .LVU1084
 4860 0022 0C94 0000 		jmp rgblight_timer_enable
 4861               	.LVL317:
 4862               		.cfi_endproc
 4863               	.LFE152:
 4865               		.section	.text.rgblight_show_solid_color,"ax",@progbits
 4866               	.global	rgblight_show_solid_color
 4868               	rgblight_show_solid_color:
 4869               	.LVL318:
 4870               	.LFB153:
 772:quantum/rgblight.c ****   rgblight_enable();
 4871               		.loc 1 772 65 view -0
 4872               		.cfi_startproc
 772:quantum/rgblight.c ****   rgblight_enable();
 4873               		.loc 1 772 65 is_stmt 0 view .LVU1086
 4874 0000 1F93      		push r17
 4875               	.LCFI172:
 4876               		.cfi_def_cfa_offset 3
 4877               		.cfi_offset 17, -2
 4878 0002 CF93      		push r28
 4879               	.LCFI173:
 4880               		.cfi_def_cfa_offset 4
 4881               		.cfi_offset 28, -3
 4882 0004 DF93      		push r29
 4883               	.LCFI174:
 4884               		.cfi_def_cfa_offset 5
 4885               		.cfi_offset 29, -4
 4886               	/* prologue: function */
 4887               	/* frame size = 0 */
 4888               	/* stack size = 3 */
 4889               	.L__stack_usage = 3
 4890 0006 C82F      		mov r28,r24
 4891 0008 D62F      		mov r29,r22
 4892 000a 142F      		mov r17,r20
 773:quantum/rgblight.c ****   rgblight_mode(RGBLIGHT_MODE_STATIC_LIGHT);
 4893               		.loc 1 773 3 is_stmt 1 view .LVU1087
 4894 000c 0E94 0000 		call rgblight_enable
 4895               	.LVL319:
 774:quantum/rgblight.c ****   rgblight_setrgb(r, g, b);
 4896               		.loc 1 774 3 view .LVU1088
 4897 0010 81E0      		ldi r24,lo8(1)
 4898 0012 0E94 0000 		call rgblight_mode
 4899               	.LVL320:
 775:quantum/rgblight.c **** }
 4900               		.loc 1 775 3 view .LVU1089
 4901 0016 412F      		mov r20,r17
 4902 0018 6D2F      		mov r22,r29
 4903 001a 8C2F      		mov r24,r28
 4904               	/* epilogue start */
 776:quantum/rgblight.c **** 
 4905               		.loc 1 776 1 is_stmt 0 view .LVU1090
 4906 001c DF91      		pop r29
 4907               	.LVL321:
 776:quantum/rgblight.c **** 
 4908               		.loc 1 776 1 view .LVU1091
 4909 001e CF91      		pop r28
 4910               	.LVL322:
 776:quantum/rgblight.c **** 
 4911               		.loc 1 776 1 view .LVU1092
 4912 0020 1F91      		pop r17
 4913               	.LVL323:
 775:quantum/rgblight.c **** }
 4914               		.loc 1 775 3 view .LVU1093
 4915 0022 0C94 0000 		jmp rgblight_setrgb
 4916               	.LVL324:
 775:quantum/rgblight.c **** }
 4917               		.loc 1 775 3 view .LVU1094
 4918               		.cfi_endproc
 4919               	.LFE153:
 4921               		.section	.text.rgblight_task,"ax",@progbits
 4922               	.global	rgblight_task
 4924               	rgblight_task:
 4925               	.LFB155:
 790:quantum/rgblight.c ****   if (rgblight_status.timer_enabled) {
 4926               		.loc 1 790 26 is_stmt 1 view -0
 4927               		.cfi_startproc
 4928 0000 0F93      		push r16
 4929               	.LCFI175:
 4930               		.cfi_def_cfa_offset 3
 4931               		.cfi_offset 16, -2
 4932 0002 1F93      		push r17
 4933               	.LCFI176:
 4934               		.cfi_def_cfa_offset 4
 4935               		.cfi_offset 17, -3
 4936 0004 CF93      		push r28
 4937               	.LCFI177:
 4938               		.cfi_def_cfa_offset 5
 4939               		.cfi_offset 28, -4
 4940 0006 DF93      		push r29
 4941               	.LCFI178:
 4942               		.cfi_def_cfa_offset 6
 4943               		.cfi_offset 29, -5
 4944               	/* prologue: function */
 4945               	/* frame size = 0 */
 4946               	/* stack size = 4 */
 4947               	.L__stack_usage = 4
 791:quantum/rgblight.c ****     effect_func_t effect_func = rgblight_effect_dummy;
 4948               		.loc 1 791 3 view .LVU1096
 791:quantum/rgblight.c ****     effect_func_t effect_func = rgblight_effect_dummy;
 4949               		.loc 1 791 6 is_stmt 0 view .LVU1097
 4950 0008 8091 0000 		lds r24,rgblight_status+1
 4951 000c 8823      		tst r24
 4952 000e 01F4      		brne .+2
 4953 0010 00C0      		rjmp .L300
 4954               	.LBB206:
 792:quantum/rgblight.c ****     uint16_t interval_time = 2000; // dummy interval
 4955               		.loc 1 792 5 is_stmt 1 view .LVU1098
 4956               	.LVL325:
 793:quantum/rgblight.c ****     uint8_t delta = rgblight_config.mode - rgblight_status.base_mode;
 4957               		.loc 1 793 5 view .LVU1099
 794:quantum/rgblight.c ****     animation_status.delta = delta;
 4958               		.loc 1 794 5 view .LVU1100
 794:quantum/rgblight.c ****     animation_status.delta = delta;
 4959               		.loc 1 794 59 is_stmt 0 view .LVU1101
 4960 0012 8091 0000 		lds r24,rgblight_status
 794:quantum/rgblight.c ****     animation_status.delta = delta;
 4961               		.loc 1 794 36 view .LVU1102
 4962 0016 E091 0000 		lds r30,rgblight_config
 4963 001a E695      		lsr r30
 794:quantum/rgblight.c ****     animation_status.delta = delta;
 4964               		.loc 1 794 13 view .LVU1103
 4965 001c E81B      		sub r30,r24
 4966               	.LVL326:
 795:quantum/rgblight.c **** 
 4967               		.loc 1 795 5 is_stmt 1 view .LVU1104
 795:quantum/rgblight.c **** 
 4968               		.loc 1 795 28 is_stmt 0 view .LVU1105
 4969 001e E093 0000 		sts animation_status+2,r30
 798:quantum/rgblight.c ****     }
 4970               		.loc 1 798 5 is_stmt 1 view .LVU1106
 801:quantum/rgblight.c ****       // breathing mode
 4971               		.loc 1 801 10 view .LVU1107
 801:quantum/rgblight.c ****       // breathing mode
 4972               		.loc 1 801 13 is_stmt 0 view .LVU1108
 4973 0022 8230      		cpi r24,lo8(2)
 4974 0024 01F4      		brne .L303
 803:quantum/rgblight.c ****       effect_func = rgblight_effect_breathing;
 4975               		.loc 1 803 7 is_stmt 1 view .LVU1109
 4976               	.LVL327:
 4977               	.LBB207:
 4978               	.LBI207:
 602:quantum/rgblight.c ****   return
 4979               		.loc 1 602 16 view .LVU1110
 602:quantum/rgblight.c ****   return
 4980               		.loc 1 602 16 is_stmt 0 view .LVU1111
 4981               	.LBE207:
 4982               	.LBE206:
 603:quantum/rgblight.c **** #ifdef VELOCIKEY_ENABLE
 4983               		.loc 1 603 3 is_stmt 1 view .LVU1112
 4984               	.LBB233:
 4985               	.LBB210:
 4986               	.LBB208:
 607:quantum/rgblight.c **** }
 4987               		.loc 1 607 5 view .LVU1113
 607:quantum/rgblight.c **** }
 4988               		.loc 1 607 5 view .LVU1114
 607:quantum/rgblight.c **** }
 4989               		.loc 1 607 5 view .LVU1115
 4990               	.LBE208:
 4991               	.LBE210:
 803:quantum/rgblight.c ****       effect_func = rgblight_effect_breathing;
 4992               		.loc 1 803 23 is_stmt 0 view .LVU1116
 4993 0026 F0E0      		ldi r31,0
 4994 0028 E050      		subi r30,lo8(-(RGBLED_BREATHING_INTERVALS))
 4995 002a F040      		sbci r31,hi8(-(RGBLED_BREATHING_INTERVALS))
 4996               	.LVL328:
 4997               	.LBB211:
 4998               	.LBB209:
 607:quantum/rgblight.c **** }
 4999               		.loc 1 607 5 view .LVU1117
 5000               	/* #APP */
 5001               	 ;  607 "quantum/rgblight.c" 1
 5002 002c E491      		lpm r30, Z
 5003               		
 5004               	 ;  0 "" 2
 5005               	.LVL329:
 607:quantum/rgblight.c **** }
 5006               		.loc 1 607 5 is_stmt 1 view .LVU1118
 607:quantum/rgblight.c **** }
 5007               		.loc 1 607 5 is_stmt 0 view .LVU1119
 5008               	/* #NOAPP */
 5009               	.LBE209:
 5010               	.LBE211:
 803:quantum/rgblight.c ****       effect_func = rgblight_effect_breathing;
 5011               		.loc 1 803 21 view .LVU1120
 5012 002e CE2F      		mov r28,r30
 5013 0030 D0E0      		ldi r29,0
 5014               	.LVL330:
 804:quantum/rgblight.c ****     }
 5015               		.loc 1 804 7 is_stmt 1 view .LVU1121
 804:quantum/rgblight.c ****     }
 5016               		.loc 1 804 19 is_stmt 0 view .LVU1122
 5017 0032 00E0      		ldi r16,lo8(gs(rgblight_effect_breathing))
 5018 0034 10E0      		ldi r17,hi8(gs(rgblight_effect_breathing))
 5019               	.LVL331:
 5020               	.L304:
 855:quantum/rgblight.c ****       animation_status.restart = false;
 5021               		.loc 1 855 5 is_stmt 1 view .LVU1123
 855:quantum/rgblight.c ****       animation_status.restart = false;
 5022               		.loc 1 855 8 is_stmt 0 view .LVU1124
 5023 0036 8091 0000 		lds r24,animation_status+3
 5024 003a 8823      		tst r24
 5025 003c 01F0      		breq .L310
 856:quantum/rgblight.c ****       animation_status.last_timer = timer_read() - interval_time - 1;
 5026               		.loc 1 856 7 is_stmt 1 view .LVU1125
 856:quantum/rgblight.c ****       animation_status.last_timer = timer_read() - interval_time - 1;
 5027               		.loc 1 856 32 is_stmt 0 view .LVU1126
 5028 003e 1092 0000 		sts animation_status+3,__zero_reg__
 857:quantum/rgblight.c ****       animation_status.pos16 = 0; // restart signal to local each effect
 5029               		.loc 1 857 7 is_stmt 1 view .LVU1127
 857:quantum/rgblight.c ****       animation_status.pos16 = 0; // restart signal to local each effect
 5030               		.loc 1 857 37 is_stmt 0 view .LVU1128
 5031 0042 0E94 0000 		call timer_read
 5032               	.LVL332:
 857:quantum/rgblight.c ****       animation_status.pos16 = 0; // restart signal to local each effect
 5033               		.loc 1 857 66 view .LVU1129
 5034 0046 9E01      		movw r18,r28
 5035 0048 2095      		com r18
 5036 004a 3095      		com r19
 5037 004c 820F      		add r24,r18
 5038 004e 931F      		adc r25,r19
 857:quantum/rgblight.c ****       animation_status.pos16 = 0; // restart signal to local each effect
 5039               		.loc 1 857 35 view .LVU1130
 5040 0050 9093 0000 		sts animation_status+1,r25
 5041 0054 8093 0000 		sts animation_status,r24
 858:quantum/rgblight.c ****     }
 5042               		.loc 1 858 7 is_stmt 1 view .LVU1131
 858:quantum/rgblight.c ****     }
 5043               		.loc 1 858 30 is_stmt 0 view .LVU1132
 5044 0058 1092 0000 		sts animation_status+4+1,__zero_reg__
 5045 005c 1092 0000 		sts animation_status+4,__zero_reg__
 5046               	.L310:
 860:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5047               		.loc 1 860 5 is_stmt 1 view .LVU1133
 860:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5048               		.loc 1 860 9 is_stmt 0 view .LVU1134
 5049 0060 8091 0000 		lds r24,animation_status
 5050 0064 9091 0000 		lds r25,animation_status+1
 5051 0068 0E94 0000 		call timer_elapsed
 5052               	.LVL333:
 860:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5053               		.loc 1 860 8 view .LVU1135
 5054 006c 8C17      		cp r24,r28
 5055 006e 9D07      		cpc r25,r29
 5056 0070 00F4      		brsh .+2
 5057 0072 00C0      		rjmp .L300
 875:quantum/rgblight.c ****       effect_func(&animation_status);
 5058               		.loc 1 875 7 is_stmt 1 view .LVU1136
 875:quantum/rgblight.c ****       effect_func(&animation_status);
 5059               		.loc 1 875 35 is_stmt 0 view .LVU1137
 5060 0074 E091 0000 		lds r30,animation_status
 5061 0078 F091 0000 		lds r31,animation_status+1
 5062 007c CE0F      		add r28,r30
 5063 007e DF1F      		adc r29,r31
 5064               	.LVL334:
 875:quantum/rgblight.c ****       effect_func(&animation_status);
 5065               		.loc 1 875 35 view .LVU1138
 5066 0080 D093 0000 		sts animation_status+1,r29
 5067 0084 C093 0000 		sts animation_status,r28
 876:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5068               		.loc 1 876 7 is_stmt 1 view .LVU1139
 5069 0088 80E0      		ldi r24,lo8(animation_status)
 5070 008a 90E0      		ldi r25,hi8(animation_status)
 5071 008c F801      		movw r30,r16
 5072               	/* epilogue start */
 5073               	.LBE233:
 884:quantum/rgblight.c **** 
 5074               		.loc 1 884 1 is_stmt 0 view .LVU1140
 5075 008e DF91      		pop r29
 5076 0090 CF91      		pop r28
 5077 0092 1F91      		pop r17
 5078 0094 0F91      		pop r16
 5079               	.LVL335:
 5080               	.LBB234:
 876:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5081               		.loc 1 876 7 view .LVU1141
 5082 0096 0994      		ijmp
 5083               	.LVL336:
 5084               	.L303:
 808:quantum/rgblight.c ****       // rainbow mood mode
 5085               		.loc 1 808 10 is_stmt 1 view .LVU1142
 808:quantum/rgblight.c ****       // rainbow mood mode
 5086               		.loc 1 808 13 is_stmt 0 view .LVU1143
 5087 0098 8630      		cpi r24,lo8(6)
 5088 009a 01F4      		brne .L305
 810:quantum/rgblight.c ****       effect_func = rgblight_effect_rainbow_mood;
 5089               		.loc 1 810 7 is_stmt 1 view .LVU1144
 5090               	.LVL337:
 5091               	.LBB212:
 5092               	.LBI212:
 602:quantum/rgblight.c ****   return
 5093               		.loc 1 602 16 view .LVU1145
 602:quantum/rgblight.c ****   return
 5094               		.loc 1 602 16 is_stmt 0 view .LVU1146
 5095               	.LBE212:
 5096               	.LBE234:
 603:quantum/rgblight.c **** #ifdef VELOCIKEY_ENABLE
 5097               		.loc 1 603 3 is_stmt 1 view .LVU1147
 5098               	.LBB235:
 5099               	.LBB215:
 5100               	.LBB213:
 607:quantum/rgblight.c **** }
 5101               		.loc 1 607 5 view .LVU1148
 607:quantum/rgblight.c **** }
 5102               		.loc 1 607 5 view .LVU1149
 607:quantum/rgblight.c **** }
 5103               		.loc 1 607 5 view .LVU1150
 5104               	.LBE213:
 5105               	.LBE215:
 810:quantum/rgblight.c ****       effect_func = rgblight_effect_rainbow_mood;
 5106               		.loc 1 810 23 is_stmt 0 view .LVU1151
 5107 009c F0E0      		ldi r31,0
 5108 009e E050      		subi r30,lo8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 5109 00a0 F040      		sbci r31,hi8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 5110               	.LVL338:
 5111               	.LBB216:
 5112               	.LBB214:
 607:quantum/rgblight.c **** }
 5113               		.loc 1 607 5 view .LVU1152
 5114               	/* #APP */
 5115               	 ;  607 "quantum/rgblight.c" 1
 5116 00a2 E491      		lpm r30, Z
 5117               		
 5118               	 ;  0 "" 2
 5119               	.LVL339:
 607:quantum/rgblight.c **** }
 5120               		.loc 1 607 5 is_stmt 1 view .LVU1153
 607:quantum/rgblight.c **** }
 5121               		.loc 1 607 5 is_stmt 0 view .LVU1154
 5122               	/* #NOAPP */
 5123               	.LBE214:
 5124               	.LBE216:
 810:quantum/rgblight.c ****       effect_func = rgblight_effect_rainbow_mood;
 5125               		.loc 1 810 21 view .LVU1155
 5126 00a4 CE2F      		mov r28,r30
 5127 00a6 D0E0      		ldi r29,0
 5128               	.LVL340:
 811:quantum/rgblight.c ****     }
 5129               		.loc 1 811 7 is_stmt 1 view .LVU1156
 811:quantum/rgblight.c ****     }
 5130               		.loc 1 811 19 is_stmt 0 view .LVU1157
 5131 00a8 00E0      		ldi r16,lo8(gs(rgblight_effect_rainbow_mood))
 5132 00aa 10E0      		ldi r17,hi8(gs(rgblight_effect_rainbow_mood))
 5133 00ac 00C0      		rjmp .L304
 5134               	.LVL341:
 5135               	.L305:
 815:quantum/rgblight.c ****       // rainbow swirl mode
 5136               		.loc 1 815 10 is_stmt 1 view .LVU1158
 815:quantum/rgblight.c ****       // rainbow swirl mode
 5137               		.loc 1 815 13 is_stmt 0 view .LVU1159
 5138 00ae 8930      		cpi r24,lo8(9)
 5139 00b0 01F4      		brne .L306
 817:quantum/rgblight.c ****       effect_func = rgblight_effect_rainbow_swirl;
 5140               		.loc 1 817 7 is_stmt 1 view .LVU1160
 5141               	.LVL342:
 5142               	.LBB217:
 5143               	.LBI217:
 602:quantum/rgblight.c ****   return
 5144               		.loc 1 602 16 view .LVU1161
 602:quantum/rgblight.c ****   return
 5145               		.loc 1 602 16 is_stmt 0 view .LVU1162
 5146               	.LBE217:
 5147               	.LBE235:
 603:quantum/rgblight.c **** #ifdef VELOCIKEY_ENABLE
 5148               		.loc 1 603 3 is_stmt 1 view .LVU1163
 5149               	.LBB236:
 5150               	.LBB220:
 5151               	.LBB218:
 607:quantum/rgblight.c **** }
 5152               		.loc 1 607 5 view .LVU1164
 607:quantum/rgblight.c **** }
 5153               		.loc 1 607 5 view .LVU1165
 607:quantum/rgblight.c **** }
 5154               		.loc 1 607 5 view .LVU1166
 5155               	.LBE218:
 5156               	.LBE220:
 817:quantum/rgblight.c ****       effect_func = rgblight_effect_rainbow_swirl;
 5157               		.loc 1 817 79 is_stmt 0 view .LVU1167
 5158 00b2 E695      		lsr r30
 5159               	.LVL343:
 817:quantum/rgblight.c ****       effect_func = rgblight_effect_rainbow_swirl;
 5160               		.loc 1 817 23 view .LVU1168
 5161 00b4 F0E0      		ldi r31,0
 5162 00b6 E050      		subi r30,lo8(-(RGBLED_RAINBOW_SWIRL_INTERVALS))
 5163 00b8 F040      		sbci r31,hi8(-(RGBLED_RAINBOW_SWIRL_INTERVALS))
 5164               	.LBB221:
 5165               	.LBB219:
 607:quantum/rgblight.c **** }
 5166               		.loc 1 607 5 view .LVU1169
 5167               	/* #APP */
 5168               	 ;  607 "quantum/rgblight.c" 1
 5169 00ba E491      		lpm r30, Z
 5170               		
 5171               	 ;  0 "" 2
 5172               	.LVL344:
 607:quantum/rgblight.c **** }
 5173               		.loc 1 607 5 is_stmt 1 view .LVU1170
 607:quantum/rgblight.c **** }
 5174               		.loc 1 607 5 is_stmt 0 view .LVU1171
 5175               	/* #NOAPP */
 5176               	.LBE219:
 5177               	.LBE221:
 817:quantum/rgblight.c ****       effect_func = rgblight_effect_rainbow_swirl;
 5178               		.loc 1 817 21 view .LVU1172
 5179 00bc CE2F      		mov r28,r30
 5180 00be D0E0      		ldi r29,0
 5181               	.LVL345:
 818:quantum/rgblight.c ****     }
 5182               		.loc 1 818 7 is_stmt 1 view .LVU1173
 818:quantum/rgblight.c ****     }
 5183               		.loc 1 818 19 is_stmt 0 view .LVU1174
 5184 00c0 00E0      		ldi r16,lo8(gs(rgblight_effect_rainbow_swirl))
 5185 00c2 10E0      		ldi r17,hi8(gs(rgblight_effect_rainbow_swirl))
 5186 00c4 00C0      		rjmp .L304
 5187               	.LVL346:
 5188               	.L306:
 822:quantum/rgblight.c ****       // snake mode
 5189               		.loc 1 822 10 is_stmt 1 view .LVU1175
 822:quantum/rgblight.c ****       // snake mode
 5190               		.loc 1 822 13 is_stmt 0 view .LVU1176
 5191 00c6 8F30      		cpi r24,lo8(15)
 5192 00c8 01F4      		brne .L307
 824:quantum/rgblight.c ****       effect_func = rgblight_effect_snake;
 5193               		.loc 1 824 7 is_stmt 1 view .LVU1177
 5194               	.LVL347:
 5195               	.LBB222:
 5196               	.LBI222:
 602:quantum/rgblight.c ****   return
 5197               		.loc 1 602 16 view .LVU1178
 602:quantum/rgblight.c ****   return
 5198               		.loc 1 602 16 is_stmt 0 view .LVU1179
 5199               	.LBE222:
 5200               	.LBE236:
 603:quantum/rgblight.c **** #ifdef VELOCIKEY_ENABLE
 5201               		.loc 1 603 3 is_stmt 1 view .LVU1180
 5202               	.LBB237:
 5203               	.LBB225:
 5204               	.LBB223:
 607:quantum/rgblight.c **** }
 5205               		.loc 1 607 5 view .LVU1181
 607:quantum/rgblight.c **** }
 5206               		.loc 1 607 5 view .LVU1182
 607:quantum/rgblight.c **** }
 5207               		.loc 1 607 5 view .LVU1183
 5208               	.LBE223:
 5209               	.LBE225:
 824:quantum/rgblight.c ****       effect_func = rgblight_effect_snake;
 5210               		.loc 1 824 71 is_stmt 0 view .LVU1184
 5211 00ca E695      		lsr r30
 5212               	.LVL348:
 824:quantum/rgblight.c ****       effect_func = rgblight_effect_snake;
 5213               		.loc 1 824 23 view .LVU1185
 5214 00cc F0E0      		ldi r31,0
 5215 00ce E050      		subi r30,lo8(-(RGBLED_SNAKE_INTERVALS))
 5216 00d0 F040      		sbci r31,hi8(-(RGBLED_SNAKE_INTERVALS))
 5217               	.LBB226:
 5218               	.LBB224:
 607:quantum/rgblight.c **** }
 5219               		.loc 1 607 5 view .LVU1186
 5220               	/* #APP */
 5221               	 ;  607 "quantum/rgblight.c" 1
 5222 00d2 E491      		lpm r30, Z
 5223               		
 5224               	 ;  0 "" 2
 5225               	.LVL349:
 607:quantum/rgblight.c **** }
 5226               		.loc 1 607 5 is_stmt 1 view .LVU1187
 607:quantum/rgblight.c **** }
 5227               		.loc 1 607 5 is_stmt 0 view .LVU1188
 5228               	/* #NOAPP */
 5229               	.LBE224:
 5230               	.LBE226:
 824:quantum/rgblight.c ****       effect_func = rgblight_effect_snake;
 5231               		.loc 1 824 21 view .LVU1189
 5232 00d4 CE2F      		mov r28,r30
 5233 00d6 D0E0      		ldi r29,0
 5234               	.LVL350:
 825:quantum/rgblight.c ****     }
 5235               		.loc 1 825 7 is_stmt 1 view .LVU1190
 825:quantum/rgblight.c ****     }
 5236               		.loc 1 825 19 is_stmt 0 view .LVU1191
 5237 00d8 00E0      		ldi r16,lo8(gs(rgblight_effect_snake))
 5238 00da 10E0      		ldi r17,hi8(gs(rgblight_effect_snake))
 5239 00dc 00C0      		rjmp .L304
 5240               	.LVL351:
 5241               	.L307:
 829:quantum/rgblight.c ****       // knight mode
 5242               		.loc 1 829 10 is_stmt 1 view .LVU1192
 829:quantum/rgblight.c ****       // knight mode
 5243               		.loc 1 829 13 is_stmt 0 view .LVU1193
 5244 00de 8531      		cpi r24,lo8(21)
 5245 00e0 01F4      		brne .L308
 831:quantum/rgblight.c ****       effect_func = rgblight_effect_knight;
 5246               		.loc 1 831 7 is_stmt 1 view .LVU1194
 5247               	.LVL352:
 5248               	.LBB227:
 5249               	.LBI227:
 602:quantum/rgblight.c ****   return
 5250               		.loc 1 602 16 view .LVU1195
 602:quantum/rgblight.c ****   return
 5251               		.loc 1 602 16 is_stmt 0 view .LVU1196
 5252               	.LBE227:
 5253               	.LBE237:
 603:quantum/rgblight.c **** #ifdef VELOCIKEY_ENABLE
 5254               		.loc 1 603 3 is_stmt 1 view .LVU1197
 5255               	.LBB238:
 5256               	.LBB230:
 5257               	.LBB228:
 607:quantum/rgblight.c **** }
 5258               		.loc 1 607 5 view .LVU1198
 607:quantum/rgblight.c **** }
 5259               		.loc 1 607 5 view .LVU1199
 607:quantum/rgblight.c **** }
 5260               		.loc 1 607 5 view .LVU1200
 5261               	.LBE228:
 5262               	.LBE230:
 831:quantum/rgblight.c ****       effect_func = rgblight_effect_knight;
 5263               		.loc 1 831 23 is_stmt 0 view .LVU1201
 5264 00e2 F0E0      		ldi r31,0
 5265 00e4 E050      		subi r30,lo8(-(RGBLED_KNIGHT_INTERVALS))
 5266 00e6 F040      		sbci r31,hi8(-(RGBLED_KNIGHT_INTERVALS))
 5267               	.LVL353:
 5268               	.LBB231:
 5269               	.LBB229:
 607:quantum/rgblight.c **** }
 5270               		.loc 1 607 5 view .LVU1202
 5271               	/* #APP */
 5272               	 ;  607 "quantum/rgblight.c" 1
 5273 00e8 E491      		lpm r30, Z
 5274               		
 5275               	 ;  0 "" 2
 5276               	.LVL354:
 607:quantum/rgblight.c **** }
 5277               		.loc 1 607 5 is_stmt 1 view .LVU1203
 607:quantum/rgblight.c **** }
 5278               		.loc 1 607 5 is_stmt 0 view .LVU1204
 5279               	/* #NOAPP */
 5280               	.LBE229:
 5281               	.LBE231:
 831:quantum/rgblight.c ****       effect_func = rgblight_effect_knight;
 5282               		.loc 1 831 21 view .LVU1205
 5283 00ea CE2F      		mov r28,r30
 5284 00ec D0E0      		ldi r29,0
 5285               	.LVL355:
 832:quantum/rgblight.c ****     }
 5286               		.loc 1 832 7 is_stmt 1 view .LVU1206
 832:quantum/rgblight.c ****     }
 5287               		.loc 1 832 19 is_stmt 0 view .LVU1207
 5288 00ee 00E0      		ldi r16,lo8(gs(rgblight_effect_knight))
 5289 00f0 10E0      		ldi r17,hi8(gs(rgblight_effect_knight))
 5290 00f2 00C0      		rjmp .L304
 5291               	.LVL356:
 5292               	.L308:
 836:quantum/rgblight.c ****       // christmas mode
 5293               		.loc 1 836 10 is_stmt 1 view .LVU1208
 838:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_christmas;
 5294               		.loc 1 838 21 is_stmt 0 view .LVU1209
 5295 00f4 C8EE      		ldi r28,lo8(-24)
 5296 00f6 D3E0      		ldi r29,lo8(3)
 839:quantum/rgblight.c ****     }
 5297               		.loc 1 839 19 view .LVU1210
 5298 00f8 00E0      		ldi r16,lo8(gs(rgblight_effect_christmas))
 5299 00fa 10E0      		ldi r17,hi8(gs(rgblight_effect_christmas))
 836:quantum/rgblight.c ****       // christmas mode
 5300               		.loc 1 836 13 view .LVU1211
 5301 00fc 8831      		cpi r24,lo8(24)
 5302 00fe 01F4      		brne .+2
 5303 0100 00C0      		rjmp .L304
 843:quantum/rgblight.c ****       // RGB test mode
 5304               		.loc 1 843 10 is_stmt 1 view .LVU1212
 843:quantum/rgblight.c ****       // RGB test mode
 5305               		.loc 1 843 13 is_stmt 0 view .LVU1213
 5306 0102 8332      		cpi r24,lo8(35)
 5307 0104 01F4      		brne .L309
 845:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_rgbtest;
 5308               		.loc 1 845 7 is_stmt 1 view .LVU1214
 5309               	.LBB232:
 845:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_rgbtest;
 5310               		.loc 1 845 23 view .LVU1215
 5311               	.LVL357:
 845:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_rgbtest;
 5312               		.loc 1 845 23 view .LVU1216
 845:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_rgbtest;
 5313               		.loc 1 845 23 view .LVU1217
 5314 0106 E0E0      		ldi r30,lo8(RGBLED_RGBTEST_INTERVALS)
 5315 0108 F0E0      		ldi r31,hi8(RGBLED_RGBTEST_INTERVALS)
 5316               	.LVL358:
 845:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_rgbtest;
 5317               		.loc 1 845 23 is_stmt 0 view .LVU1218
 5318               	/* #APP */
 5319               	 ;  845 "quantum/rgblight.c" 1
 5320 010a C591      		lpm r28, Z+
 5321 010c D491      		lpm r29, Z
 5322               		
 5323               	 ;  0 "" 2
 5324               	.LVL359:
 845:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_rgbtest;
 5325               		.loc 1 845 23 is_stmt 1 view .LVU1219
 845:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_rgbtest;
 5326               		.loc 1 845 23 is_stmt 0 view .LVU1220
 5327               	/* #NOAPP */
 5328               	.LBE232:
 846:quantum/rgblight.c ****     }
 5329               		.loc 1 846 7 is_stmt 1 view .LVU1221
 846:quantum/rgblight.c ****     }
 5330               		.loc 1 846 19 is_stmt 0 view .LVU1222
 5331 010e 00E0      		ldi r16,lo8(gs(rgblight_effect_rgbtest))
 5332 0110 10E0      		ldi r17,hi8(gs(rgblight_effect_rgbtest))
 5333 0112 00C0      		rjmp .L304
 5334               	.LVL360:
 5335               	.L309:
 850:quantum/rgblight.c ****       interval_time = 500;
 5336               		.loc 1 850 10 is_stmt 1 view .LVU1223
 851:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_alternating;
 5337               		.loc 1 851 21 is_stmt 0 view .LVU1224
 5338 0114 C4EF      		ldi r28,lo8(-12)
 5339 0116 D1E0      		ldi r29,lo8(1)
 852:quantum/rgblight.c ****     }
 5340               		.loc 1 852 19 view .LVU1225
 5341 0118 00E0      		ldi r16,lo8(gs(rgblight_effect_alternating))
 5342 011a 10E0      		ldi r17,hi8(gs(rgblight_effect_alternating))
 850:quantum/rgblight.c ****       interval_time = 500;
 5343               		.loc 1 850 13 view .LVU1226
 5344 011c 8432      		cpi r24,lo8(36)
 5345 011e 01F4      		brne .+2
 5346 0120 00C0      		rjmp .L304
 793:quantum/rgblight.c ****     uint8_t delta = rgblight_config.mode - rgblight_status.base_mode;
 5347               		.loc 1 793 14 view .LVU1227
 5348 0122 C0ED      		ldi r28,lo8(-48)
 5349 0124 D7E0      		ldi r29,lo8(7)
 792:quantum/rgblight.c ****     uint16_t interval_time = 2000; // dummy interval
 5350               		.loc 1 792 19 view .LVU1228
 5351 0126 00E0      		ldi r16,lo8(gs(rgblight_effect_dummy))
 5352 0128 10E0      		ldi r17,hi8(gs(rgblight_effect_dummy))
 5353 012a 00C0      		rjmp .L304
 5354               	.LVL361:
 5355               	.L300:
 5356               	/* epilogue start */
 792:quantum/rgblight.c ****     uint16_t interval_time = 2000; // dummy interval
 5357               		.loc 1 792 19 view .LVU1229
 5358               	.LBE238:
 884:quantum/rgblight.c **** 
 5359               		.loc 1 884 1 view .LVU1230
 5360 012c DF91      		pop r29
 5361 012e CF91      		pop r28
 5362 0130 1F91      		pop r17
 5363 0132 0F91      		pop r16
 5364 0134 0895      		ret
 5365               		.cfi_endproc
 5366               	.LFE155:
 5368               		.section	.bss.maxval.3297,"aw",@nobits
 5371               	maxval.3297:
 5372 0000 00        		.zero	1
 5373               		.section	.data.increment.3276,"aw"
 5376               	increment.3276:
 5377 0000 01        		.byte	1
 5378               		.section	.data.high_bound.3275,"aw"
 5381               	high_bound.3275:
 5382 0000 02        		.byte	2
 5383               		.section	.bss.low_bound.3274,"aw",@nobits
 5386               	low_bound.3274:
 5387 0000 00        		.zero	1
 5388               		.section	.bss.pos.3258,"aw",@nobits
 5391               	pos.3258:
 5392 0000 00        		.zero	1
 5393               		.section	.progmem.data.__c.3212,"a"
 5396               	__c.3212:
 5397 0000 7267 626C 		.string	"rgblight timer toggle.\n"
 5397      6967 6874 
 5397      2074 696D 
 5397      6572 2074 
 5397      6F67 676C 
 5398               		.section	.progmem.data.__c.3207,"a"
 5401               	__c.3207:
 5402 0000 7267 626C 		.string	"rgblight timer disable.\n"
 5402      6967 6874 
 5402      2074 696D 
 5402      6572 2064 
 5402      6973 6162 
 5403               		.section	.progmem.data.__c.3202,"a"
 5406               	__c.3202:
 5407 0000 7267 626C 		.string	"rgblight timer enabled.\n"
 5407      6967 6874 
 5407      2074 696D 
 5407      6572 2065 
 5407      6E61 626C 
 5408               		.section	.progmem.data.__c.3095,"a"
 5411               	__c.3095:
 5412 0000 7267 626C 		.string	"rgblight set hsv [NOEEPROM]: %u,%u,%u\n"
 5412      6967 6874 
 5412      2073 6574 
 5412      2068 7376 
 5412      205B 4E4F 
 5413               		.section	.progmem.data.__c.3093,"a"
 5416               	__c.3093:
 5417 0000 7267 626C 		.string	"rgblight set hsv [EEPROM]: %u,%u,%u\n"
 5417      6967 6874 
 5417      2073 6574 
 5417      2068 7376 
 5417      205B 4545 
 5418               		.section	.progmem.data.__c.3088,"a"
 5421               	__c.3088:
 5422 0000 7267 626C 		.string	"rgblight rainbow set hsv: %d,%d,%d,%u\n"
 5422      6967 6874 
 5422      2072 6169 
 5422      6E62 6F77 
 5422      2073 6574 
 5423               		.section	.progmem.data.__c.2999,"a"
 5426               	__c.2999:
 5427 0000 7267 626C 		.string	"rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n"
 5427      6967 6874 
 5427      2064 6973 
 5427      6162 6C65 
 5427      205B 4E4F 
 5428               		.section	.progmem.data.__c.2994,"a"
 5431               	__c.2994:
 5432 0000 7267 626C 		.string	"rgblight disable [EEPROM]: rgblight_config.enable = %u\n"
 5432      6967 6874 
 5432      2064 6973 
 5432      6162 6C65 
 5432      205B 4545 
 5433               		.section	.progmem.data.__c.2989,"a"
 5436               	__c.2989:
 5437 0000 7267 626C 		.string	"rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n"
 5437      6967 6874 
 5437      2065 6E61 
 5437      626C 6520 
 5437      5B4E 4F45 
 5438               		.section	.progmem.data.__c.2984,"a"
 5441               	__c.2984:
 5442 0000 7267 626C 		.string	"rgblight enable [EEPROM]: rgblight_config.enable = %u\n"
 5442      6967 6874 
 5442      2065 6E61 
 5442      626C 6520 
 5442      5B45 4550 
 5443               		.section	.progmem.data.__c.2979,"a"
 5446               	__c.2979:
 5447 0000 7267 626C 		.string	"rgblight toggle [NOEEPROM]: rgblight_config.enable = %u\n"
 5447      6967 6874 
 5447      2074 6F67 
 5447      676C 6520 
 5447      5B4E 4F45 
 5448               		.section	.progmem.data.__c.2974,"a"
 5451               	__c.2974:
 5452 0000 7267 626C 		.string	"rgblight toggle [EEPROM]: rgblight_config.enable = %u\n"
 5452      6967 6874 
 5452      2074 6F67 
 5452      676C 6520 
 5452      5B45 4550 
 5453               		.section	.progmem.data.__c.2963,"a"
 5456               	__c.2963:
 5457 0000 7267 626C 		.string	"rgblight mode [NOEEPROM]: %u\n"
 5457      6967 6874 
 5457      206D 6F64 
 5457      6520 5B4E 
 5457      4F45 4550 
 5458               		.section	.progmem.data.__c.2961,"a"
 5461               	__c.2961:
 5462 0000 7267 626C 		.string	"rgblight mode [EEPROM]: %u\n"
 5462      6967 6874 
 5462      206D 6F64 
 5462      6520 5B45 
 5462      4550 524F 
 5463               		.section	.progmem.data.__c.2918,"a"
 5466               	__c.2918:
 5467 0000 7267 626C 		.string	"rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n"
 5467      6967 6874 
 5467      5F69 6E69 
 5467      7420 7267 
 5467      626C 6967 
 5468               		.section	.progmem.data.__c.2916,"a"
 5471               	__c.2916:
 5472 0000 7267 626C 		.string	"rgblight_init eeconfig is not enabled.\n"
 5472      6967 6874 
 5472      5F69 6E69 
 5472      7420 6565 
 5472      636F 6E66 
 5473               		.section	.progmem.data.__c.2914,"a"
 5476               	__c.2914:
 5477 0000 7267 626C 		.string	"rgblight_init start!\n"
 5477      6967 6874 
 5477      5F69 6E69 
 5477      7420 7374 
 5477      6172 7421 
 5478               		.section	.progmem.data.__c.2912,"a"
 5481               	__c.2912:
 5482 0000 7267 626C 		.string	"rgblight_init called.\n"
 5482      6967 6874 
 5482      5F69 6E69 
 5482      7420 6361 
 5482      6C6C 6564 
 5483               		.section	.progmem.data.__c.2907,"a"
 5486               	__c.2907:
 5487 0000 7267 626C 		.string	"rgblight_config.speed = %d\n"
 5487      6967 6874 
 5487      5F63 6F6E 
 5487      6669 672E 
 5487      7370 6565 
 5488               		.section	.progmem.data.__c.2905,"a"
 5491               	__c.2905:
 5492 0000 7267 626C 		.string	"rgblight_config.val = %d\n"
 5492      6967 6874 
 5492      5F63 6F6E 
 5492      6669 672E 
 5492      7661 6C20 
 5493               		.section	.progmem.data.__c.2903,"a"
 5496               	__c.2903:
 5497 0000 7267 626C 		.string	"rgblight_config.sat = %d\n"
 5497      6967 6874 
 5497      5F63 6F6E 
 5497      6669 672E 
 5497      7361 7420 
 5498               		.section	.progmem.data.__c.2901,"a"
 5501               	__c.2901:
 5502 0000 7267 626C 		.string	"rgblight_config.hue = %d\n"
 5502      6967 6874 
 5502      5F63 6F6E 
 5502      6669 672E 
 5502      6875 6520 
 5503               		.section	.progmem.data.__c.2899,"a"
 5506               	__c.2899:
 5507 0000 7267 686C 		.string	"rghlight_config.mode = %d\n"
 5507      6967 6874 
 5507      5F63 6F6E 
 5507      6669 672E 
 5507      6D6F 6465 
 5508               		.section	.progmem.data.__c.2897,"a"
 5511               	__c.2897:
 5512 0000 7267 626C 		.string	"rgblight_config.enable = %d\n"
 5512      6967 6874 
 5512      5F63 6F6E 
 5512      6669 672E 
 5512      656E 6162 
 5513               		.section	.progmem.data.__c.2895,"a"
 5516               	__c.2895:
 5517 0000 7267 626C 		.string	"rgblight_config EEPROM:\n"
 5517      6967 6874 
 5517      5F63 6F6E 
 5517      6669 6720 
 5517      4545 5052 
 5518               		.weak	RGBLED_RGBTEST_INTERVALS
 5519               		.section	.progmem.data.RGBLED_RGBTEST_INTERVALS,"a"
 5522               	RGBLED_RGBTEST_INTERVALS:
 5523 0000 0004      		.word	1024
 5524               		.weak	RGBLED_KNIGHT_INTERVALS
 5525               		.section	.progmem.data.RGBLED_KNIGHT_INTERVALS,"a"
 5528               	RGBLED_KNIGHT_INTERVALS:
 5529 0000 7F        		.byte	127
 5530 0001 3F        		.byte	63
 5531 0002 1F        		.byte	31
 5532               		.weak	RGBLED_SNAKE_INTERVALS
 5533               		.section	.progmem.data.RGBLED_SNAKE_INTERVALS,"a"
 5536               	RGBLED_SNAKE_INTERVALS:
 5537 0000 64        		.byte	100
 5538 0001 32        		.byte	50
 5539 0002 14        		.byte	20
 5540               		.weak	RGBLED_RAINBOW_SWIRL_INTERVALS
 5541               		.section	.progmem.data.RGBLED_RAINBOW_SWIRL_INTERVALS,"a"
 5544               	RGBLED_RAINBOW_SWIRL_INTERVALS:
 5545 0000 64        		.byte	100
 5546 0001 32        		.byte	50
 5547 0002 14        		.byte	20
 5548               		.weak	RGBLED_RAINBOW_MOOD_INTERVALS
 5549               		.section	.progmem.data.RGBLED_RAINBOW_MOOD_INTERVALS,"a"
 5552               	RGBLED_RAINBOW_MOOD_INTERVALS:
 5553 0000 78        		.byte	120
 5554 0001 3C        		.byte	60
 5555 0002 1E        		.byte	30
 5556               		.weak	RGBLED_BREATHING_INTERVALS
 5557               		.section	.progmem.data.RGBLED_BREATHING_INTERVALS,"a"
 5560               	RGBLED_BREATHING_INTERVALS:
 5561 0000 1E        		.byte	30
 5562 0001 14        		.byte	20
 5563 0002 0A        		.byte	10
 5564 0003 05        		.byte	5
 5565               	.global	rgblight_effect_breathe_table
 5566               		.section	.progmem.data.rgblight_effect_breathe_table,"a"
 5569               	rgblight_effect_breathe_table:
 5570 0000 22        		.byte	34
 5571 0001 23        		.byte	35
 5572 0002 25        		.byte	37
 5573 0003 26        		.byte	38
 5574 0004 28        		.byte	40
 5575 0005 29        		.byte	41
 5576 0006 2A        		.byte	42
 5577 0007 2C        		.byte	44
 5578 0008 2D        		.byte	45
 5579 0009 2F        		.byte	47
 5580 000a 30        		.byte	48
 5581 000b 32        		.byte	50
 5582 000c 33        		.byte	51
 5583 000d 35        		.byte	53
 5584 000e 36        		.byte	54
 5585 000f 38        		.byte	56
 5586 0010 3A        		.byte	58
 5587 0011 3B        		.byte	59
 5588 0012 3D        		.byte	61
 5589 0013 3E        		.byte	62
 5590 0014 40        		.byte	64
 5591 0015 42        		.byte	66
 5592 0016 43        		.byte	67
 5593 0017 45        		.byte	69
 5594 0018 47        		.byte	71
 5595 0019 49        		.byte	73
 5596 001a 4A        		.byte	74
 5597 001b 4C        		.byte	76
 5598 001c 4E        		.byte	78
 5599 001d 50        		.byte	80
 5600 001e 51        		.byte	81
 5601 001f 53        		.byte	83
 5602 0020 55        		.byte	85
 5603 0021 57        		.byte	87
 5604 0022 59        		.byte	89
 5605 0023 5A        		.byte	90
 5606 0024 5C        		.byte	92
 5607 0025 5E        		.byte	94
 5608 0026 60        		.byte	96
 5609 0027 62        		.byte	98
 5610 0028 64        		.byte	100
 5611 0029 66        		.byte	102
 5612 002a 68        		.byte	104
 5613 002b 69        		.byte	105
 5614 002c 6B        		.byte	107
 5615 002d 6D        		.byte	109
 5616 002e 6F        		.byte	111
 5617 002f 71        		.byte	113
 5618 0030 73        		.byte	115
 5619 0031 75        		.byte	117
 5620 0032 77        		.byte	119
 5621 0033 79        		.byte	121
 5622 0034 7B        		.byte	123
 5623 0035 7D        		.byte	125
 5624 0036 7F        		.byte	127
 5625 0037 81        		.byte	-127
 5626 0038 83        		.byte	-125
 5627 0039 85        		.byte	-123
 5628 003a 87        		.byte	-121
 5629 003b 89        		.byte	-119
 5630 003c 8A        		.byte	-118
 5631 003d 8C        		.byte	-116
 5632 003e 8E        		.byte	-114
 5633 003f 90        		.byte	-112
 5634 0040 92        		.byte	-110
 5635 0041 94        		.byte	-108
 5636 0042 96        		.byte	-106
 5637 0043 98        		.byte	-104
 5638 0044 9A        		.byte	-102
 5639 0045 9C        		.byte	-100
 5640 0046 9E        		.byte	-98
 5641 0047 9F        		.byte	-97
 5642 0048 A1        		.byte	-95
 5643 0049 A3        		.byte	-93
 5644 004a A5        		.byte	-91
 5645 004b A7        		.byte	-89
 5646 004c A8        		.byte	-88
 5647 004d AA        		.byte	-86
 5648 004e AC        		.byte	-84
 5649 004f AE        		.byte	-82
 5650 0050 AF        		.byte	-81
 5651 0051 B1        		.byte	-79
 5652 0052 B3        		.byte	-77
 5653 0053 B4        		.byte	-76
 5654 0054 B6        		.byte	-74
 5655 0055 B8        		.byte	-72
 5656 0056 B9        		.byte	-71
 5657 0057 BB        		.byte	-69
 5658 0058 BC        		.byte	-68
 5659 0059 BE        		.byte	-66
 5660 005a BF        		.byte	-65
 5661 005b C1        		.byte	-63
 5662 005c C2        		.byte	-62
 5663 005d C3        		.byte	-61
 5664 005e C5        		.byte	-59
 5665 005f C6        		.byte	-58
 5666 0060 C7        		.byte	-57
 5667 0061 C9        		.byte	-55
 5668 0062 CA        		.byte	-54
 5669 0063 CB        		.byte	-53
 5670 0064 CC        		.byte	-52
 5671 0065 CD        		.byte	-51
 5672 0066 CE        		.byte	-50
 5673 0067 D0        		.byte	-48
 5674 0068 D1        		.byte	-47
 5675 0069 D2        		.byte	-46
 5676 006a D2        		.byte	-46
 5677 006b D3        		.byte	-45
 5678 006c D4        		.byte	-44
 5679 006d D5        		.byte	-43
 5680 006e D6        		.byte	-42
 5681 006f D7        		.byte	-41
 5682 0070 D7        		.byte	-41
 5683 0071 D8        		.byte	-40
 5684 0072 D9        		.byte	-39
 5685 0073 D9        		.byte	-39
 5686 0074 DA        		.byte	-38
 5687 0075 DA        		.byte	-38
 5688 0076 DB        		.byte	-37
 5689 0077 DB        		.byte	-37
 5690 0078 DB        		.byte	-37
 5691 0079 DC        		.byte	-36
 5692 007a DC        		.byte	-36
 5693 007b DC        		.byte	-36
 5694 007c DC        		.byte	-36
 5695 007d DC        		.byte	-36
 5696 007e DD        		.byte	-35
 5697 007f DD        		.byte	-35
 5698 0080 DD        		.byte	-35
 5699 0081 DD        		.byte	-35
 5700 0082 DC        		.byte	-36
 5701 0083 DC        		.byte	-36
 5702 0084 DC        		.byte	-36
 5703 0085 DC        		.byte	-36
 5704 0086 DC        		.byte	-36
 5705 0087 DB        		.byte	-37
 5706 0088 DB        		.byte	-37
 5707 0089 DB        		.byte	-37
 5708 008a DA        		.byte	-38
 5709 008b DA        		.byte	-38
 5710 008c D9        		.byte	-39
 5711 008d D9        		.byte	-39
 5712 008e D8        		.byte	-40
 5713 008f D7        		.byte	-41
 5714 0090 D7        		.byte	-41
 5715 0091 D6        		.byte	-42
 5716 0092 D5        		.byte	-43
 5717 0093 D4        		.byte	-44
 5718 0094 D3        		.byte	-45
 5719 0095 D2        		.byte	-46
 5720 0096 D2        		.byte	-46
 5721 0097 D1        		.byte	-47
 5722 0098 D0        		.byte	-48
 5723 0099 CE        		.byte	-50
 5724 009a CD        		.byte	-51
 5725 009b CC        		.byte	-52
 5726 009c CB        		.byte	-53
 5727 009d CA        		.byte	-54
 5728 009e C9        		.byte	-55
 5729 009f C7        		.byte	-57
 5730 00a0 C6        		.byte	-58
 5731 00a1 C5        		.byte	-59
 5732 00a2 C3        		.byte	-61
 5733 00a3 C2        		.byte	-62
 5734 00a4 C1        		.byte	-63
 5735 00a5 BF        		.byte	-65
 5736 00a6 BE        		.byte	-66
 5737 00a7 BC        		.byte	-68
 5738 00a8 BB        		.byte	-69
 5739 00a9 B9        		.byte	-71
 5740 00aa B8        		.byte	-72
 5741 00ab B6        		.byte	-74
 5742 00ac B4        		.byte	-76
 5743 00ad B3        		.byte	-77
 5744 00ae B1        		.byte	-79
 5745 00af AF        		.byte	-81
 5746 00b0 AE        		.byte	-82
 5747 00b1 AC        		.byte	-84
 5748 00b2 AA        		.byte	-86
 5749 00b3 A8        		.byte	-88
 5750 00b4 A7        		.byte	-89
 5751 00b5 A5        		.byte	-91
 5752 00b6 A3        		.byte	-93
 5753 00b7 A1        		.byte	-95
 5754 00b8 9F        		.byte	-97
 5755 00b9 9E        		.byte	-98
 5756 00ba 9C        		.byte	-100
 5757 00bb 9A        		.byte	-102
 5758 00bc 98        		.byte	-104
 5759 00bd 96        		.byte	-106
 5760 00be 94        		.byte	-108
 5761 00bf 92        		.byte	-110
 5762 00c0 90        		.byte	-112
 5763 00c1 8E        		.byte	-114
 5764 00c2 8C        		.byte	-116
 5765 00c3 8A        		.byte	-118
 5766 00c4 89        		.byte	-119
 5767 00c5 87        		.byte	-121
 5768 00c6 85        		.byte	-123
 5769 00c7 83        		.byte	-125
 5770 00c8 81        		.byte	-127
 5771 00c9 7F        		.byte	127
 5772 00ca 7D        		.byte	125
 5773 00cb 7B        		.byte	123
 5774 00cc 79        		.byte	121
 5775 00cd 77        		.byte	119
 5776 00ce 75        		.byte	117
 5777 00cf 73        		.byte	115
 5778 00d0 71        		.byte	113
 5779 00d1 6F        		.byte	111
 5780 00d2 6D        		.byte	109
 5781 00d3 6B        		.byte	107
 5782 00d4 69        		.byte	105
 5783 00d5 68        		.byte	104
 5784 00d6 66        		.byte	102
 5785 00d7 64        		.byte	100
 5786 00d8 62        		.byte	98
 5787 00d9 60        		.byte	96
 5788 00da 5E        		.byte	94
 5789 00db 5C        		.byte	92
 5790 00dc 5A        		.byte	90
 5791 00dd 59        		.byte	89
 5792 00de 57        		.byte	87
 5793 00df 55        		.byte	85
 5794 00e0 53        		.byte	83
 5795 00e1 51        		.byte	81
 5796 00e2 50        		.byte	80
 5797 00e3 4E        		.byte	78
 5798 00e4 4C        		.byte	76
 5799 00e5 4A        		.byte	74
 5800 00e6 49        		.byte	73
 5801 00e7 47        		.byte	71
 5802 00e8 45        		.byte	69
 5803 00e9 43        		.byte	67
 5804 00ea 42        		.byte	66
 5805 00eb 40        		.byte	64
 5806 00ec 3E        		.byte	62
 5807 00ed 3D        		.byte	61
 5808 00ee 3B        		.byte	59
 5809 00ef 3A        		.byte	58
 5810 00f0 38        		.byte	56
 5811 00f1 36        		.byte	54
 5812 00f2 35        		.byte	53
 5813 00f3 33        		.byte	51
 5814 00f4 32        		.byte	50
 5815 00f5 30        		.byte	48
 5816 00f6 2F        		.byte	47
 5817 00f7 2D        		.byte	45
 5818 00f8 2C        		.byte	44
 5819 00f9 2A        		.byte	42
 5820 00fa 29        		.byte	41
 5821 00fb 28        		.byte	40
 5822 00fc 26        		.byte	38
 5823 00fd 25        		.byte	37
 5824 00fe 23        		.byte	35
 5825 00ff 22        		.byte	34
 5826               		.section	.data.effect_num_leds,"aw"
 5829               	effect_num_leds:
 5830 0000 0E        		.byte	14
 5831               		.section	.data.effect_end_pos,"aw"
 5834               	effect_end_pos:
 5835 0000 0E        		.byte	14
 5836               		.section	.bss.effect_start_pos,"aw",@nobits
 5839               	effect_start_pos:
 5840 0000 00        		.zero	1
 5841               		.section	.data.clipping_num_leds,"aw"
 5844               	clipping_num_leds:
 5845 0000 0E        		.byte	14
 5846               		.section	.bss.clipping_start_pos,"aw",@nobits
 5849               	clipping_start_pos:
 5850 0000 00        		.zero	1
 5851               		.comm	led,42,1
 5852               	.global	animation_status
 5853               		.section	.bss.animation_status,"aw",@nobits
 5856               	animation_status:
 5857 0000 0000 0000 		.zero	6
 5857      0000 
 5858               	.global	is_rgblight_initialized
 5859               		.section	.bss.is_rgblight_initialized,"aw",@nobits
 5862               	is_rgblight_initialized:
 5863 0000 00        		.zero	1
 5864               	.global	rgblight_status
 5865               		.section	.bss.rgblight_status,"aw",@nobits
 5868               	rgblight_status:
 5869 0000 0000      		.zero	2
 5870               		.comm	rgblight_config,5,1
 5871               		.weak	RGBLED_GRADIENT_RANGES
 5872               		.section	.progmem.data.RGBLED_GRADIENT_RANGES,"a"
 5875               	RGBLED_GRADIENT_RANGES:
 5876 0000 FF        		.byte	-1
 5877 0001 AA        		.byte	-86
 5878 0002 7F        		.byte	127
 5879 0003 55        		.byte	85
 5880 0004 40        		.byte	64
 5881               		.section	.rodata.mode_base_table,"a"
 5884               	mode_base_table:
 5885 0000 00        		.byte	0
 5886 0001 01        		.byte	1
 5887 0002 02        		.byte	2
 5888 0003 02        		.byte	2
 5889 0004 02        		.byte	2
 5890 0005 02        		.byte	2
 5891 0006 06        		.byte	6
 5892 0007 06        		.byte	6
 5893 0008 06        		.byte	6
 5894 0009 09        		.byte	9
 5895 000a 09        		.byte	9
 5896 000b 09        		.byte	9
 5897 000c 09        		.byte	9
 5898 000d 09        		.byte	9
 5899 000e 09        		.byte	9
 5900 000f 0F        		.byte	15
 5901 0010 0F        		.byte	15
 5902 0011 0F        		.byte	15
 5903 0012 0F        		.byte	15
 5904 0013 0F        		.byte	15
 5905 0014 0F        		.byte	15
 5906 0015 15        		.byte	21
 5907 0016 15        		.byte	21
 5908 0017 15        		.byte	21
 5909 0018 18        		.byte	24
 5910 0019 19        		.byte	25
 5911 001a 19        		.byte	25
 5912 001b 19        		.byte	25
 5913 001c 19        		.byte	25
 5914 001d 19        		.byte	25
 5915 001e 19        		.byte	25
 5916 001f 19        		.byte	25
 5917 0020 19        		.byte	25
 5918 0021 19        		.byte	25
 5919 0022 19        		.byte	25
 5920 0023 23        		.byte	35
 5921 0024 24        		.byte	36
 5922               		.section	.data.static_effect_table,"aw"
 5925               	static_effect_table:
 5926 0000 01        		.byte	1
 5927 0001 19        		.byte	25
 5928 0002 1A        		.byte	26
 5929 0003 1B        		.byte	27
 5930 0004 1C        		.byte	28
 5931 0005 1D        		.byte	29
 5932 0006 1E        		.byte	30
 5933 0007 1F        		.byte	31
 5934 0008 20        		.byte	32
 5935 0009 21        		.byte	33
 5936 000a 22        		.byte	34
 5937               		.text
 5938               	.Letext0:
 5939               		.file 4 "/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/stdint.h"
 5940               		.file 5 "./quantum/color.h"
 5941               		.file 6 "tmk_core/common/timer.h"
 5942               		.file 7 "quantum/rgblight.h"
 5943               		.file 8 "tmk_core/common/avr/xprintf.h"
 5944               		.file 9 "tmk_core/common/debug.h"
 5945               		.file 10 "quantum/led_tables.h"
 5946               		.file 11 "./lib/lib8tion/random8.h"
 5947               		.file 12 "./lib/lib8tion/trig8.h"
 5948               		.file 13 "quantum/rgblight_breathe_table.h"
 5949               		.file 14 "/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/string.h"
 5950               		.file 15 "drivers/avr/ws2812.h"
 5951               		.file 16 "tmk_core/common/eeconfig.h"
 5952               		.file 17 "/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/eeprom.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 rgblight.c
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:4      *ABS*:000000000000003f __SREG__
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:12     .text.rgblight_effect_dummy:0000000000000000 rgblight_effect_dummy
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:31     .text.rgblight_set_clipping_range:0000000000000000 rgblight_set_clipping_range
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5849   .bss.clipping_start_pos:0000000000000000 clipping_start_pos
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5844   .data.clipping_num_leds:0000000000000000 clipping_num_leds
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:55     .text.rgblight_set_effect_range:0000000000000000 rgblight_set_effect_range
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5839   .bss.effect_start_pos:0000000000000000 effect_start_pos
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5834   .data.effect_end_pos:0000000000000000 effect_end_pos
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5829   .data.effect_num_leds:0000000000000000 effect_num_leds
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:101    .text.sethsv_raw:0000000000000000 sethsv_raw
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:163    .text.sethsv:0000000000000000 sethsv
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:182    .text.setrgb:0000000000000000 setrgb
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:211    .text.rgblight_check_config:0000000000000000 rgblight_check_config
                            *COM*:0000000000000005 rgblight_config
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:254    .text.eeconfig_read_rgblight:0000000000000000 eeconfig_read_rgblight
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:274    .text.eeconfig_update_rgblight:0000000000000000 eeconfig_update_rgblight
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:325    .text.eeconfig_update_rgblight_default:0000000000000000 eeconfig_update_rgblight_default
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:367    .text.eeconfig_debug_rgblight:0000000000000000 eeconfig_debug_rgblight
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5516   .progmem.data.__c.2895:0000000000000000 __c.2895
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5511   .progmem.data.__c.2897:0000000000000000 __c.2897
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5506   .progmem.data.__c.2899:0000000000000000 __c.2899
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5501   .progmem.data.__c.2901:0000000000000000 __c.2901
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5496   .progmem.data.__c.2903:0000000000000000 __c.2903
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5491   .progmem.data.__c.2905:0000000000000000 __c.2905
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5486   .progmem.data.__c.2907:0000000000000000 __c.2907
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:609    .text.rgblight_read_dword:0000000000000000 rgblight_read_dword
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:632    .text.rgblight_get_mode:0000000000000000 rgblight_get_mode
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:662    .text.rgblight_increase_speed:0000000000000000 rgblight_increase_speed
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:694    .text.rgblight_decrease_speed:0000000000000000 rgblight_decrease_speed
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:726    .text.rgblight_get_hue:0000000000000000 rgblight_get_hue
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:745    .text.rgblight_get_sat:0000000000000000 rgblight_get_sat
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:764    .text.rgblight_get_val:0000000000000000 rgblight_get_val
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:783    .text.rgblight_set:0000000000000000 rgblight_set
                            *COM*:000000000000002a led
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:859    .text.rgblight_setrgb:0000000000000000 rgblight_setrgb
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:927    .text.rgblight_sethsv_noeeprom_old:0000000000000000 rgblight_sethsv_noeeprom_old
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:998    .text.rgblight_effect_breathing:0000000000000000 rgblight_effect_breathing
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5569   .progmem.data.rgblight_effect_breathe_table:0000000000000000 rgblight_effect_breathe_table
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:1066   .text.rgblight_effect_rainbow_mood:0000000000000000 rgblight_effect_rainbow_mood
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:1113   .text.rgblight_effect_rgbtest:0000000000000000 rgblight_effect_rgbtest
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5371   .bss.maxval.3297:0000000000000000 maxval.3297
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:1267   .text.rgblight_sethsv_eeprom_helper:0000000000000000 rgblight_sethsv_eeprom_helper
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5884   .rodata.mode_base_table:0000000000000000 mode_base_table
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5868   .bss.rgblight_status:0000000000000000 rgblight_status
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5416   .progmem.data.__c.3093:0000000000000000 __c.3093
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5875   .progmem.data.RGBLED_GRADIENT_RANGES:0000000000000000 RGBLED_GRADIENT_RANGES
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5421   .progmem.data.__c.3088:0000000000000000 __c.3088
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5411   .progmem.data.__c.3095:0000000000000000 __c.3095
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:1730   .text.rgblight_increase_hue_helper:0000000000000000 rgblight_increase_hue_helper
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:1764   .text.rgblight_increase_hue_noeeprom:0000000000000000 rgblight_increase_hue_noeeprom
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:1782   .text.rgblight_increase_hue:0000000000000000 rgblight_increase_hue
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:1800   .text.rgblight_decrease_hue_helper:0000000000000000 rgblight_decrease_hue_helper
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:1834   .text.rgblight_decrease_hue_noeeprom:0000000000000000 rgblight_decrease_hue_noeeprom
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:1852   .text.rgblight_decrease_hue:0000000000000000 rgblight_decrease_hue
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:1870   .text.rgblight_increase_sat_helper:0000000000000000 rgblight_increase_sat_helper
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:1901   .text.rgblight_increase_sat_helper:000000000000000e L_1572
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:1924   .text.rgblight_increase_sat_noeeprom:0000000000000000 rgblight_increase_sat_noeeprom
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:1942   .text.rgblight_increase_sat:0000000000000000 rgblight_increase_sat
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:1960   .text.rgblight_decrease_sat_helper:0000000000000000 rgblight_decrease_sat_helper
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:1990   .text.rgblight_decrease_sat_helper:000000000000000e L_1628
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:2013   .text.rgblight_decrease_sat_noeeprom:0000000000000000 rgblight_decrease_sat_noeeprom
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:2031   .text.rgblight_decrease_sat:0000000000000000 rgblight_decrease_sat
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:2049   .text.rgblight_increase_val_helper:0000000000000000 rgblight_increase_val_helper
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:2079   .text.rgblight_increase_val_helper:000000000000000e L_1684
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:2102   .text.rgblight_increase_val_noeeprom:0000000000000000 rgblight_increase_val_noeeprom
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:2120   .text.rgblight_increase_val:0000000000000000 rgblight_increase_val
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:2138   .text.rgblight_decrease_val_helper:0000000000000000 rgblight_decrease_val_helper
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:2168   .text.rgblight_decrease_val_helper:000000000000000e L_1740
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:2191   .text.rgblight_decrease_val_noeeprom:0000000000000000 rgblight_decrease_val_noeeprom
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:2209   .text.rgblight_decrease_val:0000000000000000 rgblight_decrease_val
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:2227   .text.rgblight_sethsv:0000000000000000 rgblight_sethsv
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:2247   .text.rgblight_sethsv_noeeprom:0000000000000000 rgblight_sethsv_noeeprom
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:2267   .text.rgblight_setrgb_at:0000000000000000 rgblight_setrgb_at
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:2316   .text.rgblight_sethsv_at:0000000000000000 rgblight_sethsv_at
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:2396   .text.rgblight_setrgb_range:0000000000000000 rgblight_setrgb_range
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:2488   .text.rgblight_sethsv_range:0000000000000000 rgblight_sethsv_range
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:2575   .text.rgblight_sethsv_master:0000000000000000 rgblight_sethsv_master
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:2604   .text.rgblight_sethsv_slave:0000000000000000 rgblight_sethsv_slave
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:2633   .text.rgblight_setrgb_master:0000000000000000 rgblight_setrgb_master
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:2662   .text.rgblight_setrgb_slave:0000000000000000 rgblight_setrgb_slave
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:2691   .text.rgblight_effect_rainbow_swirl:0000000000000000 rgblight_effect_rainbow_swirl
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:2831   .text.rgblight_effect_snake:0000000000000000 rgblight_effect_snake
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5391   .bss.pos.3258:0000000000000000 pos.3258
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:3069   .text.rgblight_effect_knight:0000000000000000 rgblight_effect_knight
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5376   .data.increment.3276:0000000000000000 increment.3276
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5386   .bss.low_bound.3274:0000000000000000 low_bound.3274
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5381   .data.high_bound.3275:0000000000000000 high_bound.3275
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:3283   .text.rgblight_effect_christmas:0000000000000000 rgblight_effect_christmas
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:3412   .text.rgblight_effect_alternating:0000000000000000 rgblight_effect_alternating
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:3569   .text.rgblight_timer_init:0000000000000000 rgblight_timer_init
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:3590   .text.rgblight_timer_enable:0000000000000000 rgblight_timer_enable
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5925   .data.static_effect_table:0000000000000000 static_effect_table
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5856   .bss.animation_status:0000000000000000 animation_status
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5406   .progmem.data.__c.3202:0000000000000000 __c.3202
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:3673   .text.rgblight_timer_disable:0000000000000000 rgblight_timer_disable
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5401   .progmem.data.__c.3207:0000000000000000 __c.3207
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:3719   .text.rgblight_mode_eeprom_helper:0000000000000000 rgblight_mode_eeprom_helper
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5461   .progmem.data.__c.2961:0000000000000000 __c.2961
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5456   .progmem.data.__c.2963:0000000000000000 __c.2963
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:3898   .text.rgblight_step_helper:0000000000000000 rgblight_step_helper
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:3939   .text.rgblight_step_noeeprom:0000000000000000 rgblight_step_noeeprom
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:3957   .text.rgblight_step:0000000000000000 rgblight_step
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:3975   .text.rgblight_step_reverse_helper:0000000000000000 rgblight_step_reverse_helper
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:4015   .text.rgblight_step_reverse_noeeprom:0000000000000000 rgblight_step_reverse_noeeprom
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:4033   .text.rgblight_step_reverse:0000000000000000 rgblight_step_reverse
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:4051   .text.rgblight_mode:0000000000000000 rgblight_mode
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:4071   .text.rgblight_increase:0000000000000000 rgblight_increase
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:4106   .text.rgblight_decrease:0000000000000000 rgblight_decrease
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:4141   .text.rgblight_enable:0000000000000000 rgblight_enable
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5441   .progmem.data.__c.2984:0000000000000000 __c.2984
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:4201   .text.rgblight_mode_noeeprom:0000000000000000 rgblight_mode_noeeprom
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:4221   .text.rgblight_init:0000000000000000 rgblight_init
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5862   .bss.is_rgblight_initialized:0000000000000000 is_rgblight_initialized
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5481   .progmem.data.__c.2912:0000000000000000 __c.2912
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5476   .progmem.data.__c.2914:0000000000000000 __c.2914
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5471   .progmem.data.__c.2916:0000000000000000 __c.2916
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5466   .progmem.data.__c.2918:0000000000000000 __c.2918
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:4421   .text.rgblight_enable_noeeprom:0000000000000000 rgblight_enable_noeeprom
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5436   .progmem.data.__c.2989:0000000000000000 __c.2989
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:4481   .text.rgblight_update_dword:0000000000000000 rgblight_update_dword
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:4519   .text.rgblight_disable:0000000000000000 rgblight_disable
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5431   .progmem.data.__c.2994:0000000000000000 __c.2994
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:4611   .text.rgblight_toggle:0000000000000000 rgblight_toggle
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5451   .progmem.data.__c.2974:0000000000000000 __c.2974
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:4673   .text.rgblight_disable_noeeprom:0000000000000000 rgblight_disable_noeeprom
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5426   .progmem.data.__c.2999:0000000000000000 __c.2999
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:4756   .text.rgblight_toggle_noeeprom:0000000000000000 rgblight_toggle_noeeprom
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5446   .progmem.data.__c.2979:0000000000000000 __c.2979
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:4818   .text.rgblight_timer_toggle:0000000000000000 rgblight_timer_toggle
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5396   .progmem.data.__c.3212:0000000000000000 __c.3212
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:4868   .text.rgblight_show_solid_color:0000000000000000 rgblight_show_solid_color
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:4924   .text.rgblight_task:0000000000000000 rgblight_task
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5560   .progmem.data.RGBLED_BREATHING_INTERVALS:0000000000000000 RGBLED_BREATHING_INTERVALS
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5552   .progmem.data.RGBLED_RAINBOW_MOOD_INTERVALS:0000000000000000 RGBLED_RAINBOW_MOOD_INTERVALS
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5544   .progmem.data.RGBLED_RAINBOW_SWIRL_INTERVALS:0000000000000000 RGBLED_RAINBOW_SWIRL_INTERVALS
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5536   .progmem.data.RGBLED_SNAKE_INTERVALS:0000000000000000 RGBLED_SNAKE_INTERVALS
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5528   .progmem.data.RGBLED_KNIGHT_INTERVALS:0000000000000000 RGBLED_KNIGHT_INTERVALS
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccLa6guA.s:5522   .progmem.data.RGBLED_RGBTEST_INTERVALS:0000000000000000 RGBLED_RGBTEST_INTERVALS

UNDEFINED SYMBOLS
hsv_to_rgb
eeprom_read_dword
eeprom_update_dword
debug_config
__xprintf
ws2812_setleds
__divmodhi4
__udivmodhi4
memchr
timer_read
eeconfig_is_enabled
eeconfig_init
timer_elapsed
__do_copy_data
__do_clear_bss
