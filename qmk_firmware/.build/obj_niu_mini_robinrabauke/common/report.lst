   1               		.file	"report.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.has_anykey,"ax",@progbits
  11               	.global	has_anykey
  13               	has_anykey:
  14               	.LVL0:
  15               	.LFB1:
  16               		.file 1 "tmk_core/common/report.c"
   1:tmk_core/common/report.c **** /* Copyright 2017 Fred Sundvik
   2:tmk_core/common/report.c ****  *
   3:tmk_core/common/report.c ****  * This program is free software: you can redistribute it and/or modify
   4:tmk_core/common/report.c ****  * it under the terms of the GNU General Public License as published by
   5:tmk_core/common/report.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:tmk_core/common/report.c ****  * (at your option) any later version.
   7:tmk_core/common/report.c ****  *
   8:tmk_core/common/report.c ****  * This program is distributed in the hope that it will be useful,
   9:tmk_core/common/report.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:tmk_core/common/report.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:tmk_core/common/report.c ****  * GNU General Public License for more details.
  12:tmk_core/common/report.c ****  *
  13:tmk_core/common/report.c ****  * You should have received a copy of the GNU General Public License
  14:tmk_core/common/report.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:tmk_core/common/report.c ****  */
  16:tmk_core/common/report.c **** 
  17:tmk_core/common/report.c **** #include "report.h"
  18:tmk_core/common/report.c **** #include "host.h"
  19:tmk_core/common/report.c **** #include "keycode_config.h"
  20:tmk_core/common/report.c **** #include "debug.h"
  21:tmk_core/common/report.c **** #include "util.h"
  22:tmk_core/common/report.c **** #include <string.h>
  23:tmk_core/common/report.c **** 
  24:tmk_core/common/report.c **** /** \brief has_anykey
  25:tmk_core/common/report.c ****  *
  26:tmk_core/common/report.c ****  * FIXME: Needs doc
  27:tmk_core/common/report.c ****  */
  28:tmk_core/common/report.c **** uint8_t has_anykey(report_keyboard_t* keyboard_report)
  29:tmk_core/common/report.c **** {
  17               		.loc 1 29 1 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  30:tmk_core/common/report.c ****     uint8_t cnt = 0;
  23               		.loc 1 30 5 view .LVU1
  31:tmk_core/common/report.c ****     uint8_t *p = keyboard_report->keys;
  24               		.loc 1 31 5 view .LVU2
  25               		.loc 1 31 14 is_stmt 0 view .LVU3
  26 0000 9C01      		movw r18,r24
  27 0002 2E5F      		subi r18,-2
  28 0004 3F4F      		sbci r19,-1
  29               	.LVL1:
  32:tmk_core/common/report.c ****     uint8_t lp = sizeof(keyboard_report->keys);
  30               		.loc 1 32 5 is_stmt 1 view .LVU4
  33:tmk_core/common/report.c **** #ifdef NKRO_ENABLE
  34:tmk_core/common/report.c ****     if (keyboard_protocol && keymap_config.nkro) {
  35:tmk_core/common/report.c ****         p = keyboard_report->nkro.bits;
  36:tmk_core/common/report.c ****         lp = sizeof(keyboard_report->nkro.bits);
  37:tmk_core/common/report.c ****     }
  38:tmk_core/common/report.c **** #endif
  39:tmk_core/common/report.c ****     while (lp--) {
  31               		.loc 1 39 5 view .LVU5
  32 0006 AC01      		movw r20,r24
  33 0008 485F      		subi r20,-8
  34 000a 5F4F      		sbci r21,-1
  30:tmk_core/common/report.c ****     uint8_t *p = keyboard_report->keys;
  35               		.loc 1 30 13 is_stmt 0 view .LVU6
  36 000c 80E0      		ldi r24,0
  37               	.LVL2:
  38               	.L2:
  39               		.loc 1 39 11 view .LVU7
  40 000e 2417      		cp r18,r20
  41 0010 3507      		cpc r19,r21
  42 0012 01F4      		brne .L4
  43               	/* epilogue start */
  40:tmk_core/common/report.c ****         if (*p++)
  41:tmk_core/common/report.c ****             cnt++;
  42:tmk_core/common/report.c ****     }
  43:tmk_core/common/report.c ****     return cnt;
  44:tmk_core/common/report.c **** }
  44               		.loc 1 44 1 view .LVU8
  45 0014 0895      		ret
  46               	.L4:
  40:tmk_core/common/report.c ****         if (*p++)
  47               		.loc 1 40 9 is_stmt 1 view .LVU9
  40:tmk_core/common/report.c ****         if (*p++)
  48               		.loc 1 40 12 is_stmt 0 view .LVU10
  49 0016 F901      		movw r30,r18
  50 0018 9191      		ld r25,Z+
  51 001a 9F01      		movw r18,r30
  52               	.LVL3:
  40:tmk_core/common/report.c ****         if (*p++)
  53               		.loc 1 40 12 view .LVU11
  54 001c 9923      		tst r25
  55 001e 01F0      		breq .L2
  41:tmk_core/common/report.c ****     }
  56               		.loc 1 41 13 is_stmt 1 view .LVU12
  41:tmk_core/common/report.c ****     }
  57               		.loc 1 41 16 is_stmt 0 view .LVU13
  58 0020 8F5F      		subi r24,lo8(-(1))
  59               	.LVL4:
  41:tmk_core/common/report.c ****     }
  60               		.loc 1 41 16 view .LVU14
  61 0022 00C0      		rjmp .L2
  62               		.cfi_endproc
  63               	.LFE1:
  65               		.section	.text.get_first_key,"ax",@progbits
  66               	.global	get_first_key
  68               	get_first_key:
  69               	.LVL5:
  70               	.LFB2:
  45:tmk_core/common/report.c **** 
  46:tmk_core/common/report.c **** /** \brief get_first_key
  47:tmk_core/common/report.c ****  *
  48:tmk_core/common/report.c ****  * FIXME: Needs doc
  49:tmk_core/common/report.c ****  */
  50:tmk_core/common/report.c **** uint8_t get_first_key(report_keyboard_t* keyboard_report)
  51:tmk_core/common/report.c **** {
  71               		.loc 1 51 1 is_stmt 1 view -0
  72               		.cfi_startproc
  73               	/* prologue: function */
  74               	/* frame size = 0 */
  75               	/* stack size = 0 */
  76               	.L__stack_usage = 0
  52:tmk_core/common/report.c **** #ifdef NKRO_ENABLE
  53:tmk_core/common/report.c ****     if (keyboard_protocol && keymap_config.nkro) {
  54:tmk_core/common/report.c ****         uint8_t i = 0;
  55:tmk_core/common/report.c ****         for (; i < KEYBOARD_REPORT_BITS && !keyboard_report->nkro.bits[i]; i++)
  56:tmk_core/common/report.c ****             ;
  57:tmk_core/common/report.c ****         return i<<3 | biton(keyboard_report->nkro.bits[i]);
  58:tmk_core/common/report.c ****     }
  59:tmk_core/common/report.c **** #endif
  60:tmk_core/common/report.c **** #ifdef USB_6KRO_ENABLE
  61:tmk_core/common/report.c ****     uint8_t i = cb_head;
  62:tmk_core/common/report.c ****     do {
  63:tmk_core/common/report.c ****         if (keyboard_report->keys[i] != 0) {
  64:tmk_core/common/report.c ****             break;
  65:tmk_core/common/report.c ****         }
  66:tmk_core/common/report.c ****         i = RO_INC(i);
  67:tmk_core/common/report.c ****     } while (i != cb_tail);
  68:tmk_core/common/report.c ****     return keyboard_report->keys[i];
  69:tmk_core/common/report.c **** #else
  70:tmk_core/common/report.c ****     return keyboard_report->keys[0];
  77               		.loc 1 70 5 view .LVU16
  71:tmk_core/common/report.c **** #endif
  72:tmk_core/common/report.c **** }
  78               		.loc 1 72 1 is_stmt 0 view .LVU17
  79 0000 FC01      		movw r30,r24
  80 0002 8281      		ldd r24,Z+2
  81               	.LVL6:
  82               	/* epilogue start */
  83               		.loc 1 72 1 view .LVU18
  84 0004 0895      		ret
  85               		.cfi_endproc
  86               	.LFE2:
  88               		.section	.text.add_key_byte,"ax",@progbits
  89               	.global	add_key_byte
  91               	add_key_byte:
  92               	.LVL7:
  93               	.LFB3:
  73:tmk_core/common/report.c **** 
  74:tmk_core/common/report.c **** /** \brief add key byte
  75:tmk_core/common/report.c ****  *
  76:tmk_core/common/report.c ****  * FIXME: Needs doc
  77:tmk_core/common/report.c ****  */
  78:tmk_core/common/report.c **** void add_key_byte(report_keyboard_t* keyboard_report, uint8_t code)
  79:tmk_core/common/report.c **** {
  94               		.loc 1 79 1 is_stmt 1 view -0
  95               		.cfi_startproc
  96               	/* prologue: function */
  97               	/* frame size = 0 */
  98               	/* stack size = 0 */
  99               	.L__stack_usage = 0
 100               		.loc 1 79 1 is_stmt 0 view .LVU20
 101 0000 9C01      		movw r18,r24
  80:tmk_core/common/report.c **** #ifdef USB_6KRO_ENABLE
  81:tmk_core/common/report.c ****     int8_t i = cb_head;
  82:tmk_core/common/report.c ****     int8_t empty = -1;
  83:tmk_core/common/report.c ****     if (cb_count) {
  84:tmk_core/common/report.c ****         do {
  85:tmk_core/common/report.c ****             if (keyboard_report->keys[i] == code) {
  86:tmk_core/common/report.c ****                 return;
  87:tmk_core/common/report.c ****             }
  88:tmk_core/common/report.c ****             if (empty == -1 && keyboard_report->keys[i] == 0) {
  89:tmk_core/common/report.c ****                 empty = i;
  90:tmk_core/common/report.c ****             }
  91:tmk_core/common/report.c ****             i = RO_INC(i);
  92:tmk_core/common/report.c ****         } while (i != cb_tail);
  93:tmk_core/common/report.c ****         if (i == cb_tail) {
  94:tmk_core/common/report.c ****             if (cb_tail == cb_head) {
  95:tmk_core/common/report.c ****                 // buffer is full
  96:tmk_core/common/report.c ****                 if (empty == -1) {
  97:tmk_core/common/report.c ****                     // pop head when has no empty space
  98:tmk_core/common/report.c ****                     cb_head = RO_INC(cb_head);
  99:tmk_core/common/report.c ****                     cb_count--;
 100:tmk_core/common/report.c ****                 }
 101:tmk_core/common/report.c ****                 else {
 102:tmk_core/common/report.c ****                     // left shift when has empty space
 103:tmk_core/common/report.c ****                     uint8_t offset = 1;
 104:tmk_core/common/report.c ****                     i = RO_INC(empty);
 105:tmk_core/common/report.c ****                     do {
 106:tmk_core/common/report.c ****                         if (keyboard_report->keys[i] != 0) {
 107:tmk_core/common/report.c ****                             keyboard_report->keys[empty] = keyboard_report->keys[i];
 108:tmk_core/common/report.c ****                             keyboard_report->keys[i] = 0;
 109:tmk_core/common/report.c ****                             empty = RO_INC(empty);
 110:tmk_core/common/report.c ****                         }
 111:tmk_core/common/report.c ****                         else {
 112:tmk_core/common/report.c ****                             offset++;
 113:tmk_core/common/report.c ****                         }
 114:tmk_core/common/report.c ****                         i = RO_INC(i);
 115:tmk_core/common/report.c ****                     } while (i != cb_tail);
 116:tmk_core/common/report.c ****                     cb_tail = RO_SUB(cb_tail, offset);
 117:tmk_core/common/report.c ****                 }
 118:tmk_core/common/report.c ****             }
 119:tmk_core/common/report.c ****         }
 120:tmk_core/common/report.c ****     }
 121:tmk_core/common/report.c ****     // add to tail
 122:tmk_core/common/report.c ****     keyboard_report->keys[cb_tail] = code;
 123:tmk_core/common/report.c ****     cb_tail = RO_INC(cb_tail);
 124:tmk_core/common/report.c ****     cb_count++;
 125:tmk_core/common/report.c **** #else
 126:tmk_core/common/report.c ****     int8_t i = 0;
 102               		.loc 1 126 5 is_stmt 1 view .LVU21
 103               	.LVL8:
 127:tmk_core/common/report.c ****     int8_t empty = -1;
 104               		.loc 1 127 5 view .LVU22
 128:tmk_core/common/report.c ****     for (; i < KEYBOARD_REPORT_KEYS; i++) {
 105               		.loc 1 128 5 view .LVU23
 106               		.loc 1 128 5 is_stmt 0 view .LVU24
 107 0002 FC01      		movw r30,r24
 108 0004 3296      		adiw r30,2
 127:tmk_core/common/report.c ****     int8_t empty = -1;
 109               		.loc 1 127 12 view .LVU25
 110 0006 9FEF      		ldi r25,lo8(-1)
 126:tmk_core/common/report.c ****     int8_t empty = -1;
 111               		.loc 1 126 12 view .LVU26
 112 0008 80E0      		ldi r24,0
 113               	.LVL9:
 114               	.L12:
 129:tmk_core/common/report.c ****         if (keyboard_report->keys[i] == code) {
 115               		.loc 1 129 9 is_stmt 1 view .LVU27
 116               		.loc 1 129 34 is_stmt 0 view .LVU28
 117 000a 4191      		ld r20,Z+
 118               		.loc 1 129 12 view .LVU29
 119 000c 4617      		cp r20,r22
 120 000e 01F0      		breq .L9
 130:tmk_core/common/report.c ****             break;
 131:tmk_core/common/report.c ****         }
 132:tmk_core/common/report.c ****         if (empty == -1 && keyboard_report->keys[i] == 0) {
 121               		.loc 1 132 9 is_stmt 1 view .LVU30
 122               		.loc 1 132 12 is_stmt 0 view .LVU31
 123 0010 9F3F      		cpi r25,lo8(-1)
 124 0012 01F4      		brne .L11
 125               		.loc 1 132 25 discriminator 1 view .LVU32
 126 0014 4111      		cpse r20,__zero_reg__
 127 0016 00C0      		rjmp .L11
 128               		.loc 1 132 25 view .LVU33
 129 0018 982F      		mov r25,r24
 130               	.LVL10:
 131               	.L11:
 132               		.loc 1 132 25 view .LVU34
 133 001a 8F5F      		subi r24,lo8(-(1))
 134               	.LVL11:
 128:tmk_core/common/report.c ****         if (keyboard_report->keys[i] == code) {
 135               		.loc 1 128 5 view .LVU35
 136 001c 8630      		cpi r24,lo8(6)
 137 001e 01F4      		brne .L12
 133:tmk_core/common/report.c ****             empty = i;
 134:tmk_core/common/report.c ****         }
 135:tmk_core/common/report.c ****     }
 136:tmk_core/common/report.c ****     if (i == KEYBOARD_REPORT_KEYS) {
 138               		.loc 1 136 5 is_stmt 1 view .LVU36
 137:tmk_core/common/report.c ****         if (empty != -1) {
 139               		.loc 1 137 9 view .LVU37
 140               		.loc 1 137 12 is_stmt 0 view .LVU38
 141 0020 9F3F      		cpi r25,lo8(-1)
 142 0022 01F4      		brne .L14
 143               	.L9:
 144               	/* epilogue start */
 138:tmk_core/common/report.c ****             keyboard_report->keys[empty] = code;
 139:tmk_core/common/report.c ****         }
 140:tmk_core/common/report.c ****     }
 141:tmk_core/common/report.c **** #endif
 142:tmk_core/common/report.c **** }
 145               		.loc 1 142 1 view .LVU39
 146 0024 0895      		ret
 147               	.L14:
 138:tmk_core/common/report.c ****             keyboard_report->keys[empty] = code;
 148               		.loc 1 138 13 is_stmt 1 view .LVU40
 138:tmk_core/common/report.c ****             keyboard_report->keys[empty] = code;
 149               		.loc 1 138 42 is_stmt 0 view .LVU41
 150 0026 290F      		add r18,r25
 151 0028 311D      		adc r19,__zero_reg__
 152 002a 97FD      		sbrc r25,7
 153 002c 3A95      		dec r19
 154               	.LVL12:
 138:tmk_core/common/report.c ****             keyboard_report->keys[empty] = code;
 155               		.loc 1 138 42 view .LVU42
 156 002e F901      		movw r30,r18
 157 0030 6283      		std Z+2,r22
 158               		.loc 1 142 1 view .LVU43
 159 0032 0895      		ret
 160               		.cfi_endproc
 161               	.LFE3:
 163               		.section	.text.del_key_byte,"ax",@progbits
 164               	.global	del_key_byte
 166               	del_key_byte:
 167               	.LVL13:
 168               	.LFB4:
 143:tmk_core/common/report.c **** 
 144:tmk_core/common/report.c **** /** \brief del key byte
 145:tmk_core/common/report.c ****  *
 146:tmk_core/common/report.c ****  * FIXME: Needs doc
 147:tmk_core/common/report.c ****  */
 148:tmk_core/common/report.c **** void del_key_byte(report_keyboard_t* keyboard_report, uint8_t code)
 149:tmk_core/common/report.c **** {
 169               		.loc 1 149 1 is_stmt 1 view -0
 170               		.cfi_startproc
 171               	/* prologue: function */
 172               	/* frame size = 0 */
 173               	/* stack size = 0 */
 174               	.L__stack_usage = 0
 150:tmk_core/common/report.c **** #ifdef USB_6KRO_ENABLE
 151:tmk_core/common/report.c ****     uint8_t i = cb_head;
 152:tmk_core/common/report.c ****     if (cb_count) {
 153:tmk_core/common/report.c ****         do {
 154:tmk_core/common/report.c ****             if (keyboard_report->keys[i] == code) {
 155:tmk_core/common/report.c ****                 keyboard_report->keys[i] = 0;
 156:tmk_core/common/report.c ****                 cb_count--;
 157:tmk_core/common/report.c ****                 if (cb_count == 0) {
 158:tmk_core/common/report.c ****                     // reset head and tail
 159:tmk_core/common/report.c ****                     cb_tail = cb_head = 0;
 160:tmk_core/common/report.c ****                 }
 161:tmk_core/common/report.c ****                 if (i == RO_DEC(cb_tail)) {
 162:tmk_core/common/report.c ****                     // left shift when next to tail
 163:tmk_core/common/report.c ****                     do {
 164:tmk_core/common/report.c ****                         cb_tail = RO_DEC(cb_tail);
 165:tmk_core/common/report.c ****                         if (keyboard_report->keys[RO_DEC(cb_tail)] != 0) {
 166:tmk_core/common/report.c ****                             break;
 167:tmk_core/common/report.c ****                         }
 168:tmk_core/common/report.c ****                     } while (cb_tail != cb_head);
 169:tmk_core/common/report.c ****                 }
 170:tmk_core/common/report.c ****                 break;
 171:tmk_core/common/report.c ****             }
 172:tmk_core/common/report.c ****             i = RO_INC(i);
 173:tmk_core/common/report.c ****         } while (i != cb_tail);
 174:tmk_core/common/report.c ****     }
 175:tmk_core/common/report.c **** #else
 176:tmk_core/common/report.c ****     for (uint8_t i = 0; i < KEYBOARD_REPORT_KEYS; i++) {
 175               		.loc 1 176 5 view .LVU45
 176               	.LBB2:
 177               		.loc 1 176 10 view .LVU46
 178               		.loc 1 176 10 is_stmt 0 view .LVU47
 179 0000 FC01      		movw r30,r24
 180 0002 3296      		adiw r30,2
 181 0004 0896      		adiw r24,8
 182               	.LVL14:
 183               	.L19:
 177:tmk_core/common/report.c ****         if (keyboard_report->keys[i] == code) {
 184               		.loc 1 177 9 is_stmt 1 view .LVU48
 185               		.loc 1 177 34 is_stmt 0 view .LVU49
 186 0006 2191      		ld r18,Z+
 187               	.LVL15:
 188               		.loc 1 177 12 view .LVU50
 189 0008 2613      		cpse r18,r22
 190 000a 00C0      		rjmp .L18
 178:tmk_core/common/report.c ****             keyboard_report->keys[i] = 0;
 191               		.loc 1 178 13 is_stmt 1 view .LVU51
 192               		.loc 1 178 38 is_stmt 0 view .LVU52
 193 000c DF01      		movw r26,r30
 194 000e 1197      		sbiw r26,1
 195 0010 1C92      		st X,__zero_reg__
 196               	.L18:
 197               	.LVL16:
 176:tmk_core/common/report.c ****         if (keyboard_report->keys[i] == code) {
 198               		.loc 1 176 5 discriminator 2 view .LVU53
 199 0012 E817      		cp r30,r24
 200 0014 F907      		cpc r31,r25
 201 0016 01F4      		brne .L19
 202               	/* epilogue start */
 203               	.LBE2:
 179:tmk_core/common/report.c ****         }
 180:tmk_core/common/report.c ****     }
 181:tmk_core/common/report.c **** #endif
 182:tmk_core/common/report.c **** }
 204               		.loc 1 182 1 view .LVU54
 205 0018 0895      		ret
 206               		.cfi_endproc
 207               	.LFE4:
 209               		.section	.text.add_key_to_report,"ax",@progbits
 210               	.global	add_key_to_report
 212               	add_key_to_report:
 213               	.LVL17:
 214               	.LFB5:
 183:tmk_core/common/report.c **** 
 184:tmk_core/common/report.c **** #ifdef NKRO_ENABLE
 185:tmk_core/common/report.c **** /** \brief add key bit
 186:tmk_core/common/report.c ****  *
 187:tmk_core/common/report.c ****  * FIXME: Needs doc
 188:tmk_core/common/report.c ****  */
 189:tmk_core/common/report.c **** void add_key_bit(report_keyboard_t* keyboard_report, uint8_t code)
 190:tmk_core/common/report.c **** {
 191:tmk_core/common/report.c ****     if ((code>>3) < KEYBOARD_REPORT_BITS) {
 192:tmk_core/common/report.c ****         keyboard_report->nkro.bits[code>>3] |= 1<<(code&7);
 193:tmk_core/common/report.c ****     } else {
 194:tmk_core/common/report.c ****         dprintf("add_key_bit: can't add: %02X\n", code);
 195:tmk_core/common/report.c ****     }
 196:tmk_core/common/report.c **** }
 197:tmk_core/common/report.c **** 
 198:tmk_core/common/report.c **** /** \brief del key bit
 199:tmk_core/common/report.c ****  *
 200:tmk_core/common/report.c ****  * FIXME: Needs doc
 201:tmk_core/common/report.c ****  */
 202:tmk_core/common/report.c **** void del_key_bit(report_keyboard_t* keyboard_report, uint8_t code)
 203:tmk_core/common/report.c **** {
 204:tmk_core/common/report.c ****     if ((code>>3) < KEYBOARD_REPORT_BITS) {
 205:tmk_core/common/report.c ****         keyboard_report->nkro.bits[code>>3] &= ~(1<<(code&7));
 206:tmk_core/common/report.c ****     } else {
 207:tmk_core/common/report.c ****         dprintf("del_key_bit: can't del: %02X\n", code);
 208:tmk_core/common/report.c ****     }
 209:tmk_core/common/report.c **** }
 210:tmk_core/common/report.c **** #endif
 211:tmk_core/common/report.c **** 
 212:tmk_core/common/report.c **** /** \brief add key to report
 213:tmk_core/common/report.c ****  *
 214:tmk_core/common/report.c ****  * FIXME: Needs doc
 215:tmk_core/common/report.c ****  */
 216:tmk_core/common/report.c **** void add_key_to_report(report_keyboard_t* keyboard_report, uint8_t key)
 217:tmk_core/common/report.c **** {
 215               		.loc 1 217 1 is_stmt 1 view -0
 216               		.cfi_startproc
 217               	/* prologue: function */
 218               	/* frame size = 0 */
 219               	/* stack size = 0 */
 220               	.L__stack_usage = 0
 218:tmk_core/common/report.c **** #ifdef NKRO_ENABLE
 219:tmk_core/common/report.c ****     if (keyboard_protocol && keymap_config.nkro) {
 220:tmk_core/common/report.c ****         add_key_bit(keyboard_report, key);
 221:tmk_core/common/report.c ****         return;
 222:tmk_core/common/report.c ****     }
 223:tmk_core/common/report.c **** #endif
 224:tmk_core/common/report.c ****     add_key_byte(keyboard_report, key);
 221               		.loc 1 224 5 view .LVU56
 222 0000 0C94 0000 		jmp add_key_byte
 223               	.LVL18:
 224               		.loc 1 224 5 is_stmt 0 view .LVU57
 225               		.cfi_endproc
 226               	.LFE5:
 228               		.section	.text.del_key_from_report,"ax",@progbits
 229               	.global	del_key_from_report
 231               	del_key_from_report:
 232               	.LVL19:
 233               	.LFB6:
 225:tmk_core/common/report.c **** }
 226:tmk_core/common/report.c **** 
 227:tmk_core/common/report.c **** /** \brief del key from report
 228:tmk_core/common/report.c ****  *
 229:tmk_core/common/report.c ****  * FIXME: Needs doc
 230:tmk_core/common/report.c ****  */
 231:tmk_core/common/report.c **** void del_key_from_report(report_keyboard_t* keyboard_report, uint8_t key)
 232:tmk_core/common/report.c **** {
 234               		.loc 1 232 1 is_stmt 1 view -0
 235               		.cfi_startproc
 236               	/* prologue: function */
 237               	/* frame size = 0 */
 238               	/* stack size = 0 */
 239               	.L__stack_usage = 0
 233:tmk_core/common/report.c **** #ifdef NKRO_ENABLE
 234:tmk_core/common/report.c ****     if (keyboard_protocol && keymap_config.nkro) {
 235:tmk_core/common/report.c ****         del_key_bit(keyboard_report, key);
 236:tmk_core/common/report.c ****         return;
 237:tmk_core/common/report.c ****     }
 238:tmk_core/common/report.c **** #endif
 239:tmk_core/common/report.c ****     del_key_byte(keyboard_report, key);
 240               		.loc 1 239 5 view .LVU59
 241 0000 0C94 0000 		jmp del_key_byte
 242               	.LVL20:
 243               		.loc 1 239 5 is_stmt 0 view .LVU60
 244               		.cfi_endproc
 245               	.LFE6:
 247               		.section	.text.clear_keys_from_report,"ax",@progbits
 248               	.global	clear_keys_from_report
 250               	clear_keys_from_report:
 251               	.LVL21:
 252               	.LFB7:
 240:tmk_core/common/report.c **** }
 241:tmk_core/common/report.c **** 
 242:tmk_core/common/report.c **** /** \brief clear key from report
 243:tmk_core/common/report.c ****  *
 244:tmk_core/common/report.c ****  * FIXME: Needs doc
 245:tmk_core/common/report.c ****  */
 246:tmk_core/common/report.c **** void clear_keys_from_report(report_keyboard_t* keyboard_report)
 247:tmk_core/common/report.c **** {
 253               		.loc 1 247 1 is_stmt 1 view -0
 254               		.cfi_startproc
 255               	/* prologue: function */
 256               	/* frame size = 0 */
 257               	/* stack size = 0 */
 258               	.L__stack_usage = 0
 248:tmk_core/common/report.c ****     // not clear mods
 249:tmk_core/common/report.c **** #ifdef NKRO_ENABLE
 250:tmk_core/common/report.c ****     if (keyboard_protocol && keymap_config.nkro) {
 251:tmk_core/common/report.c ****         memset(keyboard_report->nkro.bits, 0, sizeof(keyboard_report->nkro.bits));
 252:tmk_core/common/report.c ****         return;
 253:tmk_core/common/report.c ****     }
 254:tmk_core/common/report.c **** #endif
 255:tmk_core/common/report.c ****     memset(keyboard_report->keys, 0, sizeof(keyboard_report->keys));
 259               		.loc 1 255 5 view .LVU62
 260 0000 0296      		adiw r24,2
 261               	.LVL22:
 262               		.loc 1 255 5 is_stmt 0 view .LVU63
 263 0002 26E0      		ldi r18,lo8(6)
 264 0004 FC01      		movw r30,r24
 265               		0:
 266 0006 1192      		st Z+,__zero_reg__
 267 0008 2A95      		dec r18
 268 000a 01F4      		brne 0b
 269               	/* epilogue start */
 256:tmk_core/common/report.c **** }
 270               		.loc 1 256 1 view .LVU64
 271 000c 0895      		ret
 272               		.cfi_endproc
 273               	.LFE7:
 275               		.text
 276               	.Letext0:
 277               		.file 2 "/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/stdint.h"
 278               		.file 3 "tmk_core/common/report.h"
 279               		.file 4 "tmk_core/common/host.h"
 280               		.file 5 "quantum/keycode_config.h"
 281               		.file 6 "tmk_core/common/avr/xprintf.h"
 282               		.file 7 "tmk_core/common/debug.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 report.c
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//cceQtZe4.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//cceQtZe4.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//cceQtZe4.s:4      *ABS*:000000000000003f __SREG__
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//cceQtZe4.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//cceQtZe4.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//cceQtZe4.s:13     .text.has_anykey:0000000000000000 has_anykey
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//cceQtZe4.s:68     .text.get_first_key:0000000000000000 get_first_key
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//cceQtZe4.s:91     .text.add_key_byte:0000000000000000 add_key_byte
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//cceQtZe4.s:166    .text.del_key_byte:0000000000000000 del_key_byte
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//cceQtZe4.s:212    .text.add_key_to_report:0000000000000000 add_key_to_report
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//cceQtZe4.s:231    .text.del_key_from_report:0000000000000000 del_key_from_report
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//cceQtZe4.s:250    .text.clear_keys_from_report:0000000000000000 clear_keys_from_report

NO UNDEFINED SYMBOLS
