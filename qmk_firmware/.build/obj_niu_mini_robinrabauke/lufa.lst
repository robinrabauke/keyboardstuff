   1               		.file	"lufa.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.keyboard_leds,"ax",@progbits
  12               	keyboard_leds:
  13               	.LFB129:
  14               		.file 1 "tmk_core/protocol/lufa/lufa.c"
   1:tmk_core/protocol/lufa/lufa.c **** /*
   2:tmk_core/protocol/lufa/lufa.c ****  * Copyright 2012 Jun Wako <wakojun@gmail.com>
   3:tmk_core/protocol/lufa/lufa.c ****  * This file is based on:
   4:tmk_core/protocol/lufa/lufa.c ****  *     LUFA-120219/Demos/Device/Lowlevel/KeyboardMouse
   5:tmk_core/protocol/lufa/lufa.c ****  *     LUFA-120219/Demos/Device/Lowlevel/GenericHID
   6:tmk_core/protocol/lufa/lufa.c ****  */
   7:tmk_core/protocol/lufa/lufa.c **** 
   8:tmk_core/protocol/lufa/lufa.c **** /*
   9:tmk_core/protocol/lufa/lufa.c ****              LUFA Library
  10:tmk_core/protocol/lufa/lufa.c ****      Copyright (C) Dean Camera, 2012.
  11:tmk_core/protocol/lufa/lufa.c **** 
  12:tmk_core/protocol/lufa/lufa.c ****   dean [at] fourwalledcubicle [dot] com
  13:tmk_core/protocol/lufa/lufa.c ****            www.lufa-lib.org
  14:tmk_core/protocol/lufa/lufa.c **** */
  15:tmk_core/protocol/lufa/lufa.c **** 
  16:tmk_core/protocol/lufa/lufa.c **** /*
  17:tmk_core/protocol/lufa/lufa.c ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  18:tmk_core/protocol/lufa/lufa.c ****   Copyright 2010  Denver Gingerich (denver [at] ossguy [dot] com)
  19:tmk_core/protocol/lufa/lufa.c **** 
  20:tmk_core/protocol/lufa/lufa.c ****   Permission to use, copy, modify, distribute, and sell this
  21:tmk_core/protocol/lufa/lufa.c ****   software and its documentation for any purpose is hereby granted
  22:tmk_core/protocol/lufa/lufa.c ****   without fee, provided that the above copyright notice appear in
  23:tmk_core/protocol/lufa/lufa.c ****   all copies and that both that the copyright notice and this
  24:tmk_core/protocol/lufa/lufa.c ****   permission notice and warranty disclaimer appear in supporting
  25:tmk_core/protocol/lufa/lufa.c ****   documentation, and that the name of the author not be used in
  26:tmk_core/protocol/lufa/lufa.c ****   advertising or publicity pertaining to distribution of the
  27:tmk_core/protocol/lufa/lufa.c ****   software without specific, written prior permission.
  28:tmk_core/protocol/lufa/lufa.c **** 
  29:tmk_core/protocol/lufa/lufa.c ****   The author disclaim all warranties with regard to this
  30:tmk_core/protocol/lufa/lufa.c ****   software, including all implied warranties of merchantability
  31:tmk_core/protocol/lufa/lufa.c ****   and fitness.  In no event shall the author be liable for any
  32:tmk_core/protocol/lufa/lufa.c ****   special, indirect or consequential damages or any damages
  33:tmk_core/protocol/lufa/lufa.c ****   whatsoever resulting from loss of use, data or profits, whether
  34:tmk_core/protocol/lufa/lufa.c ****   in an action of contract, negligence or other tortious action,
  35:tmk_core/protocol/lufa/lufa.c ****   arising out of or in connection with the use or performance of
  36:tmk_core/protocol/lufa/lufa.c ****   this software.
  37:tmk_core/protocol/lufa/lufa.c **** */
  38:tmk_core/protocol/lufa/lufa.c **** 
  39:tmk_core/protocol/lufa/lufa.c **** #include "report.h"
  40:tmk_core/protocol/lufa/lufa.c **** #include "host.h"
  41:tmk_core/protocol/lufa/lufa.c **** #include "host_driver.h"
  42:tmk_core/protocol/lufa/lufa.c **** #include "keyboard.h"
  43:tmk_core/protocol/lufa/lufa.c **** #include "action.h"
  44:tmk_core/protocol/lufa/lufa.c **** #include "led.h"
  45:tmk_core/protocol/lufa/lufa.c **** #include "sendchar.h"
  46:tmk_core/protocol/lufa/lufa.c **** #include "debug.h"
  47:tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
  48:tmk_core/protocol/lufa/lufa.c **** #include "sleep_led.h"
  49:tmk_core/protocol/lufa/lufa.c **** #endif
  50:tmk_core/protocol/lufa/lufa.c **** #include "suspend.h"
  51:tmk_core/protocol/lufa/lufa.c **** 
  52:tmk_core/protocol/lufa/lufa.c **** #include "usb_descriptor.h"
  53:tmk_core/protocol/lufa/lufa.c **** #include "lufa.h"
  54:tmk_core/protocol/lufa/lufa.c **** #include "quantum.h"
  55:tmk_core/protocol/lufa/lufa.c **** #include <util/atomic.h>
  56:tmk_core/protocol/lufa/lufa.c **** #include "outputselect.h"
  57:tmk_core/protocol/lufa/lufa.c **** #include "rgblight_reconfig.h"
  58:tmk_core/protocol/lufa/lufa.c **** 
  59:tmk_core/protocol/lufa/lufa.c **** #ifdef NKRO_ENABLE
  60:tmk_core/protocol/lufa/lufa.c ****   #include "keycode_config.h"
  61:tmk_core/protocol/lufa/lufa.c **** 
  62:tmk_core/protocol/lufa/lufa.c ****   extern keymap_config_t keymap_config;
  63:tmk_core/protocol/lufa/lufa.c **** #endif
  64:tmk_core/protocol/lufa/lufa.c **** 
  65:tmk_core/protocol/lufa/lufa.c **** 
  66:tmk_core/protocol/lufa/lufa.c **** #ifdef AUDIO_ENABLE
  67:tmk_core/protocol/lufa/lufa.c ****     #include <audio.h>
  68:tmk_core/protocol/lufa/lufa.c **** #endif
  69:tmk_core/protocol/lufa/lufa.c **** 
  70:tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
  71:tmk_core/protocol/lufa/lufa.c ****   #ifdef MODULE_ADAFRUIT_BLE
  72:tmk_core/protocol/lufa/lufa.c ****     #include "adafruit_ble.h"
  73:tmk_core/protocol/lufa/lufa.c ****   #else
  74:tmk_core/protocol/lufa/lufa.c ****     #include "bluetooth.h"
  75:tmk_core/protocol/lufa/lufa.c ****   #endif
  76:tmk_core/protocol/lufa/lufa.c **** #endif
  77:tmk_core/protocol/lufa/lufa.c **** 
  78:tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
  79:tmk_core/protocol/lufa/lufa.c ****     #include "virtser.h"
  80:tmk_core/protocol/lufa/lufa.c **** #endif
  81:tmk_core/protocol/lufa/lufa.c **** 
  82:tmk_core/protocol/lufa/lufa.c **** #if (defined(RGB_MIDI) | defined(RGBLIGHT_ANIMATIONS)) & defined(RGBLIGHT_ENABLE)
  83:tmk_core/protocol/lufa/lufa.c ****     #include "rgblight.h"
  84:tmk_core/protocol/lufa/lufa.c **** #endif
  85:tmk_core/protocol/lufa/lufa.c **** 
  86:tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
  87:tmk_core/protocol/lufa/lufa.c ****   #include "qmk_midi.h"
  88:tmk_core/protocol/lufa/lufa.c **** #endif
  89:tmk_core/protocol/lufa/lufa.c **** 
  90:tmk_core/protocol/lufa/lufa.c **** #ifdef RAW_ENABLE
  91:tmk_core/protocol/lufa/lufa.c **** 	#include "raw_hid.h"
  92:tmk_core/protocol/lufa/lufa.c **** #endif
  93:tmk_core/protocol/lufa/lufa.c **** 
  94:tmk_core/protocol/lufa/lufa.c **** uint8_t keyboard_idle = 0;
  95:tmk_core/protocol/lufa/lufa.c **** /* 0: Boot Protocol, 1: Report Protocol(default) */
  96:tmk_core/protocol/lufa/lufa.c **** uint8_t keyboard_protocol = 1;
  97:tmk_core/protocol/lufa/lufa.c **** static uint8_t keyboard_led_stats = 0;
  98:tmk_core/protocol/lufa/lufa.c **** 
  99:tmk_core/protocol/lufa/lufa.c **** static report_keyboard_t keyboard_report_sent;
 100:tmk_core/protocol/lufa/lufa.c **** 
 101:tmk_core/protocol/lufa/lufa.c **** /* Host driver */
 102:tmk_core/protocol/lufa/lufa.c **** static uint8_t keyboard_leds(void);
 103:tmk_core/protocol/lufa/lufa.c **** static void send_keyboard(report_keyboard_t *report);
 104:tmk_core/protocol/lufa/lufa.c **** static void send_mouse(report_mouse_t *report);
 105:tmk_core/protocol/lufa/lufa.c **** static void send_system(uint16_t data);
 106:tmk_core/protocol/lufa/lufa.c **** static void send_consumer(uint16_t data);
 107:tmk_core/protocol/lufa/lufa.c **** host_driver_t lufa_driver = {
 108:tmk_core/protocol/lufa/lufa.c ****     keyboard_leds,
 109:tmk_core/protocol/lufa/lufa.c ****     send_keyboard,
 110:tmk_core/protocol/lufa/lufa.c ****     send_mouse,
 111:tmk_core/protocol/lufa/lufa.c ****     send_system,
 112:tmk_core/protocol/lufa/lufa.c ****     send_consumer,
 113:tmk_core/protocol/lufa/lufa.c **** };
 114:tmk_core/protocol/lufa/lufa.c **** 
 115:tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
 116:tmk_core/protocol/lufa/lufa.c **** USB_ClassInfo_CDC_Device_t cdc_device =
 117:tmk_core/protocol/lufa/lufa.c **** {
 118:tmk_core/protocol/lufa/lufa.c ****   .Config =
 119:tmk_core/protocol/lufa/lufa.c ****   {
 120:tmk_core/protocol/lufa/lufa.c ****     .ControlInterfaceNumber = CCI_INTERFACE,
 121:tmk_core/protocol/lufa/lufa.c ****     .DataINEndpoint         =
 122:tmk_core/protocol/lufa/lufa.c ****     {
 123:tmk_core/protocol/lufa/lufa.c ****       .Address		= CDC_IN_EPADDR,
 124:tmk_core/protocol/lufa/lufa.c ****       .Size		= CDC_EPSIZE,
 125:tmk_core/protocol/lufa/lufa.c ****       .Banks		= 1,
 126:tmk_core/protocol/lufa/lufa.c ****     },
 127:tmk_core/protocol/lufa/lufa.c ****     .DataOUTEndpoint	    =
 128:tmk_core/protocol/lufa/lufa.c ****     {
 129:tmk_core/protocol/lufa/lufa.c ****       .Address		= CDC_OUT_EPADDR,
 130:tmk_core/protocol/lufa/lufa.c ****       .Size		= CDC_EPSIZE,
 131:tmk_core/protocol/lufa/lufa.c ****       .Banks		= 1,
 132:tmk_core/protocol/lufa/lufa.c ****     },
 133:tmk_core/protocol/lufa/lufa.c ****     .NotificationEndpoint   =
 134:tmk_core/protocol/lufa/lufa.c ****     {
 135:tmk_core/protocol/lufa/lufa.c ****       .Address		= CDC_NOTIFICATION_EPADDR,
 136:tmk_core/protocol/lufa/lufa.c ****       .Size		= CDC_NOTIFICATION_EPSIZE,
 137:tmk_core/protocol/lufa/lufa.c ****       .Banks		= 1,
 138:tmk_core/protocol/lufa/lufa.c ****     },
 139:tmk_core/protocol/lufa/lufa.c ****   },
 140:tmk_core/protocol/lufa/lufa.c **** };
 141:tmk_core/protocol/lufa/lufa.c **** #endif
 142:tmk_core/protocol/lufa/lufa.c **** 
 143:tmk_core/protocol/lufa/lufa.c **** #ifdef RAW_ENABLE
 144:tmk_core/protocol/lufa/lufa.c **** 
 145:tmk_core/protocol/lufa/lufa.c **** /** \brief Raw HID Send
 146:tmk_core/protocol/lufa/lufa.c ****  *
 147:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 148:tmk_core/protocol/lufa/lufa.c ****  */
 149:tmk_core/protocol/lufa/lufa.c **** void raw_hid_send( uint8_t *data, uint8_t length )
 150:tmk_core/protocol/lufa/lufa.c **** {
 151:tmk_core/protocol/lufa/lufa.c **** 	// TODO: implement variable size packet
 152:tmk_core/protocol/lufa/lufa.c **** 	if ( length != RAW_EPSIZE )
 153:tmk_core/protocol/lufa/lufa.c **** 	{
 154:tmk_core/protocol/lufa/lufa.c **** 		return;
 155:tmk_core/protocol/lufa/lufa.c **** 	}
 156:tmk_core/protocol/lufa/lufa.c **** 
 157:tmk_core/protocol/lufa/lufa.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 158:tmk_core/protocol/lufa/lufa.c **** 	{
 159:tmk_core/protocol/lufa/lufa.c **** 		return;
 160:tmk_core/protocol/lufa/lufa.c **** 	}
 161:tmk_core/protocol/lufa/lufa.c **** 
 162:tmk_core/protocol/lufa/lufa.c **** 	// TODO: decide if we allow calls to raw_hid_send() in the middle
 163:tmk_core/protocol/lufa/lufa.c **** 	// of other endpoint usage.
 164:tmk_core/protocol/lufa/lufa.c **** 	uint8_t ep = Endpoint_GetCurrentEndpoint();
 165:tmk_core/protocol/lufa/lufa.c **** 
 166:tmk_core/protocol/lufa/lufa.c **** 	Endpoint_SelectEndpoint(RAW_IN_EPNUM);
 167:tmk_core/protocol/lufa/lufa.c **** 
 168:tmk_core/protocol/lufa/lufa.c **** 	// Check to see if the host is ready to accept another packet
 169:tmk_core/protocol/lufa/lufa.c **** 	if (Endpoint_IsINReady())
 170:tmk_core/protocol/lufa/lufa.c **** 	{
 171:tmk_core/protocol/lufa/lufa.c **** 		// Write data
 172:tmk_core/protocol/lufa/lufa.c **** 		Endpoint_Write_Stream_LE(data, RAW_EPSIZE, NULL);
 173:tmk_core/protocol/lufa/lufa.c **** 		// Finalize the stream transfer to send the last packet
 174:tmk_core/protocol/lufa/lufa.c **** 		Endpoint_ClearIN();
 175:tmk_core/protocol/lufa/lufa.c **** 	}
 176:tmk_core/protocol/lufa/lufa.c **** 
 177:tmk_core/protocol/lufa/lufa.c **** 	Endpoint_SelectEndpoint(ep);
 178:tmk_core/protocol/lufa/lufa.c **** }
 179:tmk_core/protocol/lufa/lufa.c **** 
 180:tmk_core/protocol/lufa/lufa.c **** /** \brief Raw HID Receive
 181:tmk_core/protocol/lufa/lufa.c ****  *
 182:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 183:tmk_core/protocol/lufa/lufa.c ****  */
 184:tmk_core/protocol/lufa/lufa.c **** __attribute__ ((weak))
 185:tmk_core/protocol/lufa/lufa.c **** void raw_hid_receive( uint8_t *data, uint8_t length )
 186:tmk_core/protocol/lufa/lufa.c **** {
 187:tmk_core/protocol/lufa/lufa.c **** 	// Users should #include "raw_hid.h" in their own code
 188:tmk_core/protocol/lufa/lufa.c **** 	// and implement this function there. Leave this as weak linkage
 189:tmk_core/protocol/lufa/lufa.c **** 	// so users can opt to not handle data coming in.
 190:tmk_core/protocol/lufa/lufa.c **** }
 191:tmk_core/protocol/lufa/lufa.c **** 
 192:tmk_core/protocol/lufa/lufa.c **** /** \brief Raw HID Task
 193:tmk_core/protocol/lufa/lufa.c ****  *
 194:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 195:tmk_core/protocol/lufa/lufa.c ****  */
 196:tmk_core/protocol/lufa/lufa.c **** static void raw_hid_task(void)
 197:tmk_core/protocol/lufa/lufa.c **** {
 198:tmk_core/protocol/lufa/lufa.c **** 	// Create a temporary buffer to hold the read in data from the host
 199:tmk_core/protocol/lufa/lufa.c **** 	uint8_t data[RAW_EPSIZE];
 200:tmk_core/protocol/lufa/lufa.c **** 	bool data_read = false;
 201:tmk_core/protocol/lufa/lufa.c **** 
 202:tmk_core/protocol/lufa/lufa.c **** 	// Device must be connected and configured for the task to run
 203:tmk_core/protocol/lufa/lufa.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 204:tmk_core/protocol/lufa/lufa.c **** 	return;
 205:tmk_core/protocol/lufa/lufa.c **** 
 206:tmk_core/protocol/lufa/lufa.c **** 	Endpoint_SelectEndpoint(RAW_OUT_EPNUM);
 207:tmk_core/protocol/lufa/lufa.c **** 
 208:tmk_core/protocol/lufa/lufa.c **** 	// Check to see if a packet has been sent from the host
 209:tmk_core/protocol/lufa/lufa.c **** 	if (Endpoint_IsOUTReceived())
 210:tmk_core/protocol/lufa/lufa.c **** 	{
 211:tmk_core/protocol/lufa/lufa.c **** 		// Check to see if the packet contains data
 212:tmk_core/protocol/lufa/lufa.c **** 		if (Endpoint_IsReadWriteAllowed())
 213:tmk_core/protocol/lufa/lufa.c **** 		{
 214:tmk_core/protocol/lufa/lufa.c **** 			/* Read data */
 215:tmk_core/protocol/lufa/lufa.c **** 			Endpoint_Read_Stream_LE(data, sizeof(data), NULL);
 216:tmk_core/protocol/lufa/lufa.c **** 			data_read = true;
 217:tmk_core/protocol/lufa/lufa.c **** 		}
 218:tmk_core/protocol/lufa/lufa.c **** 
 219:tmk_core/protocol/lufa/lufa.c **** 		// Finalize the stream transfer to receive the last packet
 220:tmk_core/protocol/lufa/lufa.c **** 		Endpoint_ClearOUT();
 221:tmk_core/protocol/lufa/lufa.c **** 
 222:tmk_core/protocol/lufa/lufa.c **** 		if ( data_read )
 223:tmk_core/protocol/lufa/lufa.c **** 		{
 224:tmk_core/protocol/lufa/lufa.c **** 			raw_hid_receive( data, sizeof(data) );
 225:tmk_core/protocol/lufa/lufa.c **** 		}
 226:tmk_core/protocol/lufa/lufa.c **** 	}
 227:tmk_core/protocol/lufa/lufa.c **** }
 228:tmk_core/protocol/lufa/lufa.c **** #endif
 229:tmk_core/protocol/lufa/lufa.c **** 
 230:tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 231:tmk_core/protocol/lufa/lufa.c ****  * Console
 232:tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 233:tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
 234:tmk_core/protocol/lufa/lufa.c **** /** \brief Console Task
 235:tmk_core/protocol/lufa/lufa.c ****  *
 236:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 237:tmk_core/protocol/lufa/lufa.c ****  */
 238:tmk_core/protocol/lufa/lufa.c **** static void Console_Task(void)
 239:tmk_core/protocol/lufa/lufa.c **** {
 240:tmk_core/protocol/lufa/lufa.c ****     /* Device must be connected and configured for the task to run */
 241:tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 242:tmk_core/protocol/lufa/lufa.c ****         return;
 243:tmk_core/protocol/lufa/lufa.c **** 
 244:tmk_core/protocol/lufa/lufa.c ****     uint8_t ep = Endpoint_GetCurrentEndpoint();
 245:tmk_core/protocol/lufa/lufa.c **** 
 246:tmk_core/protocol/lufa/lufa.c **** #if 0
 247:tmk_core/protocol/lufa/lufa.c ****     // TODO: impl receivechar()/recvchar()
 248:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(CONSOLE_OUT_EPNUM);
 249:tmk_core/protocol/lufa/lufa.c **** 
 250:tmk_core/protocol/lufa/lufa.c ****     /* Check to see if a packet has been sent from the host */
 251:tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsOUTReceived())
 252:tmk_core/protocol/lufa/lufa.c ****     {
 253:tmk_core/protocol/lufa/lufa.c ****         /* Check to see if the packet contains data */
 254:tmk_core/protocol/lufa/lufa.c ****         if (Endpoint_IsReadWriteAllowed())
 255:tmk_core/protocol/lufa/lufa.c ****         {
 256:tmk_core/protocol/lufa/lufa.c ****             /* Create a temporary buffer to hold the read in report from the host */
 257:tmk_core/protocol/lufa/lufa.c ****             uint8_t ConsoleData[CONSOLE_EPSIZE];
 258:tmk_core/protocol/lufa/lufa.c **** 
 259:tmk_core/protocol/lufa/lufa.c ****             /* Read Console Report Data */
 260:tmk_core/protocol/lufa/lufa.c ****             Endpoint_Read_Stream_LE(&ConsoleData, sizeof(ConsoleData), NULL);
 261:tmk_core/protocol/lufa/lufa.c **** 
 262:tmk_core/protocol/lufa/lufa.c ****             /* Process Console Report Data */
 263:tmk_core/protocol/lufa/lufa.c ****             //ProcessConsoleHIDReport(ConsoleData);
 264:tmk_core/protocol/lufa/lufa.c ****         }
 265:tmk_core/protocol/lufa/lufa.c **** 
 266:tmk_core/protocol/lufa/lufa.c ****         /* Finalize the stream transfer to send the last packet */
 267:tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearOUT();
 268:tmk_core/protocol/lufa/lufa.c ****     }
 269:tmk_core/protocol/lufa/lufa.c **** #endif
 270:tmk_core/protocol/lufa/lufa.c **** 
 271:tmk_core/protocol/lufa/lufa.c ****     /* IN packet */
 272:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(CONSOLE_IN_EPNUM);
 273:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsEnabled() || !Endpoint_IsConfigured()) {
 274:tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(ep);
 275:tmk_core/protocol/lufa/lufa.c ****         return;
 276:tmk_core/protocol/lufa/lufa.c ****     }
 277:tmk_core/protocol/lufa/lufa.c **** 
 278:tmk_core/protocol/lufa/lufa.c ****     // fill empty bank
 279:tmk_core/protocol/lufa/lufa.c ****     while (Endpoint_IsReadWriteAllowed())
 280:tmk_core/protocol/lufa/lufa.c ****         Endpoint_Write_8(0);
 281:tmk_core/protocol/lufa/lufa.c **** 
 282:tmk_core/protocol/lufa/lufa.c ****     // flash senchar packet
 283:tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsINReady()) {
 284:tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearIN();
 285:tmk_core/protocol/lufa/lufa.c ****     }
 286:tmk_core/protocol/lufa/lufa.c **** 
 287:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
 288:tmk_core/protocol/lufa/lufa.c **** }
 289:tmk_core/protocol/lufa/lufa.c **** #endif
 290:tmk_core/protocol/lufa/lufa.c **** 
 291:tmk_core/protocol/lufa/lufa.c **** 
 292:tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 293:tmk_core/protocol/lufa/lufa.c ****  * USB Events
 294:tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 295:tmk_core/protocol/lufa/lufa.c **** /*
 296:tmk_core/protocol/lufa/lufa.c ****  * Event Order of Plug in:
 297:tmk_core/protocol/lufa/lufa.c ****  * 0) EVENT_USB_Device_Connect
 298:tmk_core/protocol/lufa/lufa.c ****  * 1) EVENT_USB_Device_Suspend
 299:tmk_core/protocol/lufa/lufa.c ****  * 2) EVENT_USB_Device_Reset
 300:tmk_core/protocol/lufa/lufa.c ****  * 3) EVENT_USB_Device_Wake
 301:tmk_core/protocol/lufa/lufa.c **** */
 302:tmk_core/protocol/lufa/lufa.c **** /** \brief Event USB Device Connect
 303:tmk_core/protocol/lufa/lufa.c ****  *
 304:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 305:tmk_core/protocol/lufa/lufa.c ****  */
 306:tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Connect(void)
 307:tmk_core/protocol/lufa/lufa.c **** {
 308:tmk_core/protocol/lufa/lufa.c ****     print("[C]");
 309:tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 310:tmk_core/protocol/lufa/lufa.c ****     if (!USB_IsInitialized) {
 311:tmk_core/protocol/lufa/lufa.c ****         USB_Disable();
 312:tmk_core/protocol/lufa/lufa.c ****         USB_Init();
 313:tmk_core/protocol/lufa/lufa.c ****         USB_Device_EnableSOFEvents();
 314:tmk_core/protocol/lufa/lufa.c ****     }
 315:tmk_core/protocol/lufa/lufa.c **** }
 316:tmk_core/protocol/lufa/lufa.c **** 
 317:tmk_core/protocol/lufa/lufa.c **** /** \brief Event USB Device Connect
 318:tmk_core/protocol/lufa/lufa.c ****  *
 319:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 320:tmk_core/protocol/lufa/lufa.c ****  */
 321:tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Disconnect(void)
 322:tmk_core/protocol/lufa/lufa.c **** {
 323:tmk_core/protocol/lufa/lufa.c ****     print("[D]");
 324:tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 325:tmk_core/protocol/lufa/lufa.c ****     USB_IsInitialized = false;
 326:tmk_core/protocol/lufa/lufa.c **** /* TODO: This doesn't work. After several plug in/outs can not be enumerated.
 327:tmk_core/protocol/lufa/lufa.c ****     if (USB_IsInitialized) {
 328:tmk_core/protocol/lufa/lufa.c ****         USB_Disable();  // Disable all interrupts
 329:tmk_core/protocol/lufa/lufa.c **** 	USB_Controller_Enable();
 330:tmk_core/protocol/lufa/lufa.c ****         USB_INT_Enable(USB_INT_VBUSTI);
 331:tmk_core/protocol/lufa/lufa.c ****     }
 332:tmk_core/protocol/lufa/lufa.c **** */
 333:tmk_core/protocol/lufa/lufa.c **** }
 334:tmk_core/protocol/lufa/lufa.c **** 
 335:tmk_core/protocol/lufa/lufa.c **** /** \brief Event USB Device Connect
 336:tmk_core/protocol/lufa/lufa.c ****  *
 337:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 338:tmk_core/protocol/lufa/lufa.c ****  */
 339:tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Reset(void)
 340:tmk_core/protocol/lufa/lufa.c **** {
 341:tmk_core/protocol/lufa/lufa.c ****     print("[R]");
 342:tmk_core/protocol/lufa/lufa.c **** }
 343:tmk_core/protocol/lufa/lufa.c **** 
 344:tmk_core/protocol/lufa/lufa.c **** /** \brief Event USB Device Connect
 345:tmk_core/protocol/lufa/lufa.c ****  *
 346:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 347:tmk_core/protocol/lufa/lufa.c ****  */
 348:tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Suspend()
 349:tmk_core/protocol/lufa/lufa.c **** {
 350:tmk_core/protocol/lufa/lufa.c ****     print("[S]");
 351:tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
 352:tmk_core/protocol/lufa/lufa.c ****     sleep_led_enable();
 353:tmk_core/protocol/lufa/lufa.c **** #endif
 354:tmk_core/protocol/lufa/lufa.c **** }
 355:tmk_core/protocol/lufa/lufa.c **** 
 356:tmk_core/protocol/lufa/lufa.c **** /** \brief Event USB Device Connect
 357:tmk_core/protocol/lufa/lufa.c ****  *
 358:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 359:tmk_core/protocol/lufa/lufa.c ****  */
 360:tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_WakeUp()
 361:tmk_core/protocol/lufa/lufa.c **** {
 362:tmk_core/protocol/lufa/lufa.c ****     print("[W]");
 363:tmk_core/protocol/lufa/lufa.c ****     suspend_wakeup_init();
 364:tmk_core/protocol/lufa/lufa.c **** 
 365:tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
 366:tmk_core/protocol/lufa/lufa.c ****     sleep_led_disable();
 367:tmk_core/protocol/lufa/lufa.c ****     // NOTE: converters may not accept this
 368:tmk_core/protocol/lufa/lufa.c ****     led_set(host_keyboard_leds());
 369:tmk_core/protocol/lufa/lufa.c **** #endif
 370:tmk_core/protocol/lufa/lufa.c **** }
 371:tmk_core/protocol/lufa/lufa.c **** 
 372:tmk_core/protocol/lufa/lufa.c **** 
 373:tmk_core/protocol/lufa/lufa.c **** 
 374:tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
 375:tmk_core/protocol/lufa/lufa.c **** static bool console_flush = false;
 376:tmk_core/protocol/lufa/lufa.c **** #define CONSOLE_FLUSH_SET(b)   do { \
 377:tmk_core/protocol/lufa/lufa.c ****   ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {\
 378:tmk_core/protocol/lufa/lufa.c ****     console_flush = b; \
 379:tmk_core/protocol/lufa/lufa.c ****   } \
 380:tmk_core/protocol/lufa/lufa.c **** } while (0)
 381:tmk_core/protocol/lufa/lufa.c **** 
 382:tmk_core/protocol/lufa/lufa.c **** /** \brief Event USB Device Start Of Frame
 383:tmk_core/protocol/lufa/lufa.c ****  *
 384:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 385:tmk_core/protocol/lufa/lufa.c ****  * called every 1ms
 386:tmk_core/protocol/lufa/lufa.c ****  */
 387:tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_StartOfFrame(void)
 388:tmk_core/protocol/lufa/lufa.c **** {
 389:tmk_core/protocol/lufa/lufa.c ****     static uint8_t count;
 390:tmk_core/protocol/lufa/lufa.c ****     if (++count % 50) return;
 391:tmk_core/protocol/lufa/lufa.c ****     count = 0;
 392:tmk_core/protocol/lufa/lufa.c **** 
 393:tmk_core/protocol/lufa/lufa.c ****     if (!console_flush) return;
 394:tmk_core/protocol/lufa/lufa.c ****     Console_Task();
 395:tmk_core/protocol/lufa/lufa.c ****     console_flush = false;
 396:tmk_core/protocol/lufa/lufa.c **** }
 397:tmk_core/protocol/lufa/lufa.c **** 
 398:tmk_core/protocol/lufa/lufa.c **** #endif
 399:tmk_core/protocol/lufa/lufa.c **** 
 400:tmk_core/protocol/lufa/lufa.c **** /** \brief Event handler for the USB_ConfigurationChanged event.
 401:tmk_core/protocol/lufa/lufa.c ****  *
 402:tmk_core/protocol/lufa/lufa.c ****  * This is fired when the host sets the current configuration of the USB device after enumeration.
 403:tmk_core/protocol/lufa/lufa.c ****  *
 404:tmk_core/protocol/lufa/lufa.c ****  * ATMega32u2 supports dual bank(ping-pong mode) only on endpoint 3 and 4,
 405:tmk_core/protocol/lufa/lufa.c ****  * it is safe to use single bank for all endpoints.
 406:tmk_core/protocol/lufa/lufa.c ****  */
 407:tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_ConfigurationChanged(void)
 408:tmk_core/protocol/lufa/lufa.c **** {
 409:tmk_core/protocol/lufa/lufa.c ****     bool ConfigSuccess = true;
 410:tmk_core/protocol/lufa/lufa.c **** 
 411:tmk_core/protocol/lufa/lufa.c ****     /* Setup Keyboard HID Report Endpoints */
 412:tmk_core/protocol/lufa/lufa.c **** #ifndef KEYBOARD_SHARED_EP
 413:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(KEYBOARD_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 414:tmk_core/protocol/lufa/lufa.c ****                                      KEYBOARD_EPSIZE, ENDPOINT_BANK_SINGLE);
 415:tmk_core/protocol/lufa/lufa.c **** #endif
 416:tmk_core/protocol/lufa/lufa.c **** 
 417:tmk_core/protocol/lufa/lufa.c **** #if defined(MOUSE_ENABLE) && !defined(MOUSE_SHARED_EP)
 418:tmk_core/protocol/lufa/lufa.c ****     /* Setup Mouse HID Report Endpoint */
 419:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(MOUSE_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 420:tmk_core/protocol/lufa/lufa.c ****                                      MOUSE_EPSIZE, ENDPOINT_BANK_SINGLE);
 421:tmk_core/protocol/lufa/lufa.c **** #endif
 422:tmk_core/protocol/lufa/lufa.c **** 
 423:tmk_core/protocol/lufa/lufa.c **** #ifdef SHARED_EP_ENABLE
 424:tmk_core/protocol/lufa/lufa.c ****     /* Setup Shared HID Report Endpoint */
 425:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(SHARED_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 426:tmk_core/protocol/lufa/lufa.c ****                                      SHARED_EPSIZE, ENDPOINT_BANK_SINGLE);
 427:tmk_core/protocol/lufa/lufa.c **** #endif
 428:tmk_core/protocol/lufa/lufa.c **** 
 429:tmk_core/protocol/lufa/lufa.c **** #ifdef RAW_ENABLE
 430:tmk_core/protocol/lufa/lufa.c ****     /* Setup Raw HID Report Endpoints */
 431:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(RAW_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 432:tmk_core/protocol/lufa/lufa.c **** 									 RAW_EPSIZE, ENDPOINT_BANK_SINGLE);
 433:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(RAW_OUT_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_OUT,
 434:tmk_core/protocol/lufa/lufa.c **** 									 RAW_EPSIZE, ENDPOINT_BANK_SINGLE);
 435:tmk_core/protocol/lufa/lufa.c **** #endif
 436:tmk_core/protocol/lufa/lufa.c **** 
 437:tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
 438:tmk_core/protocol/lufa/lufa.c ****     /* Setup Console HID Report Endpoints */
 439:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(CONSOLE_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 440:tmk_core/protocol/lufa/lufa.c ****                                      CONSOLE_EPSIZE, ENDPOINT_BANK_SINGLE);
 441:tmk_core/protocol/lufa/lufa.c **** #if 0
 442:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(CONSOLE_OUT_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_OUT,
 443:tmk_core/protocol/lufa/lufa.c ****                                      CONSOLE_EPSIZE, ENDPOINT_BANK_SINGLE);
 444:tmk_core/protocol/lufa/lufa.c **** #endif
 445:tmk_core/protocol/lufa/lufa.c **** #endif
 446:tmk_core/protocol/lufa/lufa.c **** 
 447:tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
 448:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(MIDI_STREAM_IN_EPADDR, EP_TYPE_BULK, MIDI_STREAM_EP
 449:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(MIDI_STREAM_OUT_EPADDR, EP_TYPE_BULK, MIDI_STREAM_E
 450:tmk_core/protocol/lufa/lufa.c **** #endif
 451:tmk_core/protocol/lufa/lufa.c **** 
 452:tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
 453:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(CDC_NOTIFICATION_EPADDR, EP_TYPE_INTERRUPT, CDC_NOT
 454:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(CDC_OUT_EPADDR, EP_TYPE_BULK, CDC_EPSIZE, ENDPOINT_
 455:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(CDC_IN_EPADDR, EP_TYPE_BULK, CDC_EPSIZE, ENDPOINT_B
 456:tmk_core/protocol/lufa/lufa.c **** #endif
 457:tmk_core/protocol/lufa/lufa.c **** }
 458:tmk_core/protocol/lufa/lufa.c **** 
 459:tmk_core/protocol/lufa/lufa.c **** /* FIXME: Expose this table in the docs somehow
 460:tmk_core/protocol/lufa/lufa.c **** Appendix G: HID Request Support Requirements
 461:tmk_core/protocol/lufa/lufa.c **** 
 462:tmk_core/protocol/lufa/lufa.c **** The following table enumerates the requests that need to be supported by various types of HID class
 463:tmk_core/protocol/lufa/lufa.c **** 
 464:tmk_core/protocol/lufa/lufa.c **** Device type     GetReport   SetReport   GetIdle     SetIdle     GetProtocol SetProtocol
 465:tmk_core/protocol/lufa/lufa.c **** ------------------------------------------------------------------------------------------
 466:tmk_core/protocol/lufa/lufa.c **** Boot Mouse      Required    Optional    Optional    Optional    Required    Required
 467:tmk_core/protocol/lufa/lufa.c **** Non-Boot Mouse  Required    Optional    Optional    Optional    Optional    Optional
 468:tmk_core/protocol/lufa/lufa.c **** Boot Keyboard   Required    Optional    Required    Required    Required    Required
 469:tmk_core/protocol/lufa/lufa.c **** Non-Boot Keybrd Required    Optional    Required    Required    Optional    Optional
 470:tmk_core/protocol/lufa/lufa.c **** Other Device    Required    Optional    Optional    Optional    Optional    Optional
 471:tmk_core/protocol/lufa/lufa.c **** */
 472:tmk_core/protocol/lufa/lufa.c **** /** \brief Event handler for the USB_ControlRequest event.
 473:tmk_core/protocol/lufa/lufa.c ****  *
 474:tmk_core/protocol/lufa/lufa.c ****  *  This is fired before passing along unhandled control requests to the library for processing int
 475:tmk_core/protocol/lufa/lufa.c ****  */
 476:tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_ControlRequest(void)
 477:tmk_core/protocol/lufa/lufa.c **** {
 478:tmk_core/protocol/lufa/lufa.c ****     uint8_t* ReportData = NULL;
 479:tmk_core/protocol/lufa/lufa.c ****     uint8_t  ReportSize = 0;
 480:tmk_core/protocol/lufa/lufa.c **** 
 481:tmk_core/protocol/lufa/lufa.c ****     /* Handle HID Class specific requests */
 482:tmk_core/protocol/lufa/lufa.c ****     switch (USB_ControlRequest.bRequest)
 483:tmk_core/protocol/lufa/lufa.c ****     {
 484:tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_GetReport:
 485:tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_I
 486:tmk_core/protocol/lufa/lufa.c ****             {
 487:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 488:tmk_core/protocol/lufa/lufa.c **** 
 489:tmk_core/protocol/lufa/lufa.c ****                 // Interface
 490:tmk_core/protocol/lufa/lufa.c ****                 switch (USB_ControlRequest.wIndex) {
 491:tmk_core/protocol/lufa/lufa.c ****                 case KEYBOARD_INTERFACE:
 492:tmk_core/protocol/lufa/lufa.c ****                     // TODO: test/check
 493:tmk_core/protocol/lufa/lufa.c ****                     ReportData = (uint8_t*)&keyboard_report_sent;
 494:tmk_core/protocol/lufa/lufa.c ****                     ReportSize = sizeof(keyboard_report_sent);
 495:tmk_core/protocol/lufa/lufa.c ****                     break;
 496:tmk_core/protocol/lufa/lufa.c ****                 }
 497:tmk_core/protocol/lufa/lufa.c **** 
 498:tmk_core/protocol/lufa/lufa.c ****                 /* Write the report data to the control endpoint */
 499:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_Control_Stream_LE(ReportData, ReportSize);
 500:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearOUT();
 501:tmk_core/protocol/lufa/lufa.c ****             }
 502:tmk_core/protocol/lufa/lufa.c **** 
 503:tmk_core/protocol/lufa/lufa.c ****             break;
 504:tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_SetReport:
 505:tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_I
 506:tmk_core/protocol/lufa/lufa.c ****             {
 507:tmk_core/protocol/lufa/lufa.c **** 
 508:tmk_core/protocol/lufa/lufa.c ****                 // Interface
 509:tmk_core/protocol/lufa/lufa.c ****                 switch (USB_ControlRequest.wIndex) {
 510:tmk_core/protocol/lufa/lufa.c ****                 case KEYBOARD_INTERFACE:
 511:tmk_core/protocol/lufa/lufa.c **** #if defined(SHARED_EP_ENABLE) && !defined(KEYBOARD_SHARED_EP)
 512:tmk_core/protocol/lufa/lufa.c ****                 case SHARED_INTERFACE:
 513:tmk_core/protocol/lufa/lufa.c **** #endif
 514:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 515:tmk_core/protocol/lufa/lufa.c **** 
 516:tmk_core/protocol/lufa/lufa.c ****                     while (!(Endpoint_IsOUTReceived())) {
 517:tmk_core/protocol/lufa/lufa.c ****                         if (USB_DeviceState == DEVICE_STATE_Unattached)
 518:tmk_core/protocol/lufa/lufa.c ****                           return;
 519:tmk_core/protocol/lufa/lufa.c ****                     }
 520:tmk_core/protocol/lufa/lufa.c **** 
 521:tmk_core/protocol/lufa/lufa.c ****                     if (Endpoint_BytesInEndpoint() == 2) {
 522:tmk_core/protocol/lufa/lufa.c ****                       uint8_t report_id = Endpoint_Read_8();
 523:tmk_core/protocol/lufa/lufa.c **** 
 524:tmk_core/protocol/lufa/lufa.c ****                       if (report_id == REPORT_ID_KEYBOARD || report_id == REPORT_ID_NKRO) {
 525:tmk_core/protocol/lufa/lufa.c ****                         keyboard_led_stats = Endpoint_Read_8();
 526:tmk_core/protocol/lufa/lufa.c ****                       }
 527:tmk_core/protocol/lufa/lufa.c ****                     } else {
 528:tmk_core/protocol/lufa/lufa.c ****                       keyboard_led_stats = Endpoint_Read_8();
 529:tmk_core/protocol/lufa/lufa.c ****                     }
 530:tmk_core/protocol/lufa/lufa.c **** 
 531:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearOUT();
 532:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 533:tmk_core/protocol/lufa/lufa.c ****                     break;
 534:tmk_core/protocol/lufa/lufa.c ****                 }
 535:tmk_core/protocol/lufa/lufa.c **** 
 536:tmk_core/protocol/lufa/lufa.c ****             }
 537:tmk_core/protocol/lufa/lufa.c **** 
 538:tmk_core/protocol/lufa/lufa.c ****             break;
 539:tmk_core/protocol/lufa/lufa.c **** 
 540:tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_GetProtocol:
 541:tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_I
 542:tmk_core/protocol/lufa/lufa.c ****             {
 543:tmk_core/protocol/lufa/lufa.c ****                 if (USB_ControlRequest.wIndex == KEYBOARD_INTERFACE) {
 544:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 545:tmk_core/protocol/lufa/lufa.c ****                     while (!(Endpoint_IsINReady()));
 546:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_Write_8(keyboard_protocol);
 547:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearIN();
 548:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 549:tmk_core/protocol/lufa/lufa.c ****                 }
 550:tmk_core/protocol/lufa/lufa.c ****             }
 551:tmk_core/protocol/lufa/lufa.c **** 
 552:tmk_core/protocol/lufa/lufa.c ****             break;
 553:tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_SetProtocol:
 554:tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_I
 555:tmk_core/protocol/lufa/lufa.c ****             {
 556:tmk_core/protocol/lufa/lufa.c ****                 if (USB_ControlRequest.wIndex == KEYBOARD_INTERFACE) {
 557:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 558:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 559:tmk_core/protocol/lufa/lufa.c **** 
 560:tmk_core/protocol/lufa/lufa.c ****                     keyboard_protocol = (USB_ControlRequest.wValue & 0xFF);
 561:tmk_core/protocol/lufa/lufa.c ****                     clear_keyboard();
 562:tmk_core/protocol/lufa/lufa.c ****                 }
 563:tmk_core/protocol/lufa/lufa.c ****             }
 564:tmk_core/protocol/lufa/lufa.c **** 
 565:tmk_core/protocol/lufa/lufa.c ****             break;
 566:tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_SetIdle:
 567:tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_I
 568:tmk_core/protocol/lufa/lufa.c ****             {
 569:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 570:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 571:tmk_core/protocol/lufa/lufa.c **** 
 572:tmk_core/protocol/lufa/lufa.c ****                 keyboard_idle = ((USB_ControlRequest.wValue & 0xFF00) >> 8);
 573:tmk_core/protocol/lufa/lufa.c ****             }
 574:tmk_core/protocol/lufa/lufa.c **** 
 575:tmk_core/protocol/lufa/lufa.c ****             break;
 576:tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_GetIdle:
 577:tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_I
 578:tmk_core/protocol/lufa/lufa.c ****             {
 579:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 580:tmk_core/protocol/lufa/lufa.c ****                 while (!(Endpoint_IsINReady()));
 581:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_8(keyboard_idle);
 582:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearIN();
 583:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 584:tmk_core/protocol/lufa/lufa.c ****             }
 585:tmk_core/protocol/lufa/lufa.c **** 
 586:tmk_core/protocol/lufa/lufa.c ****             break;
 587:tmk_core/protocol/lufa/lufa.c ****     }
 588:tmk_core/protocol/lufa/lufa.c **** 
 589:tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
 590:tmk_core/protocol/lufa/lufa.c ****     CDC_Device_ProcessControlRequest(&cdc_device);
 591:tmk_core/protocol/lufa/lufa.c **** #endif
 592:tmk_core/protocol/lufa/lufa.c **** }
 593:tmk_core/protocol/lufa/lufa.c **** 
 594:tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 595:tmk_core/protocol/lufa/lufa.c ****  * Host driver
 596:tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 597:tmk_core/protocol/lufa/lufa.c **** /** \brief Keyboard LEDs
 598:tmk_core/protocol/lufa/lufa.c ****  *
 599:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 600:tmk_core/protocol/lufa/lufa.c ****  */
 601:tmk_core/protocol/lufa/lufa.c **** static uint8_t keyboard_leds(void)
 602:tmk_core/protocol/lufa/lufa.c **** {
  15               		.loc 1 602 1 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
 603:tmk_core/protocol/lufa/lufa.c ****     return keyboard_led_stats;
  21               		.loc 1 603 5 view .LVU1
 604:tmk_core/protocol/lufa/lufa.c **** }
  22               		.loc 1 604 1 is_stmt 0 view .LVU2
  23 0000 8091 0000 		lds r24,keyboard_led_stats
  24               	/* epilogue start */
  25 0004 0895      		ret
  26               		.cfi_endproc
  27               	.LFE129:
  29               		.section	.text.send_mouse,"ax",@progbits
  31               	send_mouse:
  32               	.LVL0:
  33               	.LFB131:
 605:tmk_core/protocol/lufa/lufa.c **** 
 606:tmk_core/protocol/lufa/lufa.c **** /** \brief Send Keyboard
 607:tmk_core/protocol/lufa/lufa.c ****  *
 608:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 609:tmk_core/protocol/lufa/lufa.c ****  */
 610:tmk_core/protocol/lufa/lufa.c **** static void send_keyboard(report_keyboard_t *report)
 611:tmk_core/protocol/lufa/lufa.c **** {
 612:tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 613:tmk_core/protocol/lufa/lufa.c ****     uint8_t where = where_to_send();
 614:tmk_core/protocol/lufa/lufa.c **** 
 615:tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 616:tmk_core/protocol/lufa/lufa.c ****   if (where == OUTPUT_BLUETOOTH || where == OUTPUT_USB_AND_BT) {
 617:tmk_core/protocol/lufa/lufa.c ****     #ifdef MODULE_ADAFRUIT_BLE
 618:tmk_core/protocol/lufa/lufa.c ****       adafruit_ble_send_keys(report->mods, report->keys, sizeof(report->keys));
 619:tmk_core/protocol/lufa/lufa.c ****     #elif MODULE_RN42
 620:tmk_core/protocol/lufa/lufa.c ****       bluefruit_serial_send(0xFD);
 621:tmk_core/protocol/lufa/lufa.c ****       bluefruit_serial_send(0x09);
 622:tmk_core/protocol/lufa/lufa.c ****       bluefruit_serial_send(0x01);
 623:tmk_core/protocol/lufa/lufa.c ****       bluefruit_serial_send(report->mods);
 624:tmk_core/protocol/lufa/lufa.c ****       bluefruit_serial_send(report->reserved);
 625:tmk_core/protocol/lufa/lufa.c ****       for (uint8_t i = 0; i < KEYBOARD_REPORT_KEYS; i++) {
 626:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(report->keys[i]);
 627:tmk_core/protocol/lufa/lufa.c ****       }
 628:tmk_core/protocol/lufa/lufa.c ****     #else
 629:tmk_core/protocol/lufa/lufa.c ****       bluefruit_serial_send(0xFD);
 630:tmk_core/protocol/lufa/lufa.c ****       bluefruit_serial_send(report->mods);
 631:tmk_core/protocol/lufa/lufa.c ****       bluefruit_serial_send(report->reserved);
 632:tmk_core/protocol/lufa/lufa.c ****       for (uint8_t i = 0; i < KEYBOARD_REPORT_KEYS; i++) {
 633:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(report->keys[i]);
 634:tmk_core/protocol/lufa/lufa.c ****       }
 635:tmk_core/protocol/lufa/lufa.c ****     #endif
 636:tmk_core/protocol/lufa/lufa.c ****   }
 637:tmk_core/protocol/lufa/lufa.c **** #endif
 638:tmk_core/protocol/lufa/lufa.c **** 
 639:tmk_core/protocol/lufa/lufa.c ****     if (where != OUTPUT_USB && where != OUTPUT_USB_AND_BT) {
 640:tmk_core/protocol/lufa/lufa.c ****       return;
 641:tmk_core/protocol/lufa/lufa.c ****     }
 642:tmk_core/protocol/lufa/lufa.c **** 
 643:tmk_core/protocol/lufa/lufa.c ****     /* Select the Keyboard Report Endpoint */
 644:tmk_core/protocol/lufa/lufa.c ****     uint8_t ep = KEYBOARD_IN_EPNUM;
 645:tmk_core/protocol/lufa/lufa.c ****     uint8_t size = KEYBOARD_REPORT_SIZE;
 646:tmk_core/protocol/lufa/lufa.c **** #ifdef NKRO_ENABLE
 647:tmk_core/protocol/lufa/lufa.c ****     if (keyboard_protocol && keymap_config.nkro) {
 648:tmk_core/protocol/lufa/lufa.c ****         ep = SHARED_IN_EPNUM;
 649:tmk_core/protocol/lufa/lufa.c ****         size = sizeof(struct nkro_report);
 650:tmk_core/protocol/lufa/lufa.c ****     }
 651:tmk_core/protocol/lufa/lufa.c **** #endif
 652:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
 653:tmk_core/protocol/lufa/lufa.c ****     /* Check if write ready for a polling interval around 10ms */
 654:tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 655:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 656:tmk_core/protocol/lufa/lufa.c **** 
 657:tmk_core/protocol/lufa/lufa.c ****     /* If we're in Boot Protocol, don't send any report ID or other funky fields */
 658:tmk_core/protocol/lufa/lufa.c ****     if (!keyboard_protocol) {
 659:tmk_core/protocol/lufa/lufa.c ****         Endpoint_Write_Stream_LE(&report->mods, 8, NULL);
 660:tmk_core/protocol/lufa/lufa.c ****     } else {
 661:tmk_core/protocol/lufa/lufa.c ****         Endpoint_Write_Stream_LE(report, size, NULL);
 662:tmk_core/protocol/lufa/lufa.c ****     }
 663:tmk_core/protocol/lufa/lufa.c **** 
 664:tmk_core/protocol/lufa/lufa.c ****     /* Finalize the stream transfer to send the last packet */
 665:tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 666:tmk_core/protocol/lufa/lufa.c **** 
 667:tmk_core/protocol/lufa/lufa.c ****     keyboard_report_sent = *report;
 668:tmk_core/protocol/lufa/lufa.c **** }
 669:tmk_core/protocol/lufa/lufa.c ****  
 670:tmk_core/protocol/lufa/lufa.c **** /** \brief Send Mouse
 671:tmk_core/protocol/lufa/lufa.c ****  *
 672:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 673:tmk_core/protocol/lufa/lufa.c ****  */
 674:tmk_core/protocol/lufa/lufa.c **** static void send_mouse(report_mouse_t *report)
 675:tmk_core/protocol/lufa/lufa.c **** {
  34               		.loc 1 675 1 is_stmt 1 view -0
  35               		.cfi_startproc
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
 676:tmk_core/protocol/lufa/lufa.c **** #ifdef MOUSE_ENABLE
 677:tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 678:tmk_core/protocol/lufa/lufa.c ****     uint8_t where = where_to_send();
 679:tmk_core/protocol/lufa/lufa.c **** 
 680:tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 681:tmk_core/protocol/lufa/lufa.c ****   if (where == OUTPUT_BLUETOOTH || where == OUTPUT_USB_AND_BT) {
 682:tmk_core/protocol/lufa/lufa.c ****     #ifdef MODULE_ADAFRUIT_BLE
 683:tmk_core/protocol/lufa/lufa.c ****       // FIXME: mouse buttons
 684:tmk_core/protocol/lufa/lufa.c ****       adafruit_ble_send_mouse_move(report->x, report->y, report->v, report->h, report->buttons);
 685:tmk_core/protocol/lufa/lufa.c ****     #else
 686:tmk_core/protocol/lufa/lufa.c ****       bluefruit_serial_send(0xFD);
 687:tmk_core/protocol/lufa/lufa.c ****       bluefruit_serial_send(0x00);
 688:tmk_core/protocol/lufa/lufa.c ****       bluefruit_serial_send(0x03);
 689:tmk_core/protocol/lufa/lufa.c ****       bluefruit_serial_send(report->buttons);
 690:tmk_core/protocol/lufa/lufa.c ****       bluefruit_serial_send(report->x);
 691:tmk_core/protocol/lufa/lufa.c ****       bluefruit_serial_send(report->y);
 692:tmk_core/protocol/lufa/lufa.c ****       bluefruit_serial_send(report->v); // should try sending the wheel v here
 693:tmk_core/protocol/lufa/lufa.c ****       bluefruit_serial_send(report->h); // should try sending the wheel h here
 694:tmk_core/protocol/lufa/lufa.c ****       bluefruit_serial_send(0x00);
 695:tmk_core/protocol/lufa/lufa.c ****     #endif
 696:tmk_core/protocol/lufa/lufa.c ****   }
 697:tmk_core/protocol/lufa/lufa.c **** #endif
 698:tmk_core/protocol/lufa/lufa.c **** 
 699:tmk_core/protocol/lufa/lufa.c ****     if (where != OUTPUT_USB && where != OUTPUT_USB_AND_BT) {
 700:tmk_core/protocol/lufa/lufa.c ****       return;
 701:tmk_core/protocol/lufa/lufa.c ****     }
 702:tmk_core/protocol/lufa/lufa.c **** 
 703:tmk_core/protocol/lufa/lufa.c ****     /* Select the Mouse Report Endpoint */
 704:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(MOUSE_IN_EPNUM);
 705:tmk_core/protocol/lufa/lufa.c **** 
 706:tmk_core/protocol/lufa/lufa.c ****     /* Check if write ready for a polling interval around 10ms */
 707:tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 708:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 709:tmk_core/protocol/lufa/lufa.c **** 
 710:tmk_core/protocol/lufa/lufa.c ****     /* Write Mouse Report Data */
 711:tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_Stream_LE(report, sizeof(report_mouse_t), NULL);
 712:tmk_core/protocol/lufa/lufa.c **** 
 713:tmk_core/protocol/lufa/lufa.c ****     /* Finalize the stream transfer to send the last packet */
 714:tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 715:tmk_core/protocol/lufa/lufa.c **** #endif
 716:tmk_core/protocol/lufa/lufa.c **** }
  40               		.loc 1 716 1 view .LVU4
  41               	/* epilogue start */
  42 0000 0895      		ret
  43               		.cfi_endproc
  44               	.LFE131:
  46               		.section	.text.sendchar,"ax",@progbits
  47               	.global	sendchar
  49               	sendchar:
  50               	.LVL1:
  51               	.LFB134:
 717:tmk_core/protocol/lufa/lufa.c **** 
 718:tmk_core/protocol/lufa/lufa.c **** /** \brief Send System
 719:tmk_core/protocol/lufa/lufa.c ****  *
 720:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 721:tmk_core/protocol/lufa/lufa.c ****  */
 722:tmk_core/protocol/lufa/lufa.c **** static void send_system(uint16_t data)
 723:tmk_core/protocol/lufa/lufa.c **** {
 724:tmk_core/protocol/lufa/lufa.c **** #ifdef EXTRAKEY_ENABLE
 725:tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 726:tmk_core/protocol/lufa/lufa.c **** 
 727:tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 728:tmk_core/protocol/lufa/lufa.c ****         return;
 729:tmk_core/protocol/lufa/lufa.c **** 
 730:tmk_core/protocol/lufa/lufa.c ****     report_extra_t r = {
 731:tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_SYSTEM,
 732:tmk_core/protocol/lufa/lufa.c ****         .usage = data - SYSTEM_POWER_DOWN + 1
 733:tmk_core/protocol/lufa/lufa.c ****     };
 734:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(SHARED_IN_EPNUM);
 735:tmk_core/protocol/lufa/lufa.c **** 
 736:tmk_core/protocol/lufa/lufa.c ****     /* Check if write ready for a polling interval around 10ms */
 737:tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 738:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 739:tmk_core/protocol/lufa/lufa.c **** 
 740:tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_Stream_LE(&r, sizeof(report_extra_t), NULL);
 741:tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 742:tmk_core/protocol/lufa/lufa.c **** #endif
 743:tmk_core/protocol/lufa/lufa.c **** }
 744:tmk_core/protocol/lufa/lufa.c **** 
 745:tmk_core/protocol/lufa/lufa.c **** /** \brief Send Consumer
 746:tmk_core/protocol/lufa/lufa.c ****  *
 747:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 748:tmk_core/protocol/lufa/lufa.c ****  */
 749:tmk_core/protocol/lufa/lufa.c **** static void send_consumer(uint16_t data)
 750:tmk_core/protocol/lufa/lufa.c **** {
 751:tmk_core/protocol/lufa/lufa.c **** #ifdef EXTRAKEY_ENABLE
 752:tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 753:tmk_core/protocol/lufa/lufa.c ****     uint8_t where = where_to_send();
 754:tmk_core/protocol/lufa/lufa.c **** 
 755:tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 756:tmk_core/protocol/lufa/lufa.c ****     if (where == OUTPUT_BLUETOOTH || where == OUTPUT_USB_AND_BT) {
 757:tmk_core/protocol/lufa/lufa.c ****       #ifdef MODULE_ADAFRUIT_BLE
 758:tmk_core/protocol/lufa/lufa.c ****         adafruit_ble_send_consumer_key(data, 0);
 759:tmk_core/protocol/lufa/lufa.c ****       #elif MODULE_RN42
 760:tmk_core/protocol/lufa/lufa.c ****         static uint16_t last_data = 0;
 761:tmk_core/protocol/lufa/lufa.c ****         if (data == last_data) return;
 762:tmk_core/protocol/lufa/lufa.c ****         last_data = data;
 763:tmk_core/protocol/lufa/lufa.c ****         uint16_t bitmap = CONSUMER2RN42(data);
 764:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0xFD);
 765:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0x03);
 766:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0x03);
 767:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(bitmap&0xFF);
 768:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send((bitmap>>8)&0xFF);
 769:tmk_core/protocol/lufa/lufa.c ****       #else
 770:tmk_core/protocol/lufa/lufa.c ****         static uint16_t last_data = 0;
 771:tmk_core/protocol/lufa/lufa.c ****         if (data == last_data) return;
 772:tmk_core/protocol/lufa/lufa.c ****         last_data = data;
 773:tmk_core/protocol/lufa/lufa.c ****         uint16_t bitmap = CONSUMER2BLUEFRUIT(data);
 774:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0xFD);
 775:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0x00);
 776:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0x02);
 777:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send((bitmap>>8)&0xFF);
 778:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(bitmap&0xFF);
 779:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0x00);
 780:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0x00);
 781:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0x00);
 782:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0x00);
 783:tmk_core/protocol/lufa/lufa.c ****       #endif
 784:tmk_core/protocol/lufa/lufa.c ****     }
 785:tmk_core/protocol/lufa/lufa.c **** #endif
 786:tmk_core/protocol/lufa/lufa.c **** 
 787:tmk_core/protocol/lufa/lufa.c ****     if (where != OUTPUT_USB && where != OUTPUT_USB_AND_BT) {
 788:tmk_core/protocol/lufa/lufa.c ****       return;
 789:tmk_core/protocol/lufa/lufa.c ****     }
 790:tmk_core/protocol/lufa/lufa.c **** 
 791:tmk_core/protocol/lufa/lufa.c ****     report_extra_t r = {
 792:tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_CONSUMER,
 793:tmk_core/protocol/lufa/lufa.c ****         .usage = data
 794:tmk_core/protocol/lufa/lufa.c ****     };
 795:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(SHARED_IN_EPNUM);
 796:tmk_core/protocol/lufa/lufa.c **** 
 797:tmk_core/protocol/lufa/lufa.c ****     /* Check if write ready for a polling interval around 10ms */
 798:tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 799:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 800:tmk_core/protocol/lufa/lufa.c **** 
 801:tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_Stream_LE(&r, sizeof(report_extra_t), NULL);
 802:tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 803:tmk_core/protocol/lufa/lufa.c **** #endif
 804:tmk_core/protocol/lufa/lufa.c **** }
 805:tmk_core/protocol/lufa/lufa.c **** 
 806:tmk_core/protocol/lufa/lufa.c **** 
 807:tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 808:tmk_core/protocol/lufa/lufa.c ****  * sendchar
 809:tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 810:tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
 811:tmk_core/protocol/lufa/lufa.c **** #define SEND_TIMEOUT 5
 812:tmk_core/protocol/lufa/lufa.c **** /** \brief Send Char
 813:tmk_core/protocol/lufa/lufa.c ****  *
 814:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 815:tmk_core/protocol/lufa/lufa.c ****  */
 816:tmk_core/protocol/lufa/lufa.c **** int8_t sendchar(uint8_t c)
 817:tmk_core/protocol/lufa/lufa.c **** {
  52               		.loc 1 817 1 view -0
  53               		.cfi_startproc
  54               	/* prologue: function */
  55               	/* frame size = 0 */
  56               	/* stack size = 0 */
  57               	.L__stack_usage = 0
 818:tmk_core/protocol/lufa/lufa.c ****     // Not wait once timeouted.
 819:tmk_core/protocol/lufa/lufa.c ****     // Because sendchar() is called so many times, waiting each call causes big lag.
 820:tmk_core/protocol/lufa/lufa.c ****     static bool timeouted = false;
  58               		.loc 1 820 5 view .LVU6
 821:tmk_core/protocol/lufa/lufa.c **** 
 822:tmk_core/protocol/lufa/lufa.c ****     // prevents Console_Task() from running during sendchar() runs.
 823:tmk_core/protocol/lufa/lufa.c ****     // or char will be lost. These two function is mutually exclusive.
 824:tmk_core/protocol/lufa/lufa.c ****     CONSOLE_FLUSH_SET(false);
  59               		.loc 1 824 5 view .LVU7
  60               		.loc 1 824 5 view .LVU8
  61               	.LBB195:
  62               		.loc 1 824 5 view .LVU9
  63 0000 9FB7      		in r25,__SREG__
  64               	.LVL2:
  65               	.LBB196:
  66               	.LBI196:
  67               		.file 2 "/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h"
   1:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** /* Copyright (c) 2007 Dean Camera
   2:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****    All rights reserved.
   3:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** 
   4:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****    Redistribution and use in source and binary forms, with or without
   5:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****    modification, are permitted provided that the following conditions are met:
   6:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** 
   7:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****    * Redistributions of source code must retain the above copyright
   8:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****      notice, this list of conditions and the following disclaimer.
   9:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** 
  10:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****    * Redistributions in binary form must reproduce the above copyright
  11:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****      notice, this list of conditions and the following disclaimer in
  12:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****      the documentation and/or other materials provided with the
  13:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****      distribution.
  14:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** 
  15:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****    * Neither the name of the copyright holders nor the names of
  16:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****      contributors may be used to endorse or promote products derived
  17:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****      from this software without specific prior written permission.
  18:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** 
  19:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  20:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  21:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  22:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  23:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  24:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  25:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  26:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  27:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  28:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  29:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****   POSSIBILITY OF SUCH DAMAGE.
  30:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** */
  31:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** 
  32:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** /* $Id: atomic.h 2158 2010-06-10 15:48:28Z joerg_wunsch $ */
  33:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** 
  34:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** #ifndef _UTIL_ATOMIC_H_
  35:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** #define _UTIL_ATOMIC_H_ 1
  36:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** 
  37:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** #include <avr/io.h>
  38:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** #include <avr/interrupt.h>
  39:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** 
  40:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** #if !defined(__DOXYGEN__)
  41:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** /* Internal helper functions. */
  42:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** static __inline__ uint8_t __iSeiRetVal(void)
  43:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** {
  44:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****     sei();
  45:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****     return 1;
  46:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** }
  47:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** static __inline__ uint8_t __iCliRetVal(void)
  68               		.loc 2 48 27 view .LVU10
  69               	.LBB197:
  49:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** {
  50:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****     cli();
  70               		.loc 2 50 5 view .LVU11
  71               	/* #APP */
  72               	 ;  50 "/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h" 1
  73 0002 F894      		cli
  74               	 ;  0 "" 2
  51:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****     return 1;
  75               		.loc 2 51 5 view .LVU12
  76               	.LVL3:
  77               		.loc 2 51 5 is_stmt 0 view .LVU13
  78               	/* #NOAPP */
  79               	.LBE197:
  80               	.LBE196:
  81               		.loc 1 824 5 is_stmt 1 view .LVU14
  82 0004 1092 0000 		sts console_flush,__zero_reg__
  83               	.LVL4:
  84               	.LBB198:
  85               	.LBI198:
  52:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** }
  53:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** 
  54:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** static __inline__ void __iSeiParam(const uint8_t *__s)
  55:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** {
  56:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****     sei();
  57:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  58:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****     (void)__s;
  59:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** }
  60:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** 
  61:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** static __inline__ void __iCliParam(const uint8_t *__s)
  62:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** {
  63:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****     cli();
  64:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  65:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****     (void)__s;
  66:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** }
  67:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** 
  68:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** static __inline__ void __iRestore(const  uint8_t *__s)
  86               		.loc 2 68 24 view .LVU15
  87               	.LBB199:
  69:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** {
  70:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****     SREG = *__s;
  88               		.loc 2 70 5 view .LVU16
  89               		.loc 2 70 10 is_stmt 0 view .LVU17
  90 0008 9FBF      		out __SREG__,r25
  71:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  91               		.loc 2 71 5 is_stmt 1 view .LVU18
  92               	.LVL5:
  93               		.loc 2 71 5 is_stmt 0 view .LVU19
  94               	.LBE199:
  95               	.LBE198:
  96               	.LBE195:
 825:tmk_core/protocol/lufa/lufa.c **** 
 826:tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
  97               		.loc 1 826 5 is_stmt 1 view .LVU20
  98               		.loc 1 826 25 is_stmt 0 view .LVU21
  99 000a 9091 0000 		lds r25,USB_DeviceState
 100               		.loc 1 826 8 view .LVU22
 101 000e 9430      		cpi r25,lo8(4)
 102 0010 01F0      		breq .+2
 103 0012 00C0      		rjmp .L15
 827:tmk_core/protocol/lufa/lufa.c ****         return -1;
 828:tmk_core/protocol/lufa/lufa.c **** 
 829:tmk_core/protocol/lufa/lufa.c ****     uint8_t ep = Endpoint_GetCurrentEndpoint();
 104               		.loc 1 829 5 is_stmt 1 view .LVU23
 105               	.LBB200:
 106               	.LBI200:
 107               		.file 3 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h"
   1:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2017.
   4:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2017  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaims all warranties with regard to this
  22:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
  93:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
  94:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
  95:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
  96:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
  97:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
  98:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
  99:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 101:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 102:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 103:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 104:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 105:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 106:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 107:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 108:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 109:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 110:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 111:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 112:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 113:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 114:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 115:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 116:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 117:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
 119:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 120:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 121:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 122:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 123:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 124:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 125:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 126:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 127:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defi
 128:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					/** Total number of endpoints (including the default control endpoint at address 0) which may
 129:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 130:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 131:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 */
 132:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        7
 133:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 134:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        5
 135:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 136:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 137:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 138:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 139:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 140:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 141:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 142:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 143:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 144:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 145:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 146:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 147:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 148:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 149:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 150:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 151:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 152:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 153:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 154:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 155:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 156:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 157:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 158:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 159:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 160:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 161:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 162:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 163:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 164:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 165:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint address with the given endpoint type, bank size and number
 166:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  banks. Once configured, the endpoint may be read from or written to, depending on its direct
 167:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 168:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address    Endpoint address to configure.
 169:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 170:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 171:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 172:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 173:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 174:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 175:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 176:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 177:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 178:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured.
 179:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 180:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \attention When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> 
 181:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *             ascending order, or bank corruption will occur.
 182:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 184:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        refer to the chosen microcontroller model's datasheet to determine the maximum bank si
 185:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 186:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 187:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 188:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 189:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 190:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 191:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 192:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 193:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 194:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 195:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 196:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 197:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 198:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 199:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 200:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 201:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 202:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 203:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 204:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 205:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);
 206:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 207:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
 208:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 209:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number,
 211:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 212:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | ((Banks > 1) ? (1 << EPBK0) : 0) | Endpoi
 213:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 214:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 215:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 216:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 217:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 218:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 219:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 220:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 221:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 222:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 223:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 224:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if (defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 225:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 226:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 227:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 228:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 229:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 230:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 231:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 232:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 233:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines the currently selected endpoint's direction.
 234:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 235:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
 236:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 237:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 238:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 239:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
 241:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 242:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 243:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 244:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint so that it can be restored after another endpoint has been
 245:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  manipulated.
 246:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 247:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 248:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 249:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 250:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 108               		.loc 3 250 26 view .LVU24
 109               	.LBB201:
 251:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 252:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 253:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
 110               		.loc 3 253 6 view .LVU25
 111               		.loc 3 253 15 is_stmt 0 view .LVU26
 112 0014 2091 E900 		lds r18,233
 113               		.loc 3 253 21 view .LVU27
 114 0018 2F70      		andi r18,lo8(15)
 115               	.LBB202:
 116               	.LBI202:
 238:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 117               		.loc 3 238 26 is_stmt 1 view .LVU28
 118               	.LBB203:
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 119               		.loc 3 240 5 view .LVU29
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 120               		.loc 3 240 13 is_stmt 0 view .LVU30
 121 001a 3091 EC00 		lds r19,236
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 122               		.loc 3 240 55 view .LVU31
 123 001e 932F      		mov r25,r19
 124 0020 9170      		andi r25,lo8(1)
 125 0022 30FD      		sbrc r19,0
 126 0024 90E8      		ldi r25,lo8(-128)
 127               	.L5:
 128               	.LBE203:
 129               	.LBE202:
 130               		.loc 3 253 44 view .LVU32
 131 0026 922B      		or r25,r18
 132               	.LVL6:
 133               		.loc 3 253 44 view .LVU33
 134               	.LBE201:
 135               	.LBE200:
 830:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(CONSOLE_IN_EPNUM);
 136               		.loc 1 830 5 is_stmt 1 view .LVU34
 137               	.LBB204:
 138               	.LBI204:
 254:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 255:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
 256:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 257:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 258:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 259:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint address.
 260:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 261:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint address to be indicated will opera
 262:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 263:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 264:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address Endpoint address to select.
 265:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 266:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
 139               		.loc 3 267 23 view .LVU35
 140               	.LBB205:
 268:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 269:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 141               		.loc 3 270 6 view .LVU36
 142               		.loc 3 270 12 is_stmt 0 view .LVU37
 143 0028 23E0      		ldi r18,lo8(3)
 144 002a 2093 E900 		sts 233,r18
 145               	.LVL7:
 146               		.loc 3 270 12 view .LVU38
 147               	.LBE205:
 148               	.LBE204:
 831:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsEnabled() || !Endpoint_IsConfigured()) {
 149               		.loc 1 831 5 is_stmt 1 view .LVU39
 150               	.LBB206:
 151               	.LBI206:
 271:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 272:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 273:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 274:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 275:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  data In and Out pointers to the bank's contents.
 276:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 277:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Endpoint address whose FIFO buffers are to be reset.
 278:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 279:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 280:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address)
 281:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 282:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << (Address & ENDPOINT_EPNUM_MASK));
 283:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 284:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 285:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 286:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 287:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and from a host.
 288:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 289:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 290:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 291:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 292:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void)
 293:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 294:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 295:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 296:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 297:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 298:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  to and from a host.
 299:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 300:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 301:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void)
 302:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 303:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
 304:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 305:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 306:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 307:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 308:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 309:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 310:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 311:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void)
 152               		.loc 3 311 23 view .LVU40
 153               	.LBB207:
 312:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 313:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 154               		.loc 3 313 5 view .LVU41
 155               		.loc 3 313 14 is_stmt 0 view .LVU42
 156 002e 2091 EB00 		lds r18,235
 157               	.LBE207:
 158               	.LBE206:
 159               		.loc 1 831 8 view .LVU43
 160 0032 20FF      		sbrs r18,0
 161 0034 00C0      		rjmp .L10
 162               	.LBB208:
 163               	.LBI208:
 314:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 315:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 316:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the number of busy banks in the currently selected endpoint, which have been queue
 317:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  transmission via the \ref Endpoint_ClearIN() command, or are awaiting acknowledgment via the
 318:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ref Endpoint_ClearOUT() command.
 319:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 320:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 321:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 322:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of busy banks in the selected endpoint.
 323:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 324:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 325:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void)
 326:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 327:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UESTA0X & (0x03 << NBUSYBK0));
 328:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 329:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 330:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 331:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 332:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 333:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  packet.
 334:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 335:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 336:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 337:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_AbortPendingIN(void)
 338:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 339:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (Endpoint_GetBusyBanks() != 0)
 340:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 341:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX |= (1 << RXOUTI);
 342:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					while (UEINTX & (1 << RXOUTI));
 343:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 344:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 345:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 346:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 347:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 348:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 349:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 350:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction and the endpoint bank is full.
 351:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 352:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 353:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 354:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 355:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *          on its direction.
 356:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 357:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 359:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 361:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 362:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 363:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is configured.
 364:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 365:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 366:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 367:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 368:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void)
 164               		.loc 3 368 23 is_stmt 1 view .LVU44
 165               	.LBB209:
 369:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 370:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 166               		.loc 3 370 5 view .LVU45
 167               		.loc 3 370 14 is_stmt 0 view .LVU46
 168 0036 2091 EE00 		lds r18,238
 169               	.LBE209:
 170               	.LBE208:
 171               		.loc 1 831 31 view .LVU47
 172 003a 27FF      		sbrs r18,7
 173 003c 00C0      		rjmp .L10
 832:tmk_core/protocol/lufa/lufa.c ****         goto ERROR_EXIT;
 833:tmk_core/protocol/lufa/lufa.c ****     }
 834:tmk_core/protocol/lufa/lufa.c **** 
 835:tmk_core/protocol/lufa/lufa.c ****     if (timeouted && !Endpoint_IsReadWriteAllowed()) {
 174               		.loc 1 835 5 is_stmt 1 view .LVU48
 175               		.loc 1 835 8 is_stmt 0 view .LVU49
 176 003e 2091 0000 		lds r18,timeouted.6172
 177 0042 2223      		tst r18
 178 0044 01F0      		breq .L7
 179               	.LBB210:
 180               	.LBI210:
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 181               		.loc 3 358 23 is_stmt 1 view .LVU50
 182               	.LBB211:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 183               		.loc 3 360 5 view .LVU51
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 184               		.loc 3 360 14 is_stmt 0 view .LVU52
 185 0046 2091 E800 		lds r18,232
 186               	.LBE211:
 187               	.LBE210:
 188               		.loc 1 835 19 view .LVU53
 189 004a 25FF      		sbrs r18,5
 190 004c 00C0      		rjmp .L10
 191               	.L7:
 836:tmk_core/protocol/lufa/lufa.c ****         goto ERROR_EXIT;
 837:tmk_core/protocol/lufa/lufa.c ****     }
 838:tmk_core/protocol/lufa/lufa.c **** 
 839:tmk_core/protocol/lufa/lufa.c ****     timeouted = false;
 192               		.loc 1 839 5 is_stmt 1 view .LVU54
 193               		.loc 1 839 15 is_stmt 0 view .LVU55
 194 004e 1092 0000 		sts timeouted.6172,__zero_reg__
 840:tmk_core/protocol/lufa/lufa.c **** 
 841:tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = SEND_TIMEOUT;
 195               		.loc 1 841 5 is_stmt 1 view .LVU56
 196               	.LVL8:
 842:tmk_core/protocol/lufa/lufa.c ****     while (!Endpoint_IsReadWriteAllowed()) {
 197               		.loc 1 842 5 view .LVU57
 198               		.loc 1 842 11 is_stmt 0 view .LVU58
 199 0052 26E0      		ldi r18,lo8(6)
 200               	.LVL9:
 201               	.L8:
 202               	.LBB212:
 203               	.LBI212:
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 204               		.loc 3 358 23 is_stmt 1 view .LVU59
 205               	.LBB213:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 206               		.loc 3 360 5 view .LVU60
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 207               		.loc 3 360 14 is_stmt 0 view .LVU61
 208 0054 3091 E800 		lds r19,232
 209               	.LBE213:
 210               	.LBE212:
 211               		.loc 1 842 11 view .LVU62
 212 0058 35FF      		sbrs r19,5
 213 005a 00C0      		rjmp .L11
 843:tmk_core/protocol/lufa/lufa.c ****         if (USB_DeviceState != DEVICE_STATE_Configured) {
 844:tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 845:tmk_core/protocol/lufa/lufa.c ****         }
 846:tmk_core/protocol/lufa/lufa.c ****         if (Endpoint_IsStalled()) {
 847:tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 848:tmk_core/protocol/lufa/lufa.c ****         }
 849:tmk_core/protocol/lufa/lufa.c ****         if (!(timeout--)) {
 850:tmk_core/protocol/lufa/lufa.c ****             timeouted = true;
 851:tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 852:tmk_core/protocol/lufa/lufa.c ****         }
 853:tmk_core/protocol/lufa/lufa.c ****         _delay_ms(1);
 854:tmk_core/protocol/lufa/lufa.c ****     }
 855:tmk_core/protocol/lufa/lufa.c **** 
 856:tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_8(c);
 214               		.loc 1 856 5 is_stmt 1 view .LVU63
 215               	.LVL10:
 216               	.LBB214:
 217               	.LBI214:
 371:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 372:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 373:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 374:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 375:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  masking the return value against <tt>(1 << <i>{Endpoint Number}</i>)</tt>.
 376:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 377:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 378:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 379:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 380:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 381:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 382:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEINT;
 383:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 384:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 385:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 386:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoints).
 387:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 388:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Address of the endpoint whose interrupt flag should be tested.
 389:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 390:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the specified endpoint has interrupted, \c false otherwise.
 391:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 392:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address) ATTR_WARN_UNUSED_RESUL
 393:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address)
 394:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 395:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((Endpoint_GetEndpointInterrupts() & (1 << (Address & ENDPOINT_EPNUM_MASK))) ? true : fa
 396:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 397:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 398:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 399:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 400:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 401:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 402:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 403:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 404:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 405:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void)
 406:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 407:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 408:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 409:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 410:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 411:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 412:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 413:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 414:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 415:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 416:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 417:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 418:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 419:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 420:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 421:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 422:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 423:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 424:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 425:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 426:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 427:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 428:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 429:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 430:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 431:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 432:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 433:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 434:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 435:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint for the next packet.
 436:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 437:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 438:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 439:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 440:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 441:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 442:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void)
 443:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 445:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 446:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 447:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 448:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 449:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 450:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 451:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 452:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 453:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void)
 454:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 455:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 457:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 458:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << TXINI);
 459:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 460:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 461:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 462:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 463:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 464:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 465:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 466:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 467:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 468:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void)
 469:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 470:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 471:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 472:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 473:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << RXOUTI);
 474:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 475:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 476:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 477:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 478:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 479:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 480:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  aborted and the host can begin its own recovery sequence.
 481:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 482:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 483:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 484:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint.
 485:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 486:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 487:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 488:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 489:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void)
 490:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 491:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQ);
 492:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 493:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 494:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears the STALL condition on the currently selected endpoint.
 495:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 496:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 497:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 498:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
 499:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void)
 500:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 501:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQC);
 502:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 503:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 504:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is stalled, \c false otherwise.
 505:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 506:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 507:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 508:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
 509:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 510:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 511:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void)
 512:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 513:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << STALLRQ)) ? true : false);
 514:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 515:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 516:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the data toggle of the currently selected endpoint. */
 517:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
 518:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void)
 519:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 520:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << RSTDT);
 521:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 522:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 523:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sets the direction of the currently selected endpoint.
 524:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 525:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] DirectionMask  New endpoint direction, as a \c ENDPOINT_DIR_* mask.
 526:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 527:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask) ATTR_ALWAYS_INLINE
 528:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask)
 529:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 530:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECFG0X = ((UECFG0X & ~(1 << EPDIR)) | (DirectionMask ? (1 << EPDIR) : 0));
 531:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 532:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 533:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Reads one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 534:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 535:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 536:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 537:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
 538:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 539:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 540:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void)
 541:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 542:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
 543:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 544:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 545:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Writes one byte to the currently selected endpoint's bank, for IN direction endpoints.
 546:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 547:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 548:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 549:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
 550:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 551:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
 552:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data)
 218               		.loc 3 552 23 view .LVU64
 219               	.LBB215:
 553:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 554:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 220               		.loc 3 554 5 view .LVU65
 221               		.loc 3 554 12 is_stmt 0 view .LVU66
 222 005c 8093 F100 		sts 241,r24
 223               	.LVL11:
 224               		.loc 3 554 12 view .LVU67
 225               	.LBE215:
 226               	.LBE214:
 857:tmk_core/protocol/lufa/lufa.c **** 
 858:tmk_core/protocol/lufa/lufa.c ****     // send when bank is full
 859:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) {
 227               		.loc 1 859 5 is_stmt 1 view .LVU68
 228               	.LBB216:
 229               	.LBI216:
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 230               		.loc 3 358 23 view .LVU69
 231               	.LBB217:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 232               		.loc 3 360 5 view .LVU70
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 233               		.loc 3 360 14 is_stmt 0 view .LVU71
 234 0060 8091 E800 		lds r24,232
 235               	.LVL12:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 236               		.loc 3 360 14 view .LVU72
 237               	.LBE217:
 238               	.LBE216:
 239               		.loc 1 859 8 view .LVU73
 240 0064 85FD      		sbrc r24,5
 241 0066 00C0      		rjmp .L12
 242               	.L13:
 860:tmk_core/protocol/lufa/lufa.c ****         while (!(Endpoint_IsINReady()));
 243               		.loc 1 860 40 is_stmt 1 discriminator 1 view .LVU74
 244               	.LBB218:
 245               	.LBI218:
 405:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 246               		.loc 3 405 23 discriminator 1 view .LVU75
 247               	.LBB219:
 407:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 248               		.loc 3 407 5 discriminator 1 view .LVU76
 407:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 249               		.loc 3 407 14 is_stmt 0 discriminator 1 view .LVU77
 250 0068 8091 E800 		lds r24,232
 251               	.LBE219:
 252               	.LBE218:
 253               		.loc 1 860 15 discriminator 1 view .LVU78
 254 006c 80FF      		sbrs r24,0
 255 006e 00C0      		rjmp .L13
 861:tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearIN();
 256               		.loc 1 861 9 is_stmt 1 view .LVU79
 257               	.LBB220:
 258               	.LBI220:
 453:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 259               		.loc 3 453 23 view .LVU80
 260               	.LBB221:
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 261               		.loc 3 456 6 view .LVU81
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 262               		.loc 3 456 13 is_stmt 0 view .LVU82
 263 0070 8091 E800 		lds r24,232
 264 0074 8E77      		andi r24,lo8(126)
 265 0076 8093 E800 		sts 232,r24
 266               	.LVL13:
 267               	.L14:
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 268               		.loc 3 456 13 view .LVU83
 269               	.LBE221:
 270               	.LBE220:
 862:tmk_core/protocol/lufa/lufa.c ****     } else {
 863:tmk_core/protocol/lufa/lufa.c ****         CONSOLE_FLUSH_SET(true);
 864:tmk_core/protocol/lufa/lufa.c ****     }
 865:tmk_core/protocol/lufa/lufa.c **** 
 866:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
 271               		.loc 1 866 5 is_stmt 1 view .LVU84
 272               	.LBB222:
 273               	.LBI222:
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 274               		.loc 3 267 23 view .LVU85
 275               	.LBB223:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 276               		.loc 3 270 6 view .LVU86
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 277               		.loc 3 270 23 is_stmt 0 view .LVU87
 278 007a 9F70      		andi r25,lo8(15)
 279               	.LVL14:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 280               		.loc 3 270 12 view .LVU88
 281 007c 9093 E900 		sts 233,r25
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 282               		.loc 3 270 12 view .LVU89
 283               	.LBE223:
 284               	.LBE222:
 867:tmk_core/protocol/lufa/lufa.c ****     return 0;
 285               		.loc 1 867 5 is_stmt 1 view .LVU90
 286               		.loc 1 867 12 is_stmt 0 view .LVU91
 287 0080 80E0      		ldi r24,0
 288 0082 0895      		ret
 289               	.LVL15:
 290               	.L11:
 843:tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 291               		.loc 1 843 9 is_stmt 1 view .LVU92
 843:tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 292               		.loc 1 843 29 is_stmt 0 view .LVU93
 293 0084 3091 0000 		lds r19,USB_DeviceState
 843:tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 294               		.loc 1 843 12 view .LVU94
 295 0088 3430      		cpi r19,lo8(4)
 296 008a 01F4      		brne .L10
 846:tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 297               		.loc 1 846 9 is_stmt 1 view .LVU95
 298               	.LBB224:
 299               	.LBI224:
 511:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 300               		.loc 3 511 23 view .LVU96
 301               	.LBB225:
 513:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 302               		.loc 3 513 5 view .LVU97
 513:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 303               		.loc 3 513 14 is_stmt 0 view .LVU98
 304 008c 3091 EB00 		lds r19,235
 305               	.LBE225:
 306               	.LBE224:
 846:tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 307               		.loc 1 846 12 view .LVU99
 308 0090 35FD      		sbrc r19,5
 309 0092 00C0      		rjmp .L10
 849:tmk_core/protocol/lufa/lufa.c ****             timeouted = true;
 310               		.loc 1 849 9 is_stmt 1 view .LVU100
 311               	.LVL16:
 849:tmk_core/protocol/lufa/lufa.c ****             timeouted = true;
 312               		.loc 1 849 9 is_stmt 0 view .LVU101
 313 0094 2150      		subi r18,lo8(-(-1))
 314               	.LVL17:
 849:tmk_core/protocol/lufa/lufa.c ****             timeouted = true;
 315               		.loc 1 849 12 view .LVU102
 316 0096 01F4      		brne .L9
 850:tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 317               		.loc 1 850 13 is_stmt 1 view .LVU103
 850:tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 318               		.loc 1 850 23 is_stmt 0 view .LVU104
 319 0098 81E0      		ldi r24,lo8(1)
 320               	.LVL18:
 850:tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 321               		.loc 1 850 23 view .LVU105
 322 009a 8093 0000 		sts timeouted.6172,r24
 851:tmk_core/protocol/lufa/lufa.c ****         }
 323               		.loc 1 851 13 is_stmt 1 view .LVU106
 324               	.LVL19:
 325               	.L10:
 868:tmk_core/protocol/lufa/lufa.c **** ERROR_EXIT:
 869:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
 326               		.loc 1 869 5 view .LVU107
 327               	.LBB226:
 328               	.LBI226:
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 329               		.loc 3 267 23 view .LVU108
 330               	.LBB227:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 331               		.loc 3 270 6 view .LVU109
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 332               		.loc 3 270 23 is_stmt 0 view .LVU110
 333 009e 9F70      		andi r25,lo8(15)
 334               	.LVL20:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 335               		.loc 3 270 12 view .LVU111
 336 00a0 9093 E900 		sts 233,r25
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 337               		.loc 3 270 12 view .LVU112
 338               	.LBE227:
 339               	.LBE226:
 870:tmk_core/protocol/lufa/lufa.c ****     return -1;
 340               		.loc 1 870 5 is_stmt 1 view .LVU113
 341               	.L15:
 827:tmk_core/protocol/lufa/lufa.c **** 
 342               		.loc 1 827 16 is_stmt 0 view .LVU114
 343 00a4 8FEF      		ldi r24,lo8(-1)
 344               	/* epilogue start */
 871:tmk_core/protocol/lufa/lufa.c **** }
 345               		.loc 1 871 1 view .LVU115
 346 00a6 0895      		ret
 347               	.LVL21:
 348               	.L9:
 853:tmk_core/protocol/lufa/lufa.c ****     }
 349               		.loc 1 853 9 is_stmt 1 view .LVU116
 350               	.LBB228:
 351               	.LBI228:
 352               		.file 4 "/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h"
   1:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** _delay_ms(double __ms)
 353               		.loc 4 166 1 view .LVU117
 354               	.LBB229:
 167:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	double __tmp ;
 355               		.loc 4 168 2 view .LVU118
 169:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 356               		.loc 4 172 2 view .LVU119
 173:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 357               		.loc 4 173 2 view .LVU120
 174:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 358               		.loc 4 174 2 view .LVU121
 175:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 359               		.loc 4 184 3 view .LVU122
 185:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 360               		.loc 4 187 2 view .LVU123
 361 00a8 EFE9      		ldi r30,lo8(3999)
 362 00aa FFE0      		ldi r31,hi8(3999)
 363 00ac 3197      	1:	sbiw r30,1
 364 00ae 01F4      		brne 1b
 365 00b0 00C0      		rjmp .
 366 00b2 0000      		nop
 367 00b4 00C0      		rjmp .L8
 368               	.LVL22:
 369               	.L12:
 370               		.loc 4 187 2 is_stmt 0 view .LVU124
 371               	.LBE229:
 372               	.LBE228:
 863:tmk_core/protocol/lufa/lufa.c ****     }
 373               		.loc 1 863 9 is_stmt 1 view .LVU125
 863:tmk_core/protocol/lufa/lufa.c ****     }
 374               		.loc 1 863 9 view .LVU126
 375               	.LBB230:
 863:tmk_core/protocol/lufa/lufa.c ****     }
 376               		.loc 1 863 9 view .LVU127
 377 00b6 8FB7      		in r24,__SREG__
 378               	.LVL23:
 379               	.LBB231:
 380               	.LBI231:
  48:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** {
 381               		.loc 2 48 27 view .LVU128
 382               	.LBB232:
  50:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****     return 1;
 383               		.loc 2 50 5 view .LVU129
 384               	/* #APP */
 385               	 ;  50 "/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h" 1
 386 00b8 F894      		cli
 387               	 ;  0 "" 2
  51:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** }
 388               		.loc 2 51 5 view .LVU130
 389               	.LVL24:
  51:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** }
 390               		.loc 2 51 5 is_stmt 0 view .LVU131
 391               	/* #NOAPP */
 392               	.LBE232:
 393               	.LBE231:
 863:tmk_core/protocol/lufa/lufa.c ****     }
 394               		.loc 1 863 9 is_stmt 1 view .LVU132
 395 00ba 21E0      		ldi r18,lo8(1)
 396               	.LVL25:
 863:tmk_core/protocol/lufa/lufa.c ****     }
 397               		.loc 1 863 9 is_stmt 0 view .LVU133
 398 00bc 2093 0000 		sts console_flush,r18
 399               	.LVL26:
 400               	.LBB233:
 401               	.LBI233:
  68:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h **** {
 402               		.loc 2 68 24 is_stmt 1 view .LVU134
 403               	.LBB234:
  70:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 404               		.loc 2 70 5 view .LVU135
  70:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 405               		.loc 2 70 10 is_stmt 0 view .LVU136
 406 00c0 8FBF      		out __SREG__,r24
 407               		.loc 2 71 5 is_stmt 1 view .LVU137
 408               	.LVL27:
 409               		.loc 2 71 5 is_stmt 0 view .LVU138
 410 00c2 00C0      		rjmp .L14
 411               	.LBE234:
 412               	.LBE233:
 413               	.LBE230:
 414               		.cfi_endproc
 415               	.LFE134:
 417               		.section	.text.send_consumer,"ax",@progbits
 419               	send_consumer:
 420               	.LVL28:
 421               	.LFB133:
 750:tmk_core/protocol/lufa/lufa.c **** #ifdef EXTRAKEY_ENABLE
 422               		.loc 1 750 1 is_stmt 1 view -0
 423               		.cfi_startproc
 750:tmk_core/protocol/lufa/lufa.c **** #ifdef EXTRAKEY_ENABLE
 424               		.loc 1 750 1 is_stmt 0 view .LVU140
 425 0000 0F93      		push r16
 426               	.LCFI0:
 427               		.cfi_def_cfa_offset 3
 428               		.cfi_offset 16, -2
 429 0002 1F93      		push r17
 430               	.LCFI1:
 431               		.cfi_def_cfa_offset 4
 432               		.cfi_offset 17, -3
 433 0004 CF93      		push r28
 434               	.LCFI2:
 435               		.cfi_def_cfa_offset 5
 436               		.cfi_offset 28, -4
 437 0006 DF93      		push r29
 438               	.LCFI3:
 439               		.cfi_def_cfa_offset 6
 440               		.cfi_offset 29, -5
 441 0008 00D0      		rcall .
 442 000a 0F92      		push __tmp_reg__
 443               	.LCFI4:
 444               		.cfi_def_cfa_offset 9
 445 000c CDB7      		in r28,__SP_L__
 446 000e DEB7      		in r29,__SP_H__
 447               	.LCFI5:
 448               		.cfi_def_cfa_register 28
 449               	/* prologue: function */
 450               	/* frame size = 3 */
 451               	/* stack size = 7 */
 452               	.L__stack_usage = 7
 453 0010 8C01      		movw r16,r24
 752:tmk_core/protocol/lufa/lufa.c ****     uint8_t where = where_to_send();
 454               		.loc 1 752 5 is_stmt 1 view .LVU141
 455               	.LVL29:
 753:tmk_core/protocol/lufa/lufa.c **** 
 456               		.loc 1 753 5 view .LVU142
 753:tmk_core/protocol/lufa/lufa.c **** 
 457               		.loc 1 753 21 is_stmt 0 view .LVU143
 458 0012 0E94 0000 		call where_to_send
 459               	.LVL30:
 787:tmk_core/protocol/lufa/lufa.c ****       return;
 460               		.loc 1 787 5 is_stmt 1 view .LVU144
 787:tmk_core/protocol/lufa/lufa.c ****       return;
 461               		.loc 1 787 8 is_stmt 0 view .LVU145
 462 0016 8230      		cpi r24,lo8(2)
 463 0018 01F0      		breq .L29
 787:tmk_core/protocol/lufa/lufa.c ****       return;
 464               		.loc 1 787 29 discriminator 1 view .LVU146
 465 001a 8430      		cpi r24,lo8(4)
 466 001c 01F4      		brne .L28
 467               	.L29:
 791:tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_CONSUMER,
 468               		.loc 1 791 5 is_stmt 1 view .LVU147
 791:tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_CONSUMER,
 469               		.loc 1 791 20 is_stmt 0 view .LVU148
 470 001e 84E0      		ldi r24,lo8(4)
 471               	.LVL31:
 791:tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_CONSUMER,
 472               		.loc 1 791 20 view .LVU149
 473 0020 8983      		std Y+1,r24
 474 0022 1B83      		std Y+3,r17
 475 0024 0A83      		std Y+2,r16
 795:tmk_core/protocol/lufa/lufa.c **** 
 476               		.loc 1 795 5 is_stmt 1 view .LVU150
 477               	.LVL32:
 478               	.LBB235:
 479               	.LBI235:
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 480               		.loc 3 267 23 view .LVU151
 481               	.LBB236:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 482               		.loc 3 270 6 view .LVU152
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 483               		.loc 3 270 12 is_stmt 0 view .LVU153
 484 0026 82E0      		ldi r24,lo8(2)
 485 0028 8093 E900 		sts 233,r24
 486               	.LVL33:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 487               		.loc 3 270 12 view .LVU154
 488 002c 8FEF      		ldi r24,lo8(-1)
 489               	.LVL34:
 490               	.L31:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 491               		.loc 3 270 12 view .LVU155
 492               	.LBE236:
 493               	.LBE235:
 494               	.LBB237:
 495               	.LBI237:
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 496               		.loc 3 358 23 is_stmt 1 view .LVU156
 497               	.LBB238:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 498               		.loc 3 360 5 view .LVU157
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 499               		.loc 3 360 14 is_stmt 0 view .LVU158
 500 002e 9091 E800 		lds r25,232
 501 0032 8150      		subi r24,lo8(-(-1))
 502               	.LVL35:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 503               		.loc 3 360 14 view .LVU159
 504               	.LBE238:
 505               	.LBE237:
 798:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 506               		.loc 1 798 22 view .LVU160
 507 0034 95FD      		sbrc r25,5
 508 0036 00C0      		rjmp .L32
 798:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 509               		.loc 1 798 57 is_stmt 1 view .LVU161
 510               	.LVL36:
 511               	.LBB239:
 512               	.LBI239:
 188:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 189:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #else
 190:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	uint16_t __ticks;
 191:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 192:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 193:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 		__ticks = 1;
 194:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 195:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	{
 196:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 197:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 198:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 		while(__ticks)
 199:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 		{
 200:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 			// wait 1/10 ms
 201:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 202:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 			__ticks --;
 203:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 		}
 204:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 		return;
 205:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	}
 206:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	else
 207:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 		__ticks = (uint16_t)__tmp;
 208:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	_delay_loop_2(__ticks);
 209:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #endif
 210:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** }
 211:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 212:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** /**
 213:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    \ingroup util_delay
 214:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 215:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
 216:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 217:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 218:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 219:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 220:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 221:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 222:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 223:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 224:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    will not be informed about this case.
 225:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 226:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 227:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 us/ F_CPU in MHz. For
 228:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflow results in
 229:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    no delay i.e., 0us.
 230:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 231:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    Conversion of \c __us into clock cycles may not always result in
 232:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 233:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __us
 234:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    microseconds of delay.
 235:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 236:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 237:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 238:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 239:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    respectively.
 240:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 241:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    \note
 242:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 243:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 244:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 245:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 246:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    with previous versions, the macro \c __DELAY_BACKWARD_COMPATIBLE__
 247:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 248:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 249:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 250:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 251:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****    not available to the compiler then.
 252:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 253:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****  */
 254:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** void
 255:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** _delay_us(double __us)
 513               		.loc 4 255 1 view .LVU162
 514               	.LBB240:
 256:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** {
 257:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	double __tmp ;
 515               		.loc 4 257 2 view .LVU163
 258:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 259:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 260:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 261:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 516               		.loc 4 261 2 view .LVU164
 262:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 517               		.loc 4 262 2 view .LVU165
 263:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 518               		.loc 4 263 2 view .LVU166
 264:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 265:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 266:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 267:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 268:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 269:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 270:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 271:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	#else
 272:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 		//round up by default
 273:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 519               		.loc 4 273 3 view .LVU167
 274:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	#endif
 275:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 276:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 520               		.loc 4 276 2 view .LVU168
 521 0038 95ED      		ldi r25,lo8(-43)
 522 003a 9A95      	1:	dec r25
 523 003c 01F4      		brne 1b
 524 003e 0000      		nop
 525               	.LVL37:
 526               		.loc 4 276 2 is_stmt 0 view .LVU169
 527               	.LBE240:
 528               	.LBE239:
 798:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 529               		.loc 1 798 11 view .LVU170
 530 0040 8111      		cpse r24,__zero_reg__
 531 0042 00C0      		rjmp .L31
 532               	.LVL38:
 533               	.L32:
 799:tmk_core/protocol/lufa/lufa.c **** 
 534               		.loc 1 799 5 is_stmt 1 view .LVU171
 535               	.LBB241:
 536               	.LBI241:
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 537               		.loc 3 358 23 view .LVU172
 538               	.LBB242:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 539               		.loc 3 360 5 view .LVU173
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 540               		.loc 3 360 14 is_stmt 0 view .LVU174
 541 0044 8091 E800 		lds r24,232
 542               	.LBE242:
 543               	.LBE241:
 799:tmk_core/protocol/lufa/lufa.c **** 
 544               		.loc 1 799 8 view .LVU175
 545 0048 85FF      		sbrs r24,5
 546 004a 00C0      		rjmp .L28
 801:tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 547               		.loc 1 801 5 is_stmt 1 view .LVU176
 548 004c 50E0      		ldi r21,0
 549 004e 40E0      		ldi r20,0
 550 0050 63E0      		ldi r22,lo8(3)
 551 0052 70E0      		ldi r23,0
 552 0054 CE01      		movw r24,r28
 553 0056 0196      		adiw r24,1
 554 0058 0E94 0000 		call Endpoint_Write_Stream_LE
 555               	.LVL39:
 802:tmk_core/protocol/lufa/lufa.c **** #endif
 556               		.loc 1 802 5 view .LVU177
 557               	.LBB243:
 558               	.LBI243:
 453:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 559               		.loc 3 453 23 view .LVU178
 560               	.LBB244:
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 561               		.loc 3 456 6 view .LVU179
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 562               		.loc 3 456 13 is_stmt 0 view .LVU180
 563 005c 8091 E800 		lds r24,232
 564 0060 8E77      		andi r24,lo8(126)
 565 0062 8093 E800 		sts 232,r24
 566               	.LVL40:
 567               	.L28:
 568               	/* epilogue start */
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 569               		.loc 3 456 13 view .LVU181
 570               	.LBE244:
 571               	.LBE243:
 804:tmk_core/protocol/lufa/lufa.c **** 
 572               		.loc 1 804 1 view .LVU182
 573 0066 0F90      		pop __tmp_reg__
 574 0068 0F90      		pop __tmp_reg__
 575 006a 0F90      		pop __tmp_reg__
 576 006c DF91      		pop r29
 577 006e CF91      		pop r28
 578 0070 1F91      		pop r17
 579 0072 0F91      		pop r16
 580               	.LVL41:
 804:tmk_core/protocol/lufa/lufa.c **** 
 581               		.loc 1 804 1 view .LVU183
 582 0074 0895      		ret
 583               		.cfi_endproc
 584               	.LFE133:
 586               		.section	.text.send_system,"ax",@progbits
 588               	send_system:
 589               	.LVL42:
 590               	.LFB132:
 723:tmk_core/protocol/lufa/lufa.c **** #ifdef EXTRAKEY_ENABLE
 591               		.loc 1 723 1 is_stmt 1 view -0
 592               		.cfi_startproc
 723:tmk_core/protocol/lufa/lufa.c **** #ifdef EXTRAKEY_ENABLE
 593               		.loc 1 723 1 is_stmt 0 view .LVU185
 594 0000 CF93      		push r28
 595               	.LCFI6:
 596               		.cfi_def_cfa_offset 3
 597               		.cfi_offset 28, -2
 598 0002 DF93      		push r29
 599               	.LCFI7:
 600               		.cfi_def_cfa_offset 4
 601               		.cfi_offset 29, -3
 602 0004 00D0      		rcall .
 603 0006 0F92      		push __tmp_reg__
 604               	.LCFI8:
 605               		.cfi_def_cfa_offset 7
 606 0008 CDB7      		in r28,__SP_L__
 607 000a DEB7      		in r29,__SP_H__
 608               	.LCFI9:
 609               		.cfi_def_cfa_register 28
 610               	/* prologue: function */
 611               	/* frame size = 3 */
 612               	/* stack size = 5 */
 613               	.L__stack_usage = 5
 725:tmk_core/protocol/lufa/lufa.c **** 
 614               		.loc 1 725 5 is_stmt 1 view .LVU186
 615               	.LVL43:
 727:tmk_core/protocol/lufa/lufa.c ****         return;
 616               		.loc 1 727 5 view .LVU187
 727:tmk_core/protocol/lufa/lufa.c ****         return;
 617               		.loc 1 727 25 is_stmt 0 view .LVU188
 618 000c 2091 0000 		lds r18,USB_DeviceState
 727:tmk_core/protocol/lufa/lufa.c ****         return;
 619               		.loc 1 727 8 view .LVU189
 620 0010 2430      		cpi r18,lo8(4)
 621 0012 01F4      		brne .L44
 730:tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_SYSTEM,
 622               		.loc 1 730 5 is_stmt 1 view .LVU190
 730:tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_SYSTEM,
 623               		.loc 1 730 20 is_stmt 0 view .LVU191
 624 0014 23E0      		ldi r18,lo8(3)
 625 0016 2983      		std Y+1,r18
 732:tmk_core/protocol/lufa/lufa.c ****     };
 626               		.loc 1 732 43 view .LVU192
 627 0018 8058      		subi r24,-128
 628 001a 9109      		sbc r25,__zero_reg__
 629               	.LVL44:
 730:tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_SYSTEM,
 630               		.loc 1 730 20 view .LVU193
 631 001c 9B83      		std Y+3,r25
 632 001e 8A83      		std Y+2,r24
 734:tmk_core/protocol/lufa/lufa.c **** 
 633               		.loc 1 734 5 is_stmt 1 view .LVU194
 634               	.LVL45:
 635               	.LBB245:
 636               	.LBI245:
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 637               		.loc 3 267 23 view .LVU195
 638               	.LBB246:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 639               		.loc 3 270 6 view .LVU196
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 640               		.loc 3 270 12 is_stmt 0 view .LVU197
 641 0020 82E0      		ldi r24,lo8(2)
 642               	.LVL46:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 643               		.loc 3 270 12 view .LVU198
 644 0022 8093 E900 		sts 233,r24
 645               	.LVL47:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 646               		.loc 3 270 12 view .LVU199
 647 0026 8FEF      		ldi r24,lo8(-1)
 648               	.LVL48:
 649               	.L46:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 650               		.loc 3 270 12 view .LVU200
 651               	.LBE246:
 652               	.LBE245:
 653               	.LBB247:
 654               	.LBI247:
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 655               		.loc 3 358 23 is_stmt 1 view .LVU201
 656               	.LBB248:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 657               		.loc 3 360 5 view .LVU202
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 658               		.loc 3 360 14 is_stmt 0 view .LVU203
 659 0028 9091 E800 		lds r25,232
 660 002c 8150      		subi r24,lo8(-(-1))
 661               	.LVL49:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 662               		.loc 3 360 14 view .LVU204
 663               	.LBE248:
 664               	.LBE247:
 737:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 665               		.loc 1 737 22 view .LVU205
 666 002e 95FD      		sbrc r25,5
 667 0030 00C0      		rjmp .L47
 737:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 668               		.loc 1 737 57 is_stmt 1 view .LVU206
 669               	.LVL50:
 670               	.LBB249:
 671               	.LBI249:
 255:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** {
 672               		.loc 4 255 1 view .LVU207
 673               	.LBB250:
 257:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 674               		.loc 4 257 2 view .LVU208
 261:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 675               		.loc 4 261 2 view .LVU209
 262:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 676               		.loc 4 262 2 view .LVU210
 263:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 677               		.loc 4 263 2 view .LVU211
 273:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	#endif
 678               		.loc 4 273 3 view .LVU212
 679               		.loc 4 276 2 view .LVU213
 680 0032 95ED      		ldi r25,lo8(-43)
 681 0034 9A95      	1:	dec r25
 682 0036 01F4      		brne 1b
 683 0038 0000      		nop
 684               	.LVL51:
 685               		.loc 4 276 2 is_stmt 0 view .LVU214
 686               	.LBE250:
 687               	.LBE249:
 737:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 688               		.loc 1 737 11 view .LVU215
 689 003a 8111      		cpse r24,__zero_reg__
 690 003c 00C0      		rjmp .L46
 691               	.LVL52:
 692               	.L47:
 738:tmk_core/protocol/lufa/lufa.c **** 
 693               		.loc 1 738 5 is_stmt 1 view .LVU216
 694               	.LBB251:
 695               	.LBI251:
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 696               		.loc 3 358 23 view .LVU217
 697               	.LBB252:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 698               		.loc 3 360 5 view .LVU218
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 699               		.loc 3 360 14 is_stmt 0 view .LVU219
 700 003e 8091 E800 		lds r24,232
 701               	.LBE252:
 702               	.LBE251:
 738:tmk_core/protocol/lufa/lufa.c **** 
 703               		.loc 1 738 8 view .LVU220
 704 0042 85FF      		sbrs r24,5
 705 0044 00C0      		rjmp .L44
 740:tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 706               		.loc 1 740 5 is_stmt 1 view .LVU221
 707 0046 50E0      		ldi r21,0
 708 0048 40E0      		ldi r20,0
 709 004a 63E0      		ldi r22,lo8(3)
 710 004c 70E0      		ldi r23,0
 711 004e CE01      		movw r24,r28
 712 0050 0196      		adiw r24,1
 713 0052 0E94 0000 		call Endpoint_Write_Stream_LE
 714               	.LVL53:
 741:tmk_core/protocol/lufa/lufa.c **** #endif
 715               		.loc 1 741 5 view .LVU222
 716               	.LBB253:
 717               	.LBI253:
 453:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 718               		.loc 3 453 23 view .LVU223
 719               	.LBB254:
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 720               		.loc 3 456 6 view .LVU224
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 721               		.loc 3 456 13 is_stmt 0 view .LVU225
 722 0056 8091 E800 		lds r24,232
 723 005a 8E77      		andi r24,lo8(126)
 724 005c 8093 E800 		sts 232,r24
 725               	.LVL54:
 726               	.L44:
 727               	/* epilogue start */
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 728               		.loc 3 456 13 view .LVU226
 729               	.LBE254:
 730               	.LBE253:
 743:tmk_core/protocol/lufa/lufa.c **** 
 731               		.loc 1 743 1 view .LVU227
 732 0060 0F90      		pop __tmp_reg__
 733 0062 0F90      		pop __tmp_reg__
 734 0064 0F90      		pop __tmp_reg__
 735 0066 DF91      		pop r29
 736 0068 CF91      		pop r28
 737 006a 0895      		ret
 738               		.cfi_endproc
 739               	.LFE132:
 741               		.section	.text.send_keyboard,"ax",@progbits
 743               	send_keyboard:
 744               	.LVL55:
 745               	.LFB130:
 611:tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 746               		.loc 1 611 1 is_stmt 1 view -0
 747               		.cfi_startproc
 611:tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 748               		.loc 1 611 1 is_stmt 0 view .LVU229
 749 0000 CF93      		push r28
 750               	.LCFI10:
 751               		.cfi_def_cfa_offset 3
 752               		.cfi_offset 28, -2
 753 0002 DF93      		push r29
 754               	.LCFI11:
 755               		.cfi_def_cfa_offset 4
 756               		.cfi_offset 29, -3
 757               	/* prologue: function */
 758               	/* frame size = 0 */
 759               	/* stack size = 2 */
 760               	.L__stack_usage = 2
 761 0004 EC01      		movw r28,r24
 612:tmk_core/protocol/lufa/lufa.c ****     uint8_t where = where_to_send();
 762               		.loc 1 612 5 is_stmt 1 view .LVU230
 763               	.LVL56:
 613:tmk_core/protocol/lufa/lufa.c **** 
 764               		.loc 1 613 5 view .LVU231
 613:tmk_core/protocol/lufa/lufa.c **** 
 765               		.loc 1 613 21 is_stmt 0 view .LVU232
 766 0006 0E94 0000 		call where_to_send
 767               	.LVL57:
 639:tmk_core/protocol/lufa/lufa.c ****       return;
 768               		.loc 1 639 5 is_stmt 1 view .LVU233
 639:tmk_core/protocol/lufa/lufa.c ****       return;
 769               		.loc 1 639 8 is_stmt 0 view .LVU234
 770 000a 8230      		cpi r24,lo8(2)
 771 000c 01F0      		breq .L57
 639:tmk_core/protocol/lufa/lufa.c ****       return;
 772               		.loc 1 639 29 discriminator 1 view .LVU235
 773 000e 8430      		cpi r24,lo8(4)
 774 0010 01F4      		brne .L56
 775               	.L57:
 644:tmk_core/protocol/lufa/lufa.c ****     uint8_t size = KEYBOARD_REPORT_SIZE;
 776               		.loc 1 644 5 is_stmt 1 view .LVU236
 777               	.LVL58:
 645:tmk_core/protocol/lufa/lufa.c **** #ifdef NKRO_ENABLE
 778               		.loc 1 645 5 view .LVU237
 652:tmk_core/protocol/lufa/lufa.c ****     /* Check if write ready for a polling interval around 10ms */
 779               		.loc 1 652 5 view .LVU238
 780               	.LBB255:
 781               	.LBI255:
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 782               		.loc 3 267 23 view .LVU239
 783               	.LBB256:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 784               		.loc 3 270 6 view .LVU240
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 785               		.loc 3 270 12 is_stmt 0 view .LVU241
 786 0012 81E0      		ldi r24,lo8(1)
 787               	.LVL59:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 788               		.loc 3 270 12 view .LVU242
 789 0014 8093 E900 		sts 233,r24
 790               	.LVL60:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 791               		.loc 3 270 12 view .LVU243
 792 0018 8FEF      		ldi r24,lo8(-1)
 793               	.LVL61:
 794               	.L59:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 795               		.loc 3 270 12 view .LVU244
 796               	.LBE256:
 797               	.LBE255:
 798               	.LBB257:
 799               	.LBI257:
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 800               		.loc 3 358 23 is_stmt 1 view .LVU245
 801               	.LBB258:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 802               		.loc 3 360 5 view .LVU246
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 803               		.loc 3 360 14 is_stmt 0 view .LVU247
 804 001a 9091 E800 		lds r25,232
 805 001e 8150      		subi r24,lo8(-(-1))
 806               	.LVL62:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 807               		.loc 3 360 14 view .LVU248
 808               	.LBE258:
 809               	.LBE257:
 654:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 810               		.loc 1 654 22 view .LVU249
 811 0020 95FD      		sbrc r25,5
 812 0022 00C0      		rjmp .L60
 654:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 813               		.loc 1 654 57 is_stmt 1 view .LVU250
 814               	.LVL63:
 815               	.LBB259:
 816               	.LBI259:
 255:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** {
 817               		.loc 4 255 1 view .LVU251
 818               	.LBB260:
 257:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 819               		.loc 4 257 2 view .LVU252
 261:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 820               		.loc 4 261 2 view .LVU253
 262:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 821               		.loc 4 262 2 view .LVU254
 263:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 
 822               		.loc 4 263 2 view .LVU255
 273:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/util/delay.h **** 	#endif
 823               		.loc 4 273 3 view .LVU256
 824               		.loc 4 276 2 view .LVU257
 825 0024 95ED      		ldi r25,lo8(-43)
 826 0026 9A95      	1:	dec r25
 827 0028 01F4      		brne 1b
 828 002a 0000      		nop
 829               	.LVL64:
 830               		.loc 4 276 2 is_stmt 0 view .LVU258
 831               	.LBE260:
 832               	.LBE259:
 654:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 833               		.loc 1 654 11 view .LVU259
 834 002c 8111      		cpse r24,__zero_reg__
 835 002e 00C0      		rjmp .L59
 836               	.LVL65:
 837               	.L60:
 655:tmk_core/protocol/lufa/lufa.c **** 
 838               		.loc 1 655 5 is_stmt 1 view .LVU260
 839               	.LBB261:
 840               	.LBI261:
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 841               		.loc 3 358 23 view .LVU261
 842               	.LBB262:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 843               		.loc 3 360 5 view .LVU262
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 844               		.loc 3 360 14 is_stmt 0 view .LVU263
 845 0030 8091 E800 		lds r24,232
 846               	.LBE262:
 847               	.LBE261:
 655:tmk_core/protocol/lufa/lufa.c **** 
 848               		.loc 1 655 8 view .LVU264
 849 0034 85FF      		sbrs r24,5
 850 0036 00C0      		rjmp .L56
 658:tmk_core/protocol/lufa/lufa.c ****         Endpoint_Write_Stream_LE(&report->mods, 8, NULL);
 851               		.loc 1 658 5 is_stmt 1 view .LVU265
 659:tmk_core/protocol/lufa/lufa.c ****     } else {
 852               		.loc 1 659 9 is_stmt 0 view .LVU266
 853 0038 50E0      		ldi r21,0
 854 003a 40E0      		ldi r20,0
 855 003c 68E0      		ldi r22,lo8(8)
 856 003e 70E0      		ldi r23,0
 661:tmk_core/protocol/lufa/lufa.c ****     }
 857               		.loc 1 661 9 is_stmt 1 view .LVU267
 858 0040 CE01      		movw r24,r28
 859 0042 0E94 0000 		call Endpoint_Write_Stream_LE
 860               	.LVL66:
 665:tmk_core/protocol/lufa/lufa.c **** 
 861               		.loc 1 665 5 view .LVU268
 862               	.LBB263:
 863               	.LBI263:
 453:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 864               		.loc 3 453 23 view .LVU269
 865               	.LBB264:
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 866               		.loc 3 456 6 view .LVU270
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 867               		.loc 3 456 13 is_stmt 0 view .LVU271
 868 0046 8091 E800 		lds r24,232
 869 004a 8E77      		andi r24,lo8(126)
 870 004c 8093 E800 		sts 232,r24
 871               	.LBE264:
 872               	.LBE263:
 667:tmk_core/protocol/lufa/lufa.c **** }
 873               		.loc 1 667 5 is_stmt 1 view .LVU272
 667:tmk_core/protocol/lufa/lufa.c **** }
 874               		.loc 1 667 26 is_stmt 0 view .LVU273
 875 0050 88E0      		ldi r24,lo8(8)
 876 0052 FE01      		movw r30,r28
 877 0054 A0E0      		ldi r26,lo8(keyboard_report_sent)
 878 0056 B0E0      		ldi r27,hi8(keyboard_report_sent)
 879               		0:
 880 0058 0190      		ld r0,Z+
 881 005a 0D92      		st X+,r0
 882 005c 8A95      		dec r24
 883 005e 01F4      		brne 0b
 884               	.LVL67:
 885               	.L56:
 886               	/* epilogue start */
 668:tmk_core/protocol/lufa/lufa.c ****  
 887               		.loc 1 668 1 view .LVU274
 888 0060 DF91      		pop r29
 889 0062 CF91      		pop r28
 890               	.LVL68:
 668:tmk_core/protocol/lufa/lufa.c ****  
 891               		.loc 1 668 1 view .LVU275
 892 0064 0895      		ret
 893               		.cfi_endproc
 894               	.LFE130:
 896               		.section	.text.EVENT_USB_Device_Connect,"ax",@progbits
 897               	.global	EVENT_USB_Device_Connect
 899               	EVENT_USB_Device_Connect:
 900               	.LFB121:
 307:tmk_core/protocol/lufa/lufa.c ****     print("[C]");
 901               		.loc 1 307 1 is_stmt 1 view -0
 902               		.cfi_startproc
 903               	/* prologue: function */
 904               	/* frame size = 0 */
 905               	/* stack size = 0 */
 906               	.L__stack_usage = 0
 308:tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 907               		.loc 1 308 5 view .LVU277
 908               	.LBB265:
 308:tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 909               		.loc 1 308 5 view .LVU278
 308:tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 910               		.loc 1 308 5 view .LVU279
 911               	.LBE265:
 912 0000 80E0      		ldi r24,lo8(__c.6080)
 913 0002 90E0      		ldi r25,hi8(__c.6080)
 914 0004 0E94 0000 		call xputs
 915               	.LVL69:
 310:tmk_core/protocol/lufa/lufa.c ****         USB_Disable();
 916               		.loc 1 310 5 view .LVU280
 310:tmk_core/protocol/lufa/lufa.c ****         USB_Disable();
 917               		.loc 1 310 9 is_stmt 0 view .LVU281
 918 0008 8091 0000 		lds r24,USB_IsInitialized
 310:tmk_core/protocol/lufa/lufa.c ****         USB_Disable();
 919               		.loc 1 310 8 view .LVU282
 920 000c 8111      		cpse r24,__zero_reg__
 921 000e 00C0      		rjmp .L77
 311:tmk_core/protocol/lufa/lufa.c ****         USB_Init();
 922               		.loc 1 311 9 is_stmt 1 view .LVU283
 923 0010 0E94 0000 		call USB_Disable
 924               	.LVL70:
 312:tmk_core/protocol/lufa/lufa.c ****         USB_Device_EnableSOFEvents();
 925               		.loc 1 312 9 view .LVU284
 926 0014 0E94 0000 		call USB_Init
 927               	.LVL71:
 313:tmk_core/protocol/lufa/lufa.c ****     }
 928               		.loc 1 313 9 view .LVU285
 929               	.LBB266:
 930               	.LBI266:
 931               		.file 5 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h"
   1:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /*
   2:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****              LUFA Library
   3:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****      Copyright (C) Dean Camera, 2017.
   4:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
   5:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****            www.lufa-lib.org
   7:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** */
   8:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
   9:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /*
  10:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   Copyright 2017  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  12:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   all copies and that both that the copyright notice and this
  16:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   documentation, and that the name of the author not be used in
  18:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   software without specific, written prior permission.
  20:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  21:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   The author disclaims all warranties with regard to this
  22:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   software, including all implied warranties of merchantability
  23:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   special, indirect or consequential damages or any damages
  25:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   arising out of or in connection with the use or performance of
  28:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   this software.
  29:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** */
  30:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  31:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /** \file
  32:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \brief USB Device definitions for the AVR8 microcontrollers.
  33:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \copydetails Group_Device_AVR8
  34:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *
  35:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  */
  38:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  39:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /** \ingroup Group_Device
  40:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \defgroup Group_Device_AVR8 Device Management (AVR8)
  41:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \brief USB Device definitions for the AVR8 microcontrollers.
  42:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *
  43:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  Architecture specific USB Device definitions for the Atmel 8-bit AVR microcontrollers.
  44:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *
  45:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  @{
  46:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  */
  47:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  48:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** #ifndef __USBDEVICE_AVR8_H__
  49:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** #define __USBDEVICE_AVR8_H__
  50:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  51:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Includes: */
  52:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../../../../Common/Common.h"
  53:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../USBController.h"
  54:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../StdDescriptors.h"
  55:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../USBInterrupt.h"
  56:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../Endpoint.h"
  57:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  58:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  59:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if defined(__cplusplus)
  60:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			extern "C" {
  61:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  62:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  63:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Preprocessor Checks: */
  64:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  65:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  66:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  67:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  68:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_RAM_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
  69:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_RAM_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  70:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  71:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  72:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
  73:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_FLASH_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  74:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  75:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  76:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_RAM_DESCRIPTORS))
  77:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_FLASH_DESCRIPTORS and USE_RAM_DESCRIPTORS are mutually exclusive.
  78:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  79:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  80:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Public Interface - May be used in end-application: */
  81:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Macros: */
  82:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** \name USB Device Mode Option Masks */
  83:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			//@{
  84:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defin
  85:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  86:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  USB interface should be initialized in low speed (1.5Mb/s) mode.
  87:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
  88:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note Low Speed mode is not available on all USB AVR models.
  89:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *        \n
  90:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
  91:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note Restrictions apply on the number, size and type of endpoints which can be used
  92:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *        when running in low speed mode - please refer to the USB 2.0 specification.
  93:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
  94:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define USB_DEVICE_OPT_LOWSPEED            (1 << 0)
  95:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#endif
  96:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  97:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  98:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  USB interface should be initialized in full speed (12Mb/s) mode.
  99:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#define USB_DEVICE_OPT_FULLSPEED               (0 << 0)
 101:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			//@}
 102:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 103:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if (!defined(NO_INTERNAL_SERIAL) && \
 104:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			     (defined(USB_SERIES_7_AVR) || defined(USB_SERIES_6_AVR) || \
 105:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			      defined(USB_SERIES_4_AVR) || defined(USB_SERIES_2_AVR) || \
 106:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				  defined(__DOXYGEN__)))
 107:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** String descriptor index for the device's unique serial number string descriptor within the 
 108:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  This unique serial number is used by the host to associate resources to the device (such as
 109:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  number allocations) to a device regardless of the port it is plugged in to on the host. Som
 110:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  a unique serial number internally, and setting the device descriptors serial number string 
 111:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  will cause it to use the internal serial number.
 112:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
 113:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  On unsupported devices, this will evaluate to \ref NO_DESCRIPTOR and so will force the host
 114:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  number for the device.
 115:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 116:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define USE_INTERNAL_SERIAL            0xDC
 117:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 118:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Length of the device's unique internal serial number, in bits, if present on the selected m
 119:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  model.
 120:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 121:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS    80
 122:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 123:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Start address of the internal serial number, in the appropriate address space, if present o
 124:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  model.
 125:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 126:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_START_ADDRESS  0x0E
 127:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#else
 128:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define USE_INTERNAL_SERIAL            NO_DESCRIPTOR
 129:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 130:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS    0
 131:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_START_ADDRESS  0
 132:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#endif
 133:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 134:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Function Prototypes: */
 135:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Sends a Remote Wakeup request to the host. This signals to the host that the device should
 136:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  be taken out of suspended mode, and communications should resume.
 137:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 138:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  Typically, this is implemented so that HID devices (mice, keyboards, etc.) can wake up the
 139:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  host computer when the host has suspended all USB devices to enter a low power state.
 140:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 141:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \attention This function should only be used if the device has indicated to the host that it
 142:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             supports the Remote Wakeup feature in the device descriptors, and should only be
 143:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             issued if the host is currently allowing remote wakeup events from the device (i.
 144:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             the \ref USB_Device_RemoteWakeupEnabled flag is set). When the \c NO_DEVICE_REMOT
 145:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             compile time option is used, this function is unavailable.
 146:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             \n\n
 147:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 148:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \attention The USB clock must be running for this function to operate. If the stack is initi
 149:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             the \ref USB_OPT_MANUAL_PLL option enabled, the user must ensure that the PLL is 
 150:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             before attempting to call this function.
 151:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 152:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \see \ref Group_StdDescriptors for more information on the RMWAKEUP feature and device descr
 153:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 154:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			void USB_Device_SendRemoteWakeup(void);
 155:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 156:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Inline Functions: */
 157:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Returns the current USB frame number, when in device mode. Every millisecond the USB bus is 
 158:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  the frame number is incremented by one.
 159:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 160:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \return Current USB frame number from the USB controller.
 161:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 162:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESUL
 163:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void)
 164:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			{
 165:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				return UDFNUM;
 166:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			}
 167:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 168:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if !defined(NO_SOF_EVENTS)
 169:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Enables the device mode Start Of Frame events. When enabled, this causes the
 170:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \ref EVENT_USB_Device_StartOfFrame() event to fire once per millisecond, synchronized to th
 171:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  at the start of each USB frame when enumerated in device mode.
 172:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
 173:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note This function is not available when the \c NO_SOF_EVENTS compile time token is define
 174:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 175:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_EnableSOFEvents(void) ATTR_ALWAYS_INLINE;
 176:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_EnableSOFEvents(void)
 932               		.loc 5 176 24 view .LVU286
 933               	.LBE266:
 177:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				{
 178:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 					USB_INT_Enable(USB_INT_SOFI);
 934               		.loc 5 178 6 view .LVU287
 935               	.LBB269:
 936               	.LBB267:
 937               	.LBI267:
 938               		.file 6 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h"
   1:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /*
   2:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****              LUFA Library
   3:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****      Copyright (C) Dean Camera, 2017.
   4:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
   5:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****            www.lufa-lib.org
   7:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** */
   8:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
   9:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /*
  10:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   Copyright 2017  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  12:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   all copies and that both that the copyright notice and this
  16:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   documentation, and that the name of the author not be used in
  18:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software without specific, written prior permission.
  20:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  21:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   The author disclaims all warranties with regard to this
  22:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software, including all implied warranties of merchantability
  23:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   special, indirect or consequential damages or any damages
  25:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   arising out of or in connection with the use or performance of
  28:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   this software.
  29:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** */
  30:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  31:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /** \file
  32:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  \brief USB Controller Interrupt definitions for the AVR8 microcontrollers.
  33:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *
  34:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  This file contains definitions required for the correct handling of low level USB service routi
  35:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  from the USB controller.
  36:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *
  37:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  38:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  39:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  */
  40:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  41:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** #ifndef __USBINTERRUPT_AVR8_H__
  42:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** #define __USBINTERRUPT_AVR8_H__
  43:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  44:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Includes: */
  45:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#include "../../../../Common/Common.h"
  46:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  47:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  48:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#if defined(__cplusplus)
  49:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			extern "C" {
  50:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#endif
  51:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  52:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Preprocessor Checks: */
  53:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  54:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  55:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#endif
  56:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  57:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Private Interface - For use in library only: */
  58:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	#if !defined(__DOXYGEN__)
  59:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		/* Enums: */
  60:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			enum USB_Interrupts_t
  61:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
  62:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || def
  63:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_VBUSTI  = 0,
  64:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  65:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_BOTH) || defined(__DOXYGEN__))
  66:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_IDTI    = 1,
  67:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  68:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_DEVICE) || defined(__DOXYGEN__))
  69:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_WAKEUPI = 2,
  70:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SUSPI   = 3,
  71:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_EORSTI  = 4,
  72:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SOFI    = 5,
  73:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_RXSTPI  = 6,
  74:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  75:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_HOST) || defined(__DOXYGEN__))
  76:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_HSOFI   = 7,
  77:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_DCONNI  = 8,
  78:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_DDISCI  = 9,
  79:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_RSTI    = 10,
  80:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_BCERRI  = 11,
  81:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_VBERRI  = 12,
  82:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SRPI    = 13,
  83:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  84:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			};
  85:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  86:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		/* Inline Functions: */
  87:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Enable(const uint8_t Interrupt) ATTR_ALWAYS_INLINE;
  88:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Enable(const uint8_t Interrupt)
 939               		.loc 6 88 23 view .LVU288
 940               	.LBB268:
  89:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
  90:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				switch (Interrupt)
 941               		.loc 6 90 5 view .LVU289
  91:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
  92:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
  93:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBUSTI:
  94:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON |= (1 << VBUSTE);
  95:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
  96:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
  97:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_BOTH)
  98:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_IDTI:
  99:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON |= (1 << IDTE);
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 101:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 102:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_DEVICE)
 103:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_WAKEUPI:
 104:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << WAKEUPE);
 105:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 106:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 107:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << SUSPE);
 108:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 109:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 110:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << EORSTE);
 111:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 112:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 113:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << SOFE);
 942               		.loc 6 113 7 view .LVU290
 943               		.loc 6 113 14 is_stmt 0 view .LVU291
 944 0018 8091 E200 		lds r24,226
 945 001c 8460      		ori r24,lo8(4)
 946 001e 8093 E200 		sts 226,r24
 114:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 947               		.loc 6 114 7 is_stmt 1 view .LVU292
 948               	.LVL72:
 949               	.L77:
 950               	/* epilogue start */
 951               		.loc 6 114 7 is_stmt 0 view .LVU293
 952               	.LBE268:
 953               	.LBE267:
 954               	.LBE269:
 315:tmk_core/protocol/lufa/lufa.c **** 
 955               		.loc 1 315 1 view .LVU294
 956 0022 0895      		ret
 957               		.cfi_endproc
 958               	.LFE121:
 960               		.section	.text.EVENT_USB_Device_Disconnect,"ax",@progbits
 961               	.global	EVENT_USB_Device_Disconnect
 963               	EVENT_USB_Device_Disconnect:
 964               	.LFB122:
 322:tmk_core/protocol/lufa/lufa.c ****     print("[D]");
 965               		.loc 1 322 1 is_stmt 1 view -0
 966               		.cfi_startproc
 967               	/* prologue: function */
 968               	/* frame size = 0 */
 969               	/* stack size = 0 */
 970               	.L__stack_usage = 0
 323:tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 971               		.loc 1 323 5 view .LVU296
 972               	.LBB270:
 323:tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 973               		.loc 1 323 5 view .LVU297
 323:tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 974               		.loc 1 323 5 view .LVU298
 975               	.LBE270:
 976 0000 80E0      		ldi r24,lo8(__c.6085)
 977 0002 90E0      		ldi r25,hi8(__c.6085)
 978 0004 0E94 0000 		call xputs
 979               	.LVL73:
 325:tmk_core/protocol/lufa/lufa.c **** /* TODO: This doesn't work. After several plug in/outs can not be enumerated.
 980               		.loc 1 325 5 view .LVU299
 325:tmk_core/protocol/lufa/lufa.c **** /* TODO: This doesn't work. After several plug in/outs can not be enumerated.
 981               		.loc 1 325 23 is_stmt 0 view .LVU300
 982 0008 1092 0000 		sts USB_IsInitialized,__zero_reg__
 983               	/* epilogue start */
 333:tmk_core/protocol/lufa/lufa.c **** 
 984               		.loc 1 333 1 view .LVU301
 985 000c 0895      		ret
 986               		.cfi_endproc
 987               	.LFE122:
 989               		.section	.text.EVENT_USB_Device_Reset,"ax",@progbits
 990               	.global	EVENT_USB_Device_Reset
 992               	EVENT_USB_Device_Reset:
 993               	.LFB123:
 340:tmk_core/protocol/lufa/lufa.c ****     print("[R]");
 994               		.loc 1 340 1 is_stmt 1 view -0
 995               		.cfi_startproc
 996               	/* prologue: function */
 997               	/* frame size = 0 */
 998               	/* stack size = 0 */
 999               	.L__stack_usage = 0
 341:tmk_core/protocol/lufa/lufa.c **** }
 1000               		.loc 1 341 5 view .LVU303
 1001               	.LBB271:
 341:tmk_core/protocol/lufa/lufa.c **** }
 1002               		.loc 1 341 5 view .LVU304
 341:tmk_core/protocol/lufa/lufa.c **** }
 1003               		.loc 1 341 5 view .LVU305
 1004               	.LBE271:
 1005 0000 80E0      		ldi r24,lo8(__c.6090)
 1006 0002 90E0      		ldi r25,hi8(__c.6090)
 1007 0004 0C94 0000 		jmp xputs
 1008               	.LVL74:
 1009               		.cfi_endproc
 1010               	.LFE123:
 1012               		.section	.text.EVENT_USB_Device_Suspend,"ax",@progbits
 1013               	.global	EVENT_USB_Device_Suspend
 1015               	EVENT_USB_Device_Suspend:
 1016               	.LFB124:
 349:tmk_core/protocol/lufa/lufa.c ****     print("[S]");
 1017               		.loc 1 349 1 view -0
 1018               		.cfi_startproc
 1019               	/* prologue: function */
 1020               	/* frame size = 0 */
 1021               	/* stack size = 0 */
 1022               	.L__stack_usage = 0
 350:tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
 1023               		.loc 1 350 5 view .LVU307
 1024               	.LBB272:
 350:tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
 1025               		.loc 1 350 5 view .LVU308
 350:tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
 1026               		.loc 1 350 5 view .LVU309
 1027               	.LBE272:
 1028 0000 80E0      		ldi r24,lo8(__c.6094)
 1029 0002 90E0      		ldi r25,hi8(__c.6094)
 1030 0004 0C94 0000 		jmp xputs
 1031               	.LVL75:
 1032               		.cfi_endproc
 1033               	.LFE124:
 1035               		.section	.text.EVENT_USB_Device_WakeUp,"ax",@progbits
 1036               	.global	EVENT_USB_Device_WakeUp
 1038               	EVENT_USB_Device_WakeUp:
 1039               	.LFB125:
 361:tmk_core/protocol/lufa/lufa.c ****     print("[W]");
 1040               		.loc 1 361 1 view -0
 1041               		.cfi_startproc
 1042               	/* prologue: function */
 1043               	/* frame size = 0 */
 1044               	/* stack size = 0 */
 1045               	.L__stack_usage = 0
 362:tmk_core/protocol/lufa/lufa.c ****     suspend_wakeup_init();
 1046               		.loc 1 362 5 view .LVU311
 1047               	.LBB273:
 362:tmk_core/protocol/lufa/lufa.c ****     suspend_wakeup_init();
 1048               		.loc 1 362 5 view .LVU312
 362:tmk_core/protocol/lufa/lufa.c ****     suspend_wakeup_init();
 1049               		.loc 1 362 5 view .LVU313
 1050               	.LBE273:
 1051 0000 80E0      		ldi r24,lo8(__c.6098)
 1052 0002 90E0      		ldi r25,hi8(__c.6098)
 1053 0004 0E94 0000 		call xputs
 1054               	.LVL76:
 363:tmk_core/protocol/lufa/lufa.c **** 
 1055               		.loc 1 363 5 view .LVU314
 1056 0008 0C94 0000 		jmp suspend_wakeup_init
 1057               	.LVL77:
 1058               		.cfi_endproc
 1059               	.LFE125:
 1061               		.section	.text.EVENT_USB_Device_StartOfFrame,"ax",@progbits
 1062               	.global	EVENT_USB_Device_StartOfFrame
 1064               	EVENT_USB_Device_StartOfFrame:
 1065               	.LFB126:
 388:tmk_core/protocol/lufa/lufa.c ****     static uint8_t count;
 1066               		.loc 1 388 1 view -0
 1067               		.cfi_startproc
 1068               	/* prologue: function */
 1069               	/* frame size = 0 */
 1070               	/* stack size = 0 */
 1071               	.L__stack_usage = 0
 389:tmk_core/protocol/lufa/lufa.c ****     if (++count % 50) return;
 1072               		.loc 1 389 5 view .LVU316
 390:tmk_core/protocol/lufa/lufa.c ****     count = 0;
 1073               		.loc 1 390 5 view .LVU317
 390:tmk_core/protocol/lufa/lufa.c ****     count = 0;
 1074               		.loc 1 390 9 is_stmt 0 view .LVU318
 1075 0000 2091 0000 		lds r18,count.6104
 1076 0004 2F5F      		subi r18,lo8(-(1))
 1077 0006 822F      		mov r24,r18
 1078 0008 62E3      		ldi r22,lo8(50)
 1079 000a 0E94 0000 		call __udivmodqi4
 390:tmk_core/protocol/lufa/lufa.c ****     count = 0;
 1080               		.loc 1 390 8 view .LVU319
 1081 000e 9923      		tst r25
 1082 0010 01F0      		breq .L84
 1083 0012 2093 0000 		sts count.6104,r18
 1084 0016 0895      		ret
 1085               	.L84:
 391:tmk_core/protocol/lufa/lufa.c **** 
 1086               		.loc 1 391 5 is_stmt 1 view .LVU320
 391:tmk_core/protocol/lufa/lufa.c **** 
 1087               		.loc 1 391 11 is_stmt 0 view .LVU321
 1088 0018 1092 0000 		sts count.6104,__zero_reg__
 393:tmk_core/protocol/lufa/lufa.c ****     Console_Task();
 1089               		.loc 1 393 5 is_stmt 1 view .LVU322
 393:tmk_core/protocol/lufa/lufa.c ****     Console_Task();
 1090               		.loc 1 393 8 is_stmt 0 view .LVU323
 1091 001c 8091 0000 		lds r24,console_flush
 1092 0020 8823      		tst r24
 1093 0022 01F0      		breq .L83
 394:tmk_core/protocol/lufa/lufa.c ****     console_flush = false;
 1094               		.loc 1 394 5 is_stmt 1 view .LVU324
 1095               	.LBB298:
 1096               	.LBI298:
 238:tmk_core/protocol/lufa/lufa.c **** {
 1097               		.loc 1 238 13 view .LVU325
 1098               	.LBB299:
 241:tmk_core/protocol/lufa/lufa.c ****         return;
 1099               		.loc 1 241 5 view .LVU326
 241:tmk_core/protocol/lufa/lufa.c ****         return;
 1100               		.loc 1 241 25 is_stmt 0 view .LVU327
 1101 0024 8091 0000 		lds r24,USB_DeviceState
 241:tmk_core/protocol/lufa/lufa.c ****         return;
 1102               		.loc 1 241 8 view .LVU328
 1103 0028 8430      		cpi r24,lo8(4)
 1104 002a 01F4      		brne .L87
 244:tmk_core/protocol/lufa/lufa.c **** 
 1105               		.loc 1 244 5 is_stmt 1 view .LVU329
 1106               	.LBB300:
 1107               	.LBI300:
 250:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1108               		.loc 3 250 26 view .LVU330
 1109               	.LBB301:
 253:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1110               		.loc 3 253 6 view .LVU331
 253:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1111               		.loc 3 253 15 is_stmt 0 view .LVU332
 1112 002c 9091 E900 		lds r25,233
 253:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1113               		.loc 3 253 21 view .LVU333
 1114 0030 9F70      		andi r25,lo8(15)
 1115               	.LBB302:
 1116               	.LBI302:
 238:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1117               		.loc 3 238 26 is_stmt 1 view .LVU334
 1118               	.LBB303:
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1119               		.loc 3 240 5 view .LVU335
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1120               		.loc 3 240 13 is_stmt 0 view .LVU336
 1121 0032 2091 EC00 		lds r18,236
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1122               		.loc 3 240 55 view .LVU337
 1123 0036 822F      		mov r24,r18
 1124 0038 8170      		andi r24,lo8(1)
 1125 003a 20FD      		sbrc r18,0
 1126 003c 80E8      		ldi r24,lo8(-128)
 1127               	.L88:
 1128               	.LBE303:
 1129               	.LBE302:
 253:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1130               		.loc 3 253 44 view .LVU338
 1131 003e 892B      		or r24,r25
 1132               	.LVL78:
 253:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1133               		.loc 3 253 44 view .LVU339
 1134               	.LBE301:
 1135               	.LBE300:
 272:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsEnabled() || !Endpoint_IsConfigured()) {
 1136               		.loc 1 272 5 is_stmt 1 view .LVU340
 1137               	.LBB304:
 1138               	.LBI304:
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1139               		.loc 3 267 23 view .LVU341
 1140               	.LBB305:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1141               		.loc 3 270 6 view .LVU342
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1142               		.loc 3 270 12 is_stmt 0 view .LVU343
 1143 0040 93E0      		ldi r25,lo8(3)
 1144 0042 9093 E900 		sts 233,r25
 1145               	.LVL79:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1146               		.loc 3 270 12 view .LVU344
 1147               	.LBE305:
 1148               	.LBE304:
 273:tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(ep);
 1149               		.loc 1 273 5 is_stmt 1 view .LVU345
 1150               	.LBB306:
 1151               	.LBI306:
 311:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1152               		.loc 3 311 23 view .LVU346
 1153               	.LBB307:
 313:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1154               		.loc 3 313 5 view .LVU347
 313:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1155               		.loc 3 313 14 is_stmt 0 view .LVU348
 1156 0046 9091 EB00 		lds r25,235
 1157               	.LBE307:
 1158               	.LBE306:
 273:tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(ep);
 1159               		.loc 1 273 8 view .LVU349
 1160 004a 90FF      		sbrs r25,0
 1161 004c 00C0      		rjmp .L92
 1162               	.LBB308:
 1163               	.LBI308:
 368:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1164               		.loc 3 368 23 is_stmt 1 view .LVU350
 1165               	.LBB309:
 370:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1166               		.loc 3 370 5 view .LVU351
 370:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1167               		.loc 3 370 14 is_stmt 0 view .LVU352
 1168 004e 9091 EE00 		lds r25,238
 1169               	.LBE309:
 1170               	.LBE308:
 273:tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(ep);
 1171               		.loc 1 273 31 view .LVU353
 1172 0052 97FD      		sbrc r25,7
 1173 0054 00C0      		rjmp .L90
 1174               	.L92:
 287:tmk_core/protocol/lufa/lufa.c **** }
 1175               		.loc 1 287 5 is_stmt 1 view .LVU354
 1176               	.LVL80:
 1177               	.LBB310:
 1178               	.LBI310:
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1179               		.loc 3 267 23 view .LVU355
 1180               	.LBB311:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1181               		.loc 3 270 6 view .LVU356
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1182               		.loc 3 270 23 is_stmt 0 view .LVU357
 1183 0056 8F70      		andi r24,lo8(15)
 1184               	.LVL81:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1185               		.loc 3 270 12 view .LVU358
 1186 0058 8093 E900 		sts 233,r24
 1187               	.L87:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1188               		.loc 3 270 12 view .LVU359
 1189               	.LBE311:
 1190               	.LBE310:
 1191               	.LBE299:
 1192               	.LBE298:
 395:tmk_core/protocol/lufa/lufa.c **** }
 1193               		.loc 1 395 5 is_stmt 1 view .LVU360
 395:tmk_core/protocol/lufa/lufa.c **** }
 1194               		.loc 1 395 19 is_stmt 0 view .LVU361
 1195 005c 1092 0000 		sts console_flush,__zero_reg__
 1196               	.L83:
 1197               	/* epilogue start */
 396:tmk_core/protocol/lufa/lufa.c **** 
 1198               		.loc 1 396 1 view .LVU362
 1199 0060 0895      		ret
 1200               	.LVL82:
 1201               	.L91:
 1202               	.LBB321:
 1203               	.LBB320:
 280:tmk_core/protocol/lufa/lufa.c **** 
 1204               		.loc 1 280 9 is_stmt 1 view .LVU363
 1205               	.LBB312:
 1206               	.LBI312:
 552:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1207               		.loc 3 552 23 view .LVU364
 1208               	.LBB313:
 1209               		.loc 3 554 5 view .LVU365
 1210               		.loc 3 554 12 is_stmt 0 view .LVU366
 1211 0062 1092 F100 		sts 241,__zero_reg__
 1212               	.LVL83:
 1213               	.L90:
 1214               		.loc 3 554 12 view .LVU367
 1215               	.LBE313:
 1216               	.LBE312:
 1217               	.LBB314:
 1218               	.LBI314:
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1219               		.loc 3 358 23 is_stmt 1 view .LVU368
 1220               	.LBB315:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1221               		.loc 3 360 5 view .LVU369
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1222               		.loc 3 360 14 is_stmt 0 view .LVU370
 1223 0066 9091 E800 		lds r25,232
 1224               	.LBE315:
 1225               	.LBE314:
 279:tmk_core/protocol/lufa/lufa.c ****         Endpoint_Write_8(0);
 1226               		.loc 1 279 11 view .LVU371
 1227 006a 95FD      		sbrc r25,5
 1228 006c 00C0      		rjmp .L91
 283:tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearIN();
 1229               		.loc 1 283 5 is_stmt 1 view .LVU372
 1230               	.LBB316:
 1231               	.LBI316:
 405:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1232               		.loc 3 405 23 view .LVU373
 1233               	.LBB317:
 407:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1234               		.loc 3 407 5 view .LVU374
 407:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1235               		.loc 3 407 14 is_stmt 0 view .LVU375
 1236 006e 9091 E800 		lds r25,232
 1237               	.LBE317:
 1238               	.LBE316:
 283:tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearIN();
 1239               		.loc 1 283 8 view .LVU376
 1240 0072 90FF      		sbrs r25,0
 1241 0074 00C0      		rjmp .L92
 284:tmk_core/protocol/lufa/lufa.c ****     }
 1242               		.loc 1 284 9 is_stmt 1 view .LVU377
 1243               	.LBB318:
 1244               	.LBI318:
 453:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1245               		.loc 3 453 23 view .LVU378
 1246               	.LBB319:
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1247               		.loc 3 456 6 view .LVU379
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1248               		.loc 3 456 13 is_stmt 0 view .LVU380
 1249 0076 9091 E800 		lds r25,232
 1250 007a 9E77      		andi r25,lo8(126)
 1251 007c 9093 E800 		sts 232,r25
 1252 0080 00C0      		rjmp .L92
 1253               	.LBE319:
 1254               	.LBE318:
 1255               	.LBE320:
 1256               	.LBE321:
 1257               		.cfi_endproc
 1258               	.LFE126:
 1260               		.section	.text.EVENT_USB_Device_ConfigurationChanged,"ax",@progbits
 1261               	.global	EVENT_USB_Device_ConfigurationChanged
 1263               	EVENT_USB_Device_ConfigurationChanged:
 1264               	.LFB127:
 408:tmk_core/protocol/lufa/lufa.c ****     bool ConfigSuccess = true;
 1265               		.loc 1 408 1 is_stmt 1 view -0
 1266               		.cfi_startproc
 1267               	/* prologue: function */
 1268               	/* frame size = 0 */
 1269               	/* stack size = 0 */
 1270               	.L__stack_usage = 0
 409:tmk_core/protocol/lufa/lufa.c **** 
 1271               		.loc 1 409 5 view .LVU382
 1272               	.LVL84:
 413:tmk_core/protocol/lufa/lufa.c ****                                      KEYBOARD_EPSIZE, ENDPOINT_BANK_SINGLE);
 1273               		.loc 1 413 5 view .LVU383
 1274               	.LBB322:
 1275               	.LBI322:
 200:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 1276               		.loc 3 200 23 view .LVU384
 1277               	.LBB323:
 205:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 1278               		.loc 3 205 5 view .LVU385
 207:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 1279               		.loc 3 207 5 view .LVU386
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 1280               		.loc 3 210 5 view .LVU387
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 1281               		.loc 3 210 5 is_stmt 0 view .LVU388
 1282               	.LBE323:
 1283               	.LBE322:
  97:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
 1284               		.loc 3 97 5 is_stmt 1 view .LVU389
  98:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 1285               		.loc 3 98 5 view .LVU390
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 1286               		.loc 3 100 5 view .LVU391
 106:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1287               		.loc 3 106 5 view .LVU392
 1288               	.LBB325:
 1289               	.LBB324:
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 1290               		.loc 3 210 12 is_stmt 0 view .LVU393
 1291 0000 42E0      		ldi r20,lo8(2)
 1292 0002 61EC      		ldi r22,lo8(-63)
 1293 0004 81E0      		ldi r24,lo8(1)
 1294 0006 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 1295               	.LVL85:
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 1296               		.loc 3 210 12 view .LVU394
 1297               	.LBE324:
 1298               	.LBE325:
 425:tmk_core/protocol/lufa/lufa.c ****                                      SHARED_EPSIZE, ENDPOINT_BANK_SINGLE);
 1299               		.loc 1 425 5 is_stmt 1 view .LVU395
 1300               	.LBB326:
 1301               	.LBI326:
 200:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 1302               		.loc 3 200 23 view .LVU396
 1303               	.LBB327:
 205:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 1304               		.loc 3 205 5 view .LVU397
 207:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 1305               		.loc 3 207 5 view .LVU398
 207:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 1306               		.loc 3 207 5 is_stmt 0 view .LVU399
 1307               	.LBE327:
 1308               	.LBE326:
 102:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 1309               		.loc 3 102 6 is_stmt 1 view .LVU400
 103:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 1310               		.loc 3 103 6 view .LVU401
 102:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 1311               		.loc 3 102 6 view .LVU402
 103:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 1312               		.loc 3 103 6 view .LVU403
 106:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1313               		.loc 3 106 5 view .LVU404
 1314               	.LBB329:
 1315               	.LBB328:
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 1316               		.loc 3 210 12 is_stmt 0 view .LVU405
 1317 000a 42E2      		ldi r20,lo8(34)
 1318 000c 61EC      		ldi r22,lo8(-63)
 1319 000e 82E0      		ldi r24,lo8(2)
 1320 0010 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 1321               	.LVL86:
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 1322               		.loc 3 210 12 view .LVU406
 1323               	.LBE328:
 1324               	.LBE329:
 439:tmk_core/protocol/lufa/lufa.c ****                                      CONSOLE_EPSIZE, ENDPOINT_BANK_SINGLE);
 1325               		.loc 1 439 5 is_stmt 1 view .LVU407
 1326               	.LBB330:
 1327               	.LBI330:
 200:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 1328               		.loc 3 200 23 view .LVU408
 1329               	.LBB331:
 205:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 1330               		.loc 3 205 5 view .LVU409
 207:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 1331               		.loc 3 207 5 view .LVU410
 207:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 1332               		.loc 3 207 5 is_stmt 0 view .LVU411
 1333               	.LBE331:
 1334               	.LBE330:
 102:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 1335               		.loc 3 102 6 is_stmt 1 view .LVU412
 103:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 1336               		.loc 3 103 6 view .LVU413
 102:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 1337               		.loc 3 102 6 view .LVU414
 103:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 1338               		.loc 3 103 6 view .LVU415
 106:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1339               		.loc 3 106 5 view .LVU416
 1340               	.LBB333:
 1341               	.LBB332:
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 1342               		.loc 3 210 12 is_stmt 0 view .LVU417
 1343 0014 42E2      		ldi r20,lo8(34)
 1344 0016 61EC      		ldi r22,lo8(-63)
 1345 0018 83E0      		ldi r24,lo8(3)
 1346 001a 0C94 0000 		jmp Endpoint_ConfigureEndpoint_Prv
 1347               	.LVL87:
 1348               	.LBE332:
 1349               	.LBE333:
 1350               		.cfi_endproc
 1351               	.LFE127:
 1353               		.section	.text.EVENT_USB_Device_ControlRequest,"ax",@progbits
 1354               	.global	EVENT_USB_Device_ControlRequest
 1356               	EVENT_USB_Device_ControlRequest:
 1357               	.LFB128:
 477:tmk_core/protocol/lufa/lufa.c ****     uint8_t* ReportData = NULL;
 1358               		.loc 1 477 1 is_stmt 1 view -0
 1359               		.cfi_startproc
 1360               	/* prologue: function */
 1361               	/* frame size = 0 */
 1362               	/* stack size = 0 */
 1363               	.L__stack_usage = 0
 478:tmk_core/protocol/lufa/lufa.c ****     uint8_t  ReportSize = 0;
 1364               		.loc 1 478 5 view .LVU419
 1365               	.LVL88:
 479:tmk_core/protocol/lufa/lufa.c **** 
 1366               		.loc 1 479 5 view .LVU420
 482:tmk_core/protocol/lufa/lufa.c ****     {
 1367               		.loc 1 482 5 view .LVU421
 482:tmk_core/protocol/lufa/lufa.c ****     {
 1368               		.loc 1 482 31 is_stmt 0 view .LVU422
 1369 0000 8091 0000 		lds r24,USB_ControlRequest+1
 482:tmk_core/protocol/lufa/lufa.c ****     {
 1370               		.loc 1 482 5 view .LVU423
 1371 0004 8330      		cpi r24,lo8(3)
 1372 0006 01F4      		brne .+2
 1373 0008 00C0      		rjmp .L106
 1374 000a 00F4      		brsh .L107
 1375 000c 8130      		cpi r24,lo8(1)
 1376 000e 01F0      		breq .L108
 1377 0010 8230      		cpi r24,lo8(2)
 1378 0012 01F4      		brne .+2
 1379 0014 00C0      		rjmp .L109
 1380 0016 0895      		ret
 1381               	.L107:
 1382 0018 8A30      		cpi r24,lo8(10)
 1383 001a 01F4      		brne .+2
 1384 001c 00C0      		rjmp .L111
 1385 001e 8B30      		cpi r24,lo8(11)
 1386 0020 01F4      		brne .+2
 1387 0022 00C0      		rjmp .L112
 1388 0024 8930      		cpi r24,lo8(9)
 1389 0026 01F0      		breq .+2
 1390 0028 00C0      		rjmp .L105
 505:tmk_core/protocol/lufa/lufa.c ****             {
 1391               		.loc 1 505 13 is_stmt 1 view .LVU424
 505:tmk_core/protocol/lufa/lufa.c ****             {
 1392               		.loc 1 505 16 is_stmt 0 view .LVU425
 1393 002a 8091 0000 		lds r24,USB_ControlRequest
 1394 002e 8132      		cpi r24,lo8(33)
 1395 0030 01F0      		breq .+2
 1396 0032 00C0      		rjmp .L105
 509:tmk_core/protocol/lufa/lufa.c ****                 case KEYBOARD_INTERFACE:
 1397               		.loc 1 509 17 is_stmt 1 view .LVU426
 1398 0034 8091 0000 		lds r24,USB_ControlRequest+4
 1399 0038 9091 0000 		lds r25,USB_ControlRequest+4+1
 1400 003c 0297      		sbiw r24,2
 1401 003e 00F0      		brlo .+2
 1402 0040 00C0      		rjmp .L105
 514:tmk_core/protocol/lufa/lufa.c **** 
 1403               		.loc 1 514 21 view .LVU427
 1404               	.LBB334:
 1405               	.LBI334:
 442:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1406               		.loc 3 442 23 view .LVU428
 1407               	.LBB335:
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1408               		.loc 3 444 5 view .LVU429
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1409               		.loc 3 444 12 is_stmt 0 view .LVU430
 1410 0042 8091 E800 		lds r24,232
 1411 0046 877F      		andi r24,lo8(-9)
 1412 0048 8093 E800 		sts 232,r24
 1413               	.L117:
 1414               	.LBE335:
 1415               	.LBE334:
 1416               	.LBB336:
 1417               	.LBI336:
 417:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1418               		.loc 3 417 23 is_stmt 1 view .LVU431
 1419               	.LBB337:
 419:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1420               		.loc 3 419 5 view .LVU432
 419:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1421               		.loc 3 419 14 is_stmt 0 view .LVU433
 1422 004c 8091 E800 		lds r24,232
 1423               	.LBE337:
 1424               	.LBE336:
 516:tmk_core/protocol/lufa/lufa.c ****                         if (USB_DeviceState == DEVICE_STATE_Unattached)
 1425               		.loc 1 516 27 view .LVU434
 1426 0050 82FF      		sbrs r24,2
 1427 0052 00C0      		rjmp .L118
 521:tmk_core/protocol/lufa/lufa.c ****                       uint8_t report_id = Endpoint_Read_8();
 1428               		.loc 1 521 21 is_stmt 1 view .LVU435
 1429               	.LBB338:
 1430               	.LBI338:
 222:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1431               		.loc 3 222 27 view .LVU436
 1432               	.LBB339:
 227:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 1433               		.loc 3 227 6 view .LVU437
 227:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 1434               		.loc 3 227 25 is_stmt 0 view .LVU438
 1435 0054 9091 F300 		lds r25,243
 227:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 1436               		.loc 3 227 40 view .LVU439
 1437 0058 8091 F200 		lds r24,242
 1438               	.LBE339:
 1439               	.LBE338:
 521:tmk_core/protocol/lufa/lufa.c ****                       uint8_t report_id = Endpoint_Read_8();
 1440               		.loc 1 521 24 view .LVU440
 1441 005c 0297      		sbiw r24,2
 1442 005e 01F4      		brne .L119
 1443               	.LBB340:
 522:tmk_core/protocol/lufa/lufa.c **** 
 1444               		.loc 1 522 23 is_stmt 1 view .LVU441
 1445               	.LBB341:
 1446               	.LBI341:
 540:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1447               		.loc 3 540 26 view .LVU442
 1448               	.LBB342:
 542:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1449               		.loc 3 542 5 view .LVU443
 542:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1450               		.loc 3 542 12 is_stmt 0 view .LVU444
 1451 0060 8091 F100 		lds r24,241
 1452               	.LVL89:
 542:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1453               		.loc 3 542 12 view .LVU445
 1454               	.LBE342:
 1455               	.LBE341:
 524:tmk_core/protocol/lufa/lufa.c ****                         keyboard_led_stats = Endpoint_Read_8();
 1456               		.loc 1 524 23 is_stmt 1 view .LVU446
 524:tmk_core/protocol/lufa/lufa.c ****                         keyboard_led_stats = Endpoint_Read_8();
 1457               		.loc 1 524 26 is_stmt 0 view .LVU447
 1458 0064 8B7F      		andi r24,lo8(-5)
 1459               	.LVL90:
 524:tmk_core/protocol/lufa/lufa.c ****                         keyboard_led_stats = Endpoint_Read_8();
 1460               		.loc 1 524 26 view .LVU448
 1461 0066 8130      		cpi r24,lo8(1)
 1462 0068 01F4      		brne .L120
 1463               	.L119:
 524:tmk_core/protocol/lufa/lufa.c ****                         keyboard_led_stats = Endpoint_Read_8();
 1464               		.loc 1 524 26 view .LVU449
 1465               	.LBE340:
 528:tmk_core/protocol/lufa/lufa.c ****                     }
 1466               		.loc 1 528 23 is_stmt 1 view .LVU450
 1467               	.LBB343:
 1468               	.LBI343:
 540:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1469               		.loc 3 540 26 view .LVU451
 1470               	.LBB344:
 542:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1471               		.loc 3 542 5 view .LVU452
 542:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1472               		.loc 3 542 12 is_stmt 0 view .LVU453
 1473 006a 8091 F100 		lds r24,241
 1474               	.LBE344:
 1475               	.LBE343:
 528:tmk_core/protocol/lufa/lufa.c ****                     }
 1476               		.loc 1 528 42 view .LVU454
 1477 006e 8093 0000 		sts keyboard_led_stats,r24
 1478               	.L120:
 531:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 1479               		.loc 1 531 21 is_stmt 1 view .LVU455
 1480               	.LBB345:
 1481               	.LBI345:
 468:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1482               		.loc 3 468 23 view .LVU456
 1483               	.LBB346:
 471:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1484               		.loc 3 471 6 view .LVU457
 471:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1485               		.loc 3 471 13 is_stmt 0 view .LVU458
 1486 0072 8091 E800 		lds r24,232
 1487 0076 8B77      		andi r24,lo8(123)
 1488               	.L131:
 1489               	.LBE346:
 1490               	.LBE345:
 1491               	.LBB347:
 1492               	.LBB348:
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1493               		.loc 3 456 13 view .LVU459
 1494 0078 8093 E800 		sts 232,r24
 1495               	.LBE348:
 1496               	.LBE347:
 583:tmk_core/protocol/lufa/lufa.c ****             }
 1497               		.loc 1 583 17 is_stmt 1 view .LVU460
 1498 007c 0C94 0000 		jmp Endpoint_ClearStatusStage
 1499               	.LVL91:
 1500               	.L108:
 485:tmk_core/protocol/lufa/lufa.c ****             {
 1501               		.loc 1 485 13 view .LVU461
 485:tmk_core/protocol/lufa/lufa.c ****             {
 1502               		.loc 1 485 16 is_stmt 0 view .LVU462
 1503 0080 8091 0000 		lds r24,USB_ControlRequest
 1504 0084 813A      		cpi r24,lo8(-95)
 1505 0086 01F4      		brne .L105
 487:tmk_core/protocol/lufa/lufa.c **** 
 1506               		.loc 1 487 17 is_stmt 1 view .LVU463
 1507               	.LBB350:
 1508               	.LBI350:
 442:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1509               		.loc 3 442 23 view .LVU464
 1510               	.LBB351:
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1511               		.loc 3 444 5 view .LVU465
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1512               		.loc 3 444 12 is_stmt 0 view .LVU466
 1513 0088 8091 E800 		lds r24,232
 1514 008c 877F      		andi r24,lo8(-9)
 1515 008e 8093 E800 		sts 232,r24
 1516               	.LBE351:
 1517               	.LBE350:
 490:tmk_core/protocol/lufa/lufa.c ****                 case KEYBOARD_INTERFACE:
 1518               		.loc 1 490 17 is_stmt 1 view .LVU467
 1519 0092 8091 0000 		lds r24,USB_ControlRequest+4
 1520 0096 9091 0000 		lds r25,USB_ControlRequest+4+1
 1521 009a 892B      		or r24,r25
 1522 009c 01F4      		brne .L123
 494:tmk_core/protocol/lufa/lufa.c ****                     break;
 1523               		.loc 1 494 32 is_stmt 0 view .LVU468
 1524 009e 68E0      		ldi r22,lo8(8)
 493:tmk_core/protocol/lufa/lufa.c ****                     ReportSize = sizeof(keyboard_report_sent);
 1525               		.loc 1 493 32 view .LVU469
 1526 00a0 80E0      		ldi r24,lo8(keyboard_report_sent)
 1527 00a2 90E0      		ldi r25,hi8(keyboard_report_sent)
 1528               	.L115:
 1529               	.LVL92:
 499:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearOUT();
 1530               		.loc 1 499 17 is_stmt 1 view .LVU470
 1531 00a4 70E0      		ldi r23,0
 1532 00a6 0E94 0000 		call Endpoint_Write_Control_Stream_LE
 1533               	.LVL93:
 500:tmk_core/protocol/lufa/lufa.c ****             }
 1534               		.loc 1 500 17 view .LVU471
 1535               	.LBB352:
 1536               	.LBI352:
 468:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1537               		.loc 3 468 23 view .LVU472
 1538               	.LBB353:
 471:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1539               		.loc 3 471 6 view .LVU473
 471:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1540               		.loc 3 471 13 is_stmt 0 view .LVU474
 1541 00aa 8091 E800 		lds r24,232
 1542 00ae 8B77      		andi r24,lo8(123)
 1543 00b0 8093 E800 		sts 232,r24
 1544 00b4 0895      		ret
 1545               	.LVL94:
 1546               	.L123:
 471:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1547               		.loc 3 471 13 view .LVU475
 1548               	.LBE353:
 1549               	.LBE352:
 479:tmk_core/protocol/lufa/lufa.c **** 
 1550               		.loc 1 479 14 view .LVU476
 1551 00b6 60E0      		ldi r22,0
 478:tmk_core/protocol/lufa/lufa.c ****     uint8_t  ReportSize = 0;
 1552               		.loc 1 478 14 view .LVU477
 1553 00b8 90E0      		ldi r25,0
 1554 00ba 80E0      		ldi r24,0
 1555 00bc 00C0      		rjmp .L115
 1556               	.L118:
 517:tmk_core/protocol/lufa/lufa.c ****                           return;
 1557               		.loc 1 517 25 is_stmt 1 view .LVU478
 517:tmk_core/protocol/lufa/lufa.c ****                           return;
 1558               		.loc 1 517 45 is_stmt 0 view .LVU479
 1559 00be 8091 0000 		lds r24,USB_DeviceState
 517:tmk_core/protocol/lufa/lufa.c ****                           return;
 1560               		.loc 1 517 28 view .LVU480
 1561 00c2 8111      		cpse r24,__zero_reg__
 1562 00c4 00C0      		rjmp .L117
 1563               	.L105:
 1564               	/* epilogue start */
 592:tmk_core/protocol/lufa/lufa.c **** 
 1565               		.loc 1 592 1 view .LVU481
 1566 00c6 0895      		ret
 1567               	.L106:
 541:tmk_core/protocol/lufa/lufa.c ****             {
 1568               		.loc 1 541 13 is_stmt 1 view .LVU482
 541:tmk_core/protocol/lufa/lufa.c ****             {
 1569               		.loc 1 541 16 is_stmt 0 view .LVU483
 1570 00c8 8091 0000 		lds r24,USB_ControlRequest
 1571 00cc 813A      		cpi r24,lo8(-95)
 1572 00ce 01F4      		brne .L105
 543:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 1573               		.loc 1 543 17 is_stmt 1 view .LVU484
 543:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 1574               		.loc 1 543 20 is_stmt 0 view .LVU485
 1575 00d0 8091 0000 		lds r24,USB_ControlRequest+4
 1576 00d4 9091 0000 		lds r25,USB_ControlRequest+4+1
 1577 00d8 892B      		or r24,r25
 1578 00da 01F4      		brne .L105
 544:tmk_core/protocol/lufa/lufa.c ****                     while (!(Endpoint_IsINReady()));
 1579               		.loc 1 544 21 is_stmt 1 view .LVU486
 1580               	.LBB354:
 1581               	.LBI354:
 442:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1582               		.loc 3 442 23 view .LVU487
 1583               	.LBB355:
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1584               		.loc 3 444 5 view .LVU488
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1585               		.loc 3 444 12 is_stmt 0 view .LVU489
 1586 00dc 8091 E800 		lds r24,232
 1587 00e0 877F      		andi r24,lo8(-9)
 1588 00e2 8093 E800 		sts 232,r24
 1589               	.L121:
 1590               	.LBE355:
 1591               	.LBE354:
 545:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_Write_8(keyboard_protocol);
 1592               		.loc 1 545 52 is_stmt 1 discriminator 1 view .LVU490
 1593               	.LBB356:
 1594               	.LBI356:
 405:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1595               		.loc 3 405 23 discriminator 1 view .LVU491
 1596               	.LBB357:
 407:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1597               		.loc 3 407 5 discriminator 1 view .LVU492
 407:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1598               		.loc 3 407 14 is_stmt 0 discriminator 1 view .LVU493
 1599 00e6 8091 E800 		lds r24,232
 1600               	.LBE357:
 1601               	.LBE356:
 545:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_Write_8(keyboard_protocol);
 1602               		.loc 1 545 27 discriminator 1 view .LVU494
 1603 00ea 80FF      		sbrs r24,0
 1604 00ec 00C0      		rjmp .L121
 546:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearIN();
 1605               		.loc 1 546 21 is_stmt 1 view .LVU495
 1606 00ee 8091 0000 		lds r24,keyboard_protocol
 1607               	.LVL95:
 1608               	.LBB358:
 1609               	.LBI358:
 552:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1610               		.loc 3 552 23 view .LVU496
 1611               	.LBB359:
 1612               		.loc 3 554 5 view .LVU497
 1613               	.L132:
 1614               		.loc 3 554 5 is_stmt 0 view .LVU498
 1615               	.LBE359:
 1616               	.LBE358:
 1617               	.LBB360:
 1618               	.LBI360:
 552:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1619               		.loc 3 552 23 is_stmt 1 view .LVU499
 1620               	.LBB361:
 1621               		.loc 3 554 5 view .LVU500
 1622               		.loc 3 554 12 is_stmt 0 view .LVU501
 1623 00f2 8093 F100 		sts 241,r24
 1624               	.LVL96:
 1625               		.loc 3 554 12 view .LVU502
 1626               	.LBE361:
 1627               	.LBE360:
 582:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 1628               		.loc 1 582 17 is_stmt 1 view .LVU503
 1629               	.LBB362:
 1630               	.LBI347:
 453:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1631               		.loc 3 453 23 view .LVU504
 1632               	.LBB349:
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1633               		.loc 3 456 6 view .LVU505
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1634               		.loc 3 456 13 is_stmt 0 view .LVU506
 1635 00f6 8091 E800 		lds r24,232
 1636 00fa 8E77      		andi r24,lo8(126)
 1637 00fc 00C0      		rjmp .L131
 1638               	.L112:
 1639               	.LBE349:
 1640               	.LBE362:
 554:tmk_core/protocol/lufa/lufa.c ****             {
 1641               		.loc 1 554 13 is_stmt 1 view .LVU507
 554:tmk_core/protocol/lufa/lufa.c ****             {
 1642               		.loc 1 554 16 is_stmt 0 view .LVU508
 1643 00fe 8091 0000 		lds r24,USB_ControlRequest
 1644 0102 8132      		cpi r24,lo8(33)
 1645 0104 01F4      		brne .L105
 556:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 1646               		.loc 1 556 17 is_stmt 1 view .LVU509
 556:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 1647               		.loc 1 556 20 is_stmt 0 view .LVU510
 1648 0106 8091 0000 		lds r24,USB_ControlRequest+4
 1649 010a 9091 0000 		lds r25,USB_ControlRequest+4+1
 1650 010e 892B      		or r24,r25
 1651 0110 01F4      		brne .L105
 557:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 1652               		.loc 1 557 21 is_stmt 1 view .LVU511
 1653               	.LBB363:
 1654               	.LBI363:
 442:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1655               		.loc 3 442 23 view .LVU512
 1656               	.LBB364:
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1657               		.loc 3 444 5 view .LVU513
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1658               		.loc 3 444 12 is_stmt 0 view .LVU514
 1659 0112 8091 E800 		lds r24,232
 1660 0116 877F      		andi r24,lo8(-9)
 1661 0118 8093 E800 		sts 232,r24
 1662               	.LBE364:
 1663               	.LBE363:
 558:tmk_core/protocol/lufa/lufa.c **** 
 1664               		.loc 1 558 21 is_stmt 1 view .LVU515
 1665 011c 0E94 0000 		call Endpoint_ClearStatusStage
 1666               	.LVL97:
 560:tmk_core/protocol/lufa/lufa.c ****                     clear_keyboard();
 1667               		.loc 1 560 21 view .LVU516
 560:tmk_core/protocol/lufa/lufa.c ****                     clear_keyboard();
 1668               		.loc 1 560 39 is_stmt 0 view .LVU517
 1669 0120 8091 0000 		lds r24,USB_ControlRequest+2
 1670 0124 8093 0000 		sts keyboard_protocol,r24
 561:tmk_core/protocol/lufa/lufa.c ****                 }
 1671               		.loc 1 561 21 is_stmt 1 view .LVU518
 1672 0128 0C94 0000 		jmp clear_keyboard
 1673               	.LVL98:
 1674               	.L111:
 567:tmk_core/protocol/lufa/lufa.c ****             {
 1675               		.loc 1 567 13 view .LVU519
 567:tmk_core/protocol/lufa/lufa.c ****             {
 1676               		.loc 1 567 16 is_stmt 0 view .LVU520
 1677 012c 8091 0000 		lds r24,USB_ControlRequest
 1678 0130 8132      		cpi r24,lo8(33)
 1679 0132 01F4      		brne .L105
 569:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 1680               		.loc 1 569 17 is_stmt 1 view .LVU521
 1681               	.LBB365:
 1682               	.LBI365:
 442:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1683               		.loc 3 442 23 view .LVU522
 1684               	.LBB366:
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1685               		.loc 3 444 5 view .LVU523
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1686               		.loc 3 444 12 is_stmt 0 view .LVU524
 1687 0134 8091 E800 		lds r24,232
 1688 0138 877F      		andi r24,lo8(-9)
 1689 013a 8093 E800 		sts 232,r24
 1690               	.LBE366:
 1691               	.LBE365:
 570:tmk_core/protocol/lufa/lufa.c **** 
 1692               		.loc 1 570 17 is_stmt 1 view .LVU525
 1693 013e 0E94 0000 		call Endpoint_ClearStatusStage
 1694               	.LVL99:
 572:tmk_core/protocol/lufa/lufa.c ****             }
 1695               		.loc 1 572 17 view .LVU526
 572:tmk_core/protocol/lufa/lufa.c ****             }
 1696               		.loc 1 572 71 is_stmt 0 view .LVU527
 1697 0142 8091 0000 		lds r24,USB_ControlRequest+3
 572:tmk_core/protocol/lufa/lufa.c ****             }
 1698               		.loc 1 572 31 view .LVU528
 1699 0146 8093 0000 		sts keyboard_idle,r24
 1700 014a 0895      		ret
 1701               	.L109:
 577:tmk_core/protocol/lufa/lufa.c ****             {
 1702               		.loc 1 577 13 is_stmt 1 view .LVU529
 577:tmk_core/protocol/lufa/lufa.c ****             {
 1703               		.loc 1 577 16 is_stmt 0 view .LVU530
 1704 014c 8091 0000 		lds r24,USB_ControlRequest
 1705 0150 813A      		cpi r24,lo8(-95)
 1706 0152 01F0      		breq .+2
 1707 0154 00C0      		rjmp .L105
 579:tmk_core/protocol/lufa/lufa.c ****                 while (!(Endpoint_IsINReady()));
 1708               		.loc 1 579 17 is_stmt 1 view .LVU531
 1709               	.LBB367:
 1710               	.LBI367:
 442:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1711               		.loc 3 442 23 view .LVU532
 1712               	.LBB368:
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1713               		.loc 3 444 5 view .LVU533
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1714               		.loc 3 444 12 is_stmt 0 view .LVU534
 1715 0156 8091 E800 		lds r24,232
 1716 015a 877F      		andi r24,lo8(-9)
 1717 015c 8093 E800 		sts 232,r24
 1718               	.L122:
 1719               	.LBE368:
 1720               	.LBE367:
 580:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_8(keyboard_idle);
 1721               		.loc 1 580 48 is_stmt 1 discriminator 1 view .LVU535
 1722               	.LBB369:
 1723               	.LBI369:
 405:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1724               		.loc 3 405 23 discriminator 1 view .LVU536
 1725               	.LBB370:
 407:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1726               		.loc 3 407 5 discriminator 1 view .LVU537
 407:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1727               		.loc 3 407 14 is_stmt 0 discriminator 1 view .LVU538
 1728 0160 8091 E800 		lds r24,232
 1729               	.LBE370:
 1730               	.LBE369:
 580:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_8(keyboard_idle);
 1731               		.loc 1 580 23 discriminator 1 view .LVU539
 1732 0164 80FF      		sbrs r24,0
 1733 0166 00C0      		rjmp .L122
 581:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearIN();
 1734               		.loc 1 581 17 is_stmt 1 view .LVU540
 1735 0168 8091 0000 		lds r24,keyboard_idle
 1736 016c 00C0      		rjmp .L132
 1737               		.cfi_endproc
 1738               	.LFE128:
 1740               		.section	.text.startup.main,"ax",@progbits
 1741               		.weak	main
 1743               	main:
 1744               	.LFB137:
 872:tmk_core/protocol/lufa/lufa.c **** #else
 873:tmk_core/protocol/lufa/lufa.c **** int8_t sendchar(uint8_t c)
 874:tmk_core/protocol/lufa/lufa.c **** {
 875:tmk_core/protocol/lufa/lufa.c ****     return 0;
 876:tmk_core/protocol/lufa/lufa.c **** }
 877:tmk_core/protocol/lufa/lufa.c **** #endif
 878:tmk_core/protocol/lufa/lufa.c **** 
 879:tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 880:tmk_core/protocol/lufa/lufa.c ****  * MIDI
 881:tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 882:tmk_core/protocol/lufa/lufa.c **** 
 883:tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
 884:tmk_core/protocol/lufa/lufa.c **** USB_ClassInfo_MIDI_Device_t USB_MIDI_Interface =
 885:tmk_core/protocol/lufa/lufa.c **** {
 886:tmk_core/protocol/lufa/lufa.c ****   .Config =
 887:tmk_core/protocol/lufa/lufa.c ****   {
 888:tmk_core/protocol/lufa/lufa.c ****     .StreamingInterfaceNumber = AS_INTERFACE,
 889:tmk_core/protocol/lufa/lufa.c ****     .DataINEndpoint           =
 890:tmk_core/protocol/lufa/lufa.c ****     {
 891:tmk_core/protocol/lufa/lufa.c ****       .Address          = MIDI_STREAM_IN_EPADDR,
 892:tmk_core/protocol/lufa/lufa.c ****       .Size             = MIDI_STREAM_EPSIZE,
 893:tmk_core/protocol/lufa/lufa.c ****       .Banks            = 1,
 894:tmk_core/protocol/lufa/lufa.c ****     },
 895:tmk_core/protocol/lufa/lufa.c ****     .DataOUTEndpoint          =
 896:tmk_core/protocol/lufa/lufa.c ****     {
 897:tmk_core/protocol/lufa/lufa.c ****       .Address          = MIDI_STREAM_OUT_EPADDR,
 898:tmk_core/protocol/lufa/lufa.c ****       .Size             = MIDI_STREAM_EPSIZE,
 899:tmk_core/protocol/lufa/lufa.c ****       .Banks            = 1,
 900:tmk_core/protocol/lufa/lufa.c ****     },
 901:tmk_core/protocol/lufa/lufa.c ****   },
 902:tmk_core/protocol/lufa/lufa.c **** };
 903:tmk_core/protocol/lufa/lufa.c **** 
 904:tmk_core/protocol/lufa/lufa.c **** void send_midi_packet(MIDI_EventPacket_t* event) {
 905:tmk_core/protocol/lufa/lufa.c ****   MIDI_Device_SendEventPacket(&USB_MIDI_Interface, event);
 906:tmk_core/protocol/lufa/lufa.c **** }
 907:tmk_core/protocol/lufa/lufa.c **** 
 908:tmk_core/protocol/lufa/lufa.c **** bool recv_midi_packet(MIDI_EventPacket_t* const event) {
 909:tmk_core/protocol/lufa/lufa.c ****   return MIDI_Device_ReceiveEventPacket(&USB_MIDI_Interface, event);
 910:tmk_core/protocol/lufa/lufa.c **** }
 911:tmk_core/protocol/lufa/lufa.c **** 
 912:tmk_core/protocol/lufa/lufa.c **** #endif
 913:tmk_core/protocol/lufa/lufa.c **** 
 914:tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 915:tmk_core/protocol/lufa/lufa.c ****  * VIRTUAL SERIAL
 916:tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 917:tmk_core/protocol/lufa/lufa.c **** 
 918:tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
 919:tmk_core/protocol/lufa/lufa.c **** /** \brief Virtual Serial Init
 920:tmk_core/protocol/lufa/lufa.c ****  *
 921:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 922:tmk_core/protocol/lufa/lufa.c ****  */
 923:tmk_core/protocol/lufa/lufa.c **** void virtser_init(void)
 924:tmk_core/protocol/lufa/lufa.c **** {
 925:tmk_core/protocol/lufa/lufa.c ****   cdc_device.State.ControlLineStates.DeviceToHost = CDC_CONTROL_LINE_IN_DSR ;
 926:tmk_core/protocol/lufa/lufa.c ****   CDC_Device_SendControlLineStateChange(&cdc_device);
 927:tmk_core/protocol/lufa/lufa.c **** }
 928:tmk_core/protocol/lufa/lufa.c **** 
 929:tmk_core/protocol/lufa/lufa.c **** /** \brief Virtual Serial Receive
 930:tmk_core/protocol/lufa/lufa.c ****  *
 931:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 932:tmk_core/protocol/lufa/lufa.c ****  */
 933:tmk_core/protocol/lufa/lufa.c **** void virtser_recv(uint8_t c) __attribute__ ((weak));
 934:tmk_core/protocol/lufa/lufa.c **** void virtser_recv(uint8_t c)
 935:tmk_core/protocol/lufa/lufa.c **** {
 936:tmk_core/protocol/lufa/lufa.c ****   // Ignore by default
 937:tmk_core/protocol/lufa/lufa.c **** }
 938:tmk_core/protocol/lufa/lufa.c **** 
 939:tmk_core/protocol/lufa/lufa.c **** /** \brief Virtual Serial Task
 940:tmk_core/protocol/lufa/lufa.c ****  *
 941:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 942:tmk_core/protocol/lufa/lufa.c ****  */
 943:tmk_core/protocol/lufa/lufa.c **** void virtser_task(void)
 944:tmk_core/protocol/lufa/lufa.c **** {
 945:tmk_core/protocol/lufa/lufa.c ****   uint16_t count = CDC_Device_BytesReceived(&cdc_device);
 946:tmk_core/protocol/lufa/lufa.c ****   uint8_t ch;
 947:tmk_core/protocol/lufa/lufa.c ****   if (count)
 948:tmk_core/protocol/lufa/lufa.c ****   {
 949:tmk_core/protocol/lufa/lufa.c ****     ch = CDC_Device_ReceiveByte(&cdc_device);
 950:tmk_core/protocol/lufa/lufa.c ****     virtser_recv(ch);
 951:tmk_core/protocol/lufa/lufa.c ****   }
 952:tmk_core/protocol/lufa/lufa.c **** }
 953:tmk_core/protocol/lufa/lufa.c **** /** \brief Virtual Serial Send
 954:tmk_core/protocol/lufa/lufa.c ****  *
 955:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 956:tmk_core/protocol/lufa/lufa.c ****  */
 957:tmk_core/protocol/lufa/lufa.c **** void virtser_send(const uint8_t byte)
 958:tmk_core/protocol/lufa/lufa.c **** {
 959:tmk_core/protocol/lufa/lufa.c ****   uint8_t timeout = 255;
 960:tmk_core/protocol/lufa/lufa.c ****   uint8_t ep = Endpoint_GetCurrentEndpoint();
 961:tmk_core/protocol/lufa/lufa.c **** 
 962:tmk_core/protocol/lufa/lufa.c ****   if (cdc_device.State.ControlLineStates.HostToDevice & CDC_CONTROL_LINE_OUT_DTR)
 963:tmk_core/protocol/lufa/lufa.c ****   {
 964:tmk_core/protocol/lufa/lufa.c ****     /* IN packet */
 965:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(cdc_device.Config.DataINEndpoint.Address);
 966:tmk_core/protocol/lufa/lufa.c **** 
 967:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsEnabled() || !Endpoint_IsConfigured()) {
 968:tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(ep);
 969:tmk_core/protocol/lufa/lufa.c ****         return;
 970:tmk_core/protocol/lufa/lufa.c ****     }
 971:tmk_core/protocol/lufa/lufa.c **** 
 972:tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 973:tmk_core/protocol/lufa/lufa.c **** 
 974:tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_8(byte);
 975:tmk_core/protocol/lufa/lufa.c ****     CDC_Device_Flush(&cdc_device);
 976:tmk_core/protocol/lufa/lufa.c **** 
 977:tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsINReady()) {
 978:tmk_core/protocol/lufa/lufa.c ****       Endpoint_ClearIN();
 979:tmk_core/protocol/lufa/lufa.c ****     }
 980:tmk_core/protocol/lufa/lufa.c **** 
 981:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
 982:tmk_core/protocol/lufa/lufa.c ****   }
 983:tmk_core/protocol/lufa/lufa.c **** }
 984:tmk_core/protocol/lufa/lufa.c **** #endif
 985:tmk_core/protocol/lufa/lufa.c **** 
 986:tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 987:tmk_core/protocol/lufa/lufa.c ****  * main
 988:tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 989:tmk_core/protocol/lufa/lufa.c **** /** \brief Setup MCU
 990:tmk_core/protocol/lufa/lufa.c ****  *
 991:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 992:tmk_core/protocol/lufa/lufa.c ****  */
 993:tmk_core/protocol/lufa/lufa.c **** static void setup_mcu(void)
 994:tmk_core/protocol/lufa/lufa.c **** {
 995:tmk_core/protocol/lufa/lufa.c ****     /* Disable watchdog if enabled by bootloader/fuses */
 996:tmk_core/protocol/lufa/lufa.c ****     MCUSR &= ~(1 << WDRF);
 997:tmk_core/protocol/lufa/lufa.c ****     wdt_disable();
 998:tmk_core/protocol/lufa/lufa.c **** 
 999:tmk_core/protocol/lufa/lufa.c ****     /* Disable clock division */
1000:tmk_core/protocol/lufa/lufa.c ****     // clock_prescale_set(clock_div_1);
1001:tmk_core/protocol/lufa/lufa.c **** 
1002:tmk_core/protocol/lufa/lufa.c ****     CLKPR = (1 << CLKPCE);
1003:tmk_core/protocol/lufa/lufa.c ****     CLKPR = (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0);
1004:tmk_core/protocol/lufa/lufa.c **** }
1005:tmk_core/protocol/lufa/lufa.c **** 
1006:tmk_core/protocol/lufa/lufa.c **** /** \brief Setup USB
1007:tmk_core/protocol/lufa/lufa.c ****  *
1008:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
1009:tmk_core/protocol/lufa/lufa.c ****  */
1010:tmk_core/protocol/lufa/lufa.c **** static void setup_usb(void)
1011:tmk_core/protocol/lufa/lufa.c **** {
1012:tmk_core/protocol/lufa/lufa.c ****     // Leonardo needs. Without this USB device is not recognized.
1013:tmk_core/protocol/lufa/lufa.c ****     USB_Disable();
1014:tmk_core/protocol/lufa/lufa.c **** 
1015:tmk_core/protocol/lufa/lufa.c ****     USB_Init();
1016:tmk_core/protocol/lufa/lufa.c **** 
1017:tmk_core/protocol/lufa/lufa.c ****     // for Console_Task
1018:tmk_core/protocol/lufa/lufa.c ****     USB_Device_EnableSOFEvents();
1019:tmk_core/protocol/lufa/lufa.c ****     print_set_sendchar(sendchar);
1020:tmk_core/protocol/lufa/lufa.c **** }
1021:tmk_core/protocol/lufa/lufa.c **** 
1022:tmk_core/protocol/lufa/lufa.c **** /** \brief Main
1023:tmk_core/protocol/lufa/lufa.c ****  *
1024:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
1025:tmk_core/protocol/lufa/lufa.c ****  */
1026:tmk_core/protocol/lufa/lufa.c **** int main(void)  __attribute__ ((weak));
1027:tmk_core/protocol/lufa/lufa.c **** int main(void)
1028:tmk_core/protocol/lufa/lufa.c **** {
 1745               		.loc 1 1028 1 view -0
 1746               		.cfi_startproc
 1747               	/* prologue: function */
 1748               	/* frame size = 0 */
 1749               	/* stack size = 0 */
 1750               	.L__stack_usage = 0
1029:tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
1030:tmk_core/protocol/lufa/lufa.c ****     setup_midi();
1031:tmk_core/protocol/lufa/lufa.c **** #endif
1032:tmk_core/protocol/lufa/lufa.c **** 
1033:tmk_core/protocol/lufa/lufa.c ****     setup_mcu();
 1751               		.loc 1 1033 5 view .LVU542
 1752               	.LBB382:
 1753               	.LBI382:
 993:tmk_core/protocol/lufa/lufa.c **** {
 1754               		.loc 1 993 13 view .LVU543
 1755               	.LBB383:
 996:tmk_core/protocol/lufa/lufa.c ****     wdt_disable();
 1756               		.loc 1 996 5 view .LVU544
 996:tmk_core/protocol/lufa/lufa.c ****     wdt_disable();
 1757               		.loc 1 996 11 is_stmt 0 view .LVU545
 1758 0000 84B7      		in r24,0x34
 1759 0002 877F      		andi r24,lo8(-9)
 1760 0004 84BF      		out 0x34,r24
 997:tmk_core/protocol/lufa/lufa.c **** 
 1761               		.loc 1 997 5 is_stmt 1 view .LVU546
 1762               	.LBB384:
 1763               	.LBI384:
 1764               		.file 7 "/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h"
   1:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** /* Copyright (c) 2002, 2004 Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    Copyright (c) 2005, 2006, 2007 Eric B. Weddington
   3:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    All rights reserved.
   4:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
   5:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    modification, are permitted provided that the following conditions are met:
   7:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
   8:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
  11:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****      the documentation and/or other materials provided with the
  14:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****      distribution.
  15:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
  16:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    * Neither the name of the copyright holders nor the names of
  17:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****      contributors may be used to endorse or promote products derived
  18:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****      from this software without specific prior written permission.
  19:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
  20:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
  32:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** /* $Id: wdt.h 2503 2016-02-07 22:59:47Z joerg_wunsch $ */
  33:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
  34:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** /*
  35:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    avr/wdt.h - macros for AVR watchdog timer
  36:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****  */
  37:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
  38:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #ifndef _AVR_WDT_H_
  39:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #define _AVR_WDT_H_
  40:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
  41:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #include <avr/io.h>
  42:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #include <stdint.h>
  43:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
  44:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** /** \file */
  45:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** /** \defgroup avr_watchdog <avr/wdt.h>: Watchdog timer handling
  46:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     \code #include <avr/wdt.h> \endcode
  47:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     This header file declares the interface to some inline macros
  49:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     handling the watchdog timer present in many AVR devices.  In order
  50:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     to prevent the watchdog timer configuration from being
  51:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     accidentally altered by a crashing application, a special timed
  52:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     sequence is required in order to change it.  The macros within
  53:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     this header file handle the required sequence automatically
  54:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     before changing any value.  Interrupts will be disabled during
  55:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     the manipulation.
  56:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
  57:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     \note Depending on the fuse configuration of the particular
  58:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     device, further restrictions might apply, in particular it might
  59:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     be disallowed to turn off the watchdog timer.
  60:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
  61:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     Note that for newer devices (ATmega88 and newer, effectively any
  62:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     AVR that has the option to also generate interrupts), the watchdog
  63:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     timer remains active even after a system reset (except a power-on
  64:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     condition), using the fastest prescaler value (approximately 15
  65:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     ms).  It is therefore required to turn off the watchdog early
  66:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     during program startup, the datasheet recommends a sequence like
  67:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     the following:
  68:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
  69:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     \code
  70:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     #include <stdint.h>
  71:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     #include <avr/wdt.h>
  72:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
  73:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     uint8_t mcusr_mirror __attribute__ ((section (".noinit")));
  74:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
  75:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     void get_mcusr(void) \
  76:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****       __attribute__((naked)) \
  77:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****       __attribute__((section(".init3")));
  78:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     void get_mcusr(void)
  79:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     {
  80:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****       mcusr_mirror = MCUSR;
  81:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****       MCUSR = 0;
  82:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****       wdt_disable();
  83:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     }
  84:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     \endcode
  85:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
  86:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     Saving the value of MCUSR in \c mcusr_mirror is only needed if the
  87:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     application later wants to examine the reset source, but in particular, 
  88:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     clearing the watchdog reset flag before disabling the
  89:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     watchdog is required, according to the datasheet.
  90:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** */
  91:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
  92:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** /**
  93:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    \ingroup avr_watchdog
  94:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    Reset the watchdog timer.  When the watchdog timer is enabled,
  95:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    a call to this instruction is required before the timer expires,
  96:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    otherwise a watchdog-initiated device reset will occur. 
  97:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** */
  98:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
  99:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #define wdt_reset() __asm__ __volatile__ ("wdr")
 100:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
 101:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #ifndef __DOXYGEN__
 102:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
 103:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #if defined(WDP3)
 104:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** # define _WD_PS3_MASK       _BV(WDP3)
 105:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #else
 106:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** # define _WD_PS3_MASK       0x00
 107:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #endif
 108:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
 109:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #if defined(WDTCSR)
 110:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDTCSR
 111:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #elif defined(WDTCR)
 112:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDTCR
 113:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #else
 114:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDT
 115:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #endif
 116:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
 117:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #if defined(WDTOE)
 118:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #define _WD_CHANGE_BIT      WDTOE
 119:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #else
 120:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #define _WD_CHANGE_BIT      WDCE
 121:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #endif
 122:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
 123:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #endif	/* !__DOXYGEN__ */
 124:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
 125:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
 126:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** /**
 127:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    \ingroup avr_watchdog
 128:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    Enable the watchdog timer, configuring it for expiry after
 129:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    \c timeout (which is a combination of the \c WDP0 through
 130:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    \c WDP2 bits to write into the \c WDTCR register; For those devices 
 131:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    that have a \c WDTCSR register, it uses the combination of the \c WDP0 
 132:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    through \c WDP3 bits).
 133:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
 134:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    See also the symbolic constants \c WDTO_15MS et al.
 135:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** */
 136:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
 137:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
 138:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #if defined(__AVR_XMEGA__)
 139:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
 140:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** /*
 141:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    wdt_enable(timeout) for xmega devices
 142:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** ** write signature (CCP_IOREG_gc) that enables change of protected I/O
 143:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    registers to the CCP register
 144:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** ** At the same time,
 145:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    1) set WDT change enable (WDT_CEN_bm)
 146:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    2) enable WDT (WDT_ENABLE_bm)
 147:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    3) set timeout (timeout)
 148:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** ** Synchronization starts when ENABLE bit of WDT is set. So, wait till it
 149:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    finishes (SYNCBUSY of STATUS register is automatically cleared after the
 150:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****    sync is finished).
 151:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** */
 152:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #define wdt_enable(timeout) \
 153:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** do { \
 154:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** uint8_t temp; \
 155:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** __asm__ __volatile__ (         \
 156:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "in __tmp_reg__, %[rampd]"              "\n\t" \
 157:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "out %[rampd], __zero_reg__"            "\n\t" \
 158:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "out %[ccp_reg], %[ioreg_cen_mask]"     "\n\t" \
 159:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "sts %[wdt_reg], %[wdt_enable_timeout]" "\n\t" \
 160:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "1:lds %[tmp], %[wdt_status_reg]"       "\n\t" \
 161:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "sbrc %[tmp], %[wdt_syncbusy_bit]"      "\n\t" \
 162:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "rjmp 1b"                               "\n\t" \
 163:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "out %[rampd], __tmp_reg__"             "\n\t" \
 164:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     : [tmp]                "=r" (temp) \
 165:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     : [rampd]              "I" (_SFR_IO_ADDR(RAMPD)),      \
 166:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****       [ccp_reg]            "I" (_SFR_IO_ADDR(CCP)),        \
 167:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****       [ioreg_cen_mask]     "r" ((uint8_t)CCP_IOREG_gc),     \
 168:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****       [wdt_reg]            "n" (_SFR_MEM_ADDR(WDT_CTRL)),   \
 169:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****       [wdt_enable_timeout] "r" ((uint8_t)(WDT_CEN_bm | WDT_ENABLE_bm | timeout)), \
 170:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****       [wdt_status_reg]     "n" (_SFR_MEM_ADDR(WDT_STATUS)), \
 171:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****       [wdt_syncbusy_bit]   "I" (WDT_SYNCBUSY_bm)            \
 172:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     : "r0" \
 173:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** ); \
 174:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** } while(0)
 175:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
 176:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #define wdt_disable() \
 177:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** __asm__ __volatile__ (  \
 178:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "in __tmp_reg__, %[rampd]"          "\n\t" \
 179:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "out %[rampd], __zero_reg__"        "\n\t" \
 180:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "out %[ccp_reg], %[ioreg_cen_mask]" "\n\t" \
 181:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "sts %[wdt_reg], %[disable_mask]"   "\n\t" \
 182:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "out %[rampd], __tmp_reg__"         "\n\t" \
 183:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     : \
 184:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     : [rampd]             "I" (_SFR_IO_ADDR(RAMPD)),    \
 185:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****       [ccp_reg]           "I" (_SFR_IO_ADDR(CCP)),      \
 186:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****       [ioreg_cen_mask]    "r" ((uint8_t)CCP_IOREG_gc),   \
 187:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****       [wdt_reg]           "n" (_SFR_MEM_ADDR(WDT_CTRL)), \
 188:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****       [disable_mask]      "r" ((uint8_t)((~WDT_ENABLE_bm) | WDT_CEN_bm)) \
 189:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     : "r0" \
 190:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** );
 191:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
 192:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #elif defined(__AVR_TINY__)
 193:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
 194:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #define wdt_enable(value) \
 195:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** __asm__ __volatile__ ( \
 196:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "in __tmp_reg__,__SREG__" "\n\t"  \
 197:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "cli" "\n\t"  \
 198:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "wdr" "\n\t"  \
 199:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "out %[CCPADDRESS],%[SIGNATURE]" "\n\t"  \
 200:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "out %[WDTREG],%[WDVALUE]" "\n\t"  \
 201:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "out __SREG__,__tmp_reg__" "\n\t"  \
 202:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     : /* no outputs */  \
 203:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     : [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),  \
 204:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****       [SIGNATURE] "r" ((uint8_t)0xD8), \
 205:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****       [WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)), \
 206:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****       [WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00) \
 207:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****       | _BV(WDE) | (value & 0x07) )) \
 208:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     : "r16" \
 209:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** )
 210:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
 211:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #define wdt_disable() \
 212:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** do { \
 213:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** uint8_t temp_wd; \
 214:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** __asm__ __volatile__ ( \
 215:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "in __tmp_reg__,__SREG__" "\n\t"  \
 216:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "cli" "\n\t"  \
 217:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "wdr" "\n\t"  \
 218:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "out %[CCPADDRESS],%[SIGNATURE]" "\n\t"  \
 219:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "in  %[TEMP_WD],%[WDTREG]" "\n\t" \
 220:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "cbr %[TEMP_WD],%[WDVALUE]" "\n\t" \
 221:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "out %[WDTREG],%[TEMP_WD]" "\n\t" \
 222:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     "out __SREG__,__tmp_reg__" "\n\t" \
 223:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     : /*no output */ \
 224:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     : [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)), \
 225:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****       [SIGNATURE] "r" ((uint8_t)0xD8), \
 226:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****       [WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)), \
 227:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****       [TEMP_WD] "d" (temp_wd), \
 228:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****       [WDVALUE] "n" (1 << WDE) \
 229:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****     : "r16" \
 230:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** ); \
 231:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** }while(0)
 232:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
 233:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #elif defined(CCP)
 234:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
 235:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** static __inline__
 236:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 237:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** void wdt_enable (const uint8_t value)
 238:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** {
 239:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	if (!_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P (_WD_CONTROL_REG))
 240:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	{
 241:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 242:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 243:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 244:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 245:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 246:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"sts %[WDTREG],%[WDVALUE]" "\n\t"
 247:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 248:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			: /* no outputs */
 249:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 250:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 251:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 252:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 253:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 254:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			: "r0"
 255:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			);
 256:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	}
 257:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	else if (!_SFR_IO_REG_P (CCP) && _SFR_IO_REG_P (_WD_CONTROL_REG))
 258:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	{
 259:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 260:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 261:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 262:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 263:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 264:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"out %[WDTREG],%[WDVALUE]" "\n\t"
 265:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 266:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			: /* no outputs */
 267:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 268:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 269:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 270:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 271:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 272:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			: "r0"
 273:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			);
 274:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	}
 275:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	else if (_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P (_WD_CONTROL_REG))
 276:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	{
 277:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 278:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 279:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 280:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 281:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 282:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"sts %[WDTREG],%[WDVALUE]" "\n\t"
 283:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 284:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			: /* no outputs */
 285:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 286:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 287:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 288:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 289:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 290:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			: "r0"
 291:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			);
 292:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	}
 293:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	else
 294:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****  	{
 295:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 296:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 297:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 298:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 299:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 300:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"out %[WDTREG],%[WDVALUE]" "\n\t"
 301:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 302:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			: /* no outputs */
 303:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 304:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 305:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 306:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 307:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 308:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			: "r0"
 309:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 			);
 310:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	}
 311:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** }
 312:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
 313:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** static __inline__
 314:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 315:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** void wdt_disable (void)
 316:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** {
 317:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	if (!_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P(_WD_CONTROL_REG))
 318:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	{
 319:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 320:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 321:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 322:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 323:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 324:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 325:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"lds %[TEMP_WD],%[WDTREG]" "\n\t"
 326:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 327:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"sts %[WDTREG],%[TEMP_WD]" "\n\t"
 328:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 329:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				: /*no output */
 330:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 331:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 332:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 333:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 334:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 335:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				: "r0"
 336:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				);
 337:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	}
 338:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	else if (!_SFR_IO_REG_P (CCP) && _SFR_IO_REG_P(_WD_CONTROL_REG))
 339:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	{
 340:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 341:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 342:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 343:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 344:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 345:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 346:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"in %[TEMP_WD],%[WDTREG]" "\n\t"
 347:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 348:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMP_WD]" "\n\t"
 349:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 350:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				: /*no output */
 351:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 352:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 353:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 354:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 355:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 356:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				: "r0"
 357:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				);
 358:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	}
 359:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	else if (_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P(_WD_CONTROL_REG))
 360:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	{
 361:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 362:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 363:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 364:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 365:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 366:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 367:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"lds %[TEMP_WD],%[WDTREG]" "\n\t"
 368:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 369:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"sts %[WDTREG],%[TEMP_WD]" "\n\t"
 370:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 371:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				: /*no output */
 372:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 373:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 374:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 375:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 376:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 377:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				: "r0"
 378:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				);
 379:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	}
 380:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	else
 381:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	{
 382:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 383:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 384:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 385:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 386:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 387:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 388:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"in %[TEMP_WD],%[WDTREG]" "\n\t"
 389:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 390:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMP_WD]" "\n\t"
 391:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 392:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				: /*no output */
 393:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 394:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 395:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 396:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 397:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 398:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				: "r0"
 399:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				);
 400:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	}
 401:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** }
 402:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
 403:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** #else
 404:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
 405:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** static __inline__
 406:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 407:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** void wdt_enable (const uint8_t value)
 408:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** {
 409:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
 410:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	{
 411:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 412:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 413:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 414:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 415:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"out %0, %1" "\n\t"
 416:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 417:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"out %0, %2" "\n \t"
 418:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				: /* no outputs */
 419:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				: "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 420:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"r" ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE))),
 421:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"r" ((uint8_t) ((value & 0x08 ? _WD_PS3_MASK : 0x00) |
 422:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 						_BV(WDE) | (value & 0x07)) )
 423:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				: "r0"
 424:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 		);
 425:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	}
 426:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	else
 427:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	{
 428:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 429:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 430:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 431:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 432:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"sts %0, %1" "\n\t"
 433:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 434:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"sts %0, %2" "\n \t"
 435:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				: /* no outputs */
 436:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				: "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 437:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"r" ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE))),
 438:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"r" ((uint8_t) ((value & 0x08 ? _WD_PS3_MASK : 0x00) |
 439:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 						_BV(WDE) | (value & 0x07)) )
 440:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				: "r0"
 441:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 		);
 442:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	}
 443:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** }
 444:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 
 445:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** static __inline__
 446:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 447:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** void wdt_disable (void)
 1765               		.loc 7 447 6 view .LVU547
 1766               	.LBE384:
 1767               	.LBE383:
 1768               	.LBE382:
 448:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** {
 449:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
 1769               		.loc 7 449 2 view .LVU548
 1770               	.LBB388:
 1771               	.LBB387:
 1772               	.LBB386:
 1773               	.LBB385:
 450:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	{
 451:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****         uint8_t register temp_reg;
 452:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 453:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__"    "\n\t"
 454:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"cli"                        "\n\t"
 455:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"wdr"                        "\n\t"
 456:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"in  %[TEMPREG],%[WDTREG]"   "\n\t"
 457:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"ori %[TEMPREG],%[WDCE_WDE]" "\n\t"
 458:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMPREG]"   "\n\t"
 459:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"out %[WDTREG],__zero_reg__" "\n\t"
 460:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__"   "\n\t"
 461:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				: [TEMPREG] "=d" (temp_reg)
 462:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				: [WDTREG]  "I"  (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 463:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				[WDCE_WDE]  "n"  ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE)))
 464:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 				: "r0"
 465:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 		);
 466:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	}
 467:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	else
 468:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 	{
 469:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h ****         uint8_t register temp_reg;
 1774               		.loc 7 469 9 view .LVU549
 470:/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 1775               		.loc 7 470 3 view .LVU550
 1776               	/* #APP */
 1777               	 ;  470 "/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/avr/wdt.h" 1
 1778 0006 0FB6      		in __tmp_reg__,__SREG__
 1779 0008 F894      		cli
 1780 000a A895      		wdr
 1781 000c 8091 6000 		lds r24,96
 1782 0010 8861      		ori r24,24
 1783 0012 8093 6000 		sts 96,r24
 1784 0016 1092 6000 		sts 96,__zero_reg__
 1785 001a 0FBE      		out __SREG__,__tmp_reg__
 1786               		
 1787               	 ;  0 "" 2
 1788               	/* #NOAPP */
 1789               	.LBE385:
 1790               	.LBE386:
1002:tmk_core/protocol/lufa/lufa.c ****     CLKPR = (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0);
 1791               		.loc 1 1002 5 view .LVU551
1002:tmk_core/protocol/lufa/lufa.c ****     CLKPR = (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0);
 1792               		.loc 1 1002 11 is_stmt 0 view .LVU552
 1793 001c 80E8      		ldi r24,lo8(-128)
 1794 001e 8093 6100 		sts 97,r24
1003:tmk_core/protocol/lufa/lufa.c **** }
 1795               		.loc 1 1003 5 is_stmt 1 view .LVU553
1003:tmk_core/protocol/lufa/lufa.c **** }
 1796               		.loc 1 1003 11 is_stmt 0 view .LVU554
 1797 0022 1092 6100 		sts 97,__zero_reg__
 1798               	.LBE387:
 1799               	.LBE388:
1034:tmk_core/protocol/lufa/lufa.c ****     keyboard_setup();
 1800               		.loc 1 1034 5 is_stmt 1 view .LVU555
 1801 0026 0E94 0000 		call keyboard_setup
 1802               	.LVL100:
1035:tmk_core/protocol/lufa/lufa.c ****     setup_usb();
 1803               		.loc 1 1035 5 view .LVU556
 1804               	.LBB389:
 1805               	.LBI389:
1010:tmk_core/protocol/lufa/lufa.c **** {
 1806               		.loc 1 1010 13 view .LVU557
 1807               	.LBB390:
1013:tmk_core/protocol/lufa/lufa.c **** 
 1808               		.loc 1 1013 5 view .LVU558
 1809 002a 0E94 0000 		call USB_Disable
 1810               	.LVL101:
1015:tmk_core/protocol/lufa/lufa.c **** 
 1811               		.loc 1 1015 5 view .LVU559
 1812 002e 0E94 0000 		call USB_Init
 1813               	.LVL102:
1018:tmk_core/protocol/lufa/lufa.c ****     print_set_sendchar(sendchar);
 1814               		.loc 1 1018 5 view .LVU560
 1815               	.LBB391:
 1816               	.LBI391:
 176:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				{
 1817               		.loc 5 176 24 view .LVU561
 1818               	.LBE391:
 1819               	.LBE390:
 1820               	.LBE389:
 1821               		.loc 5 178 6 view .LVU562
 1822               	.LBB396:
 1823               	.LBB395:
 1824               	.LBB394:
 1825               	.LBB392:
 1826               	.LBI392:
  88:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 1827               		.loc 6 88 23 view .LVU563
 1828               	.LBB393:
  90:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 1829               		.loc 6 90 5 view .LVU564
 113:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 1830               		.loc 6 113 7 view .LVU565
 113:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 1831               		.loc 6 113 14 is_stmt 0 view .LVU566
 1832 0032 8091 E200 		lds r24,226
 1833 0036 8460      		ori r24,lo8(4)
 1834 0038 8093 E200 		sts 226,r24
 1835               		.loc 6 114 7 is_stmt 1 view .LVU567
 1836               	.LVL103:
 1837               		.loc 6 114 7 is_stmt 0 view .LVU568
 1838               	.LBE393:
 1839               	.LBE392:
 1840               	.LBE394:
1019:tmk_core/protocol/lufa/lufa.c **** }
 1841               		.loc 1 1019 5 is_stmt 1 view .LVU569
 1842 003c 80E0      		ldi r24,lo8(gs(sendchar))
 1843 003e 90E0      		ldi r25,hi8(gs(sendchar))
 1844 0040 0E94 0000 		call print_set_sendchar
 1845               	.LVL104:
 1846               	.LBE395:
 1847               	.LBE396:
1036:tmk_core/protocol/lufa/lufa.c ****     sei();
 1848               		.loc 1 1036 5 view .LVU570
 1849               	/* #APP */
 1850               	 ;  1036 "tmk_core/protocol/lufa/lufa.c" 1
 1851 0044 7894      		sei
 1852               	 ;  0 "" 2
1037:tmk_core/protocol/lufa/lufa.c **** 
1038:tmk_core/protocol/lufa/lufa.c **** #if defined(MODULE_ADAFRUIT_EZKEY) || defined(MODULE_RN42)
1039:tmk_core/protocol/lufa/lufa.c ****     serial_init();
1040:tmk_core/protocol/lufa/lufa.c **** #endif
1041:tmk_core/protocol/lufa/lufa.c **** 
1042:tmk_core/protocol/lufa/lufa.c ****     /* wait for USB startup & debug output */
1043:tmk_core/protocol/lufa/lufa.c **** 
1044:tmk_core/protocol/lufa/lufa.c **** #ifdef WAIT_FOR_USB
1045:tmk_core/protocol/lufa/lufa.c ****     while (USB_DeviceState != DEVICE_STATE_Configured) {
1046:tmk_core/protocol/lufa/lufa.c ****     #if defined(INTERRUPT_CONTROL_ENDPOINT)
1047:tmk_core/protocol/lufa/lufa.c ****             ;
1048:tmk_core/protocol/lufa/lufa.c ****     #else
1049:tmk_core/protocol/lufa/lufa.c ****             USB_USBTask();
1050:tmk_core/protocol/lufa/lufa.c ****     #endif
1051:tmk_core/protocol/lufa/lufa.c ****     }
1052:tmk_core/protocol/lufa/lufa.c ****     print("USB configured.\n");
1053:tmk_core/protocol/lufa/lufa.c **** #else
1054:tmk_core/protocol/lufa/lufa.c ****     USB_USBTask();
 1853               		.loc 1 1054 5 view .LVU571
 1854               	/* #NOAPP */
 1855 0046 0E94 0000 		call USB_USBTask
 1856               	.LVL105:
1055:tmk_core/protocol/lufa/lufa.c **** #endif
1056:tmk_core/protocol/lufa/lufa.c ****     /* init modules */
1057:tmk_core/protocol/lufa/lufa.c ****     keyboard_init();
 1857               		.loc 1 1057 5 view .LVU572
 1858 004a 0E94 0000 		call keyboard_init
 1859               	.LVL106:
1058:tmk_core/protocol/lufa/lufa.c ****     host_set_driver(&lufa_driver);
 1860               		.loc 1 1058 5 view .LVU573
 1861 004e 80E0      		ldi r24,lo8(lufa_driver)
 1862 0050 90E0      		ldi r25,hi8(lufa_driver)
 1863 0052 0E94 0000 		call host_set_driver
 1864               	.LVL107:
1059:tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
1060:tmk_core/protocol/lufa/lufa.c ****     sleep_led_init();
1061:tmk_core/protocol/lufa/lufa.c **** #endif
1062:tmk_core/protocol/lufa/lufa.c **** 
1063:tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
1064:tmk_core/protocol/lufa/lufa.c ****     virtser_init();
1065:tmk_core/protocol/lufa/lufa.c **** #endif
1066:tmk_core/protocol/lufa/lufa.c **** 
1067:tmk_core/protocol/lufa/lufa.c ****     print("Keyboard start.\n");
 1865               		.loc 1 1067 5 view .LVU574
 1866               	.LBB397:
 1867               		.loc 1 1067 5 view .LVU575
 1868               		.loc 1 1067 5 view .LVU576
 1869               	.LBE397:
 1870 0056 80E0      		ldi r24,lo8(__c.6203)
 1871 0058 90E0      		ldi r25,hi8(__c.6203)
 1872 005a 0E94 0000 		call xputs
 1873               	.LVL108:
 1874               	.L134:
1068:tmk_core/protocol/lufa/lufa.c ****     while (1) {
1069:tmk_core/protocol/lufa/lufa.c ****         #if !defined(NO_USB_STARTUP_CHECK)
1070:tmk_core/protocol/lufa/lufa.c ****         while (USB_DeviceState == DEVICE_STATE_Suspended) {
 1875               		.loc 1 1070 32 is_stmt 0 view .LVU577
 1876 005e 8091 0000 		lds r24,USB_DeviceState
 1877               		.loc 1 1070 15 view .LVU578
 1878 0062 8530      		cpi r24,lo8(5)
 1879 0064 01F0      		breq .L138
1071:tmk_core/protocol/lufa/lufa.c ****             print("[s]");
1072:tmk_core/protocol/lufa/lufa.c ****             suspend_power_down();
1073:tmk_core/protocol/lufa/lufa.c ****             if (USB_Device_RemoteWakeupEnabled && suspend_wakeup_condition()) {
1074:tmk_core/protocol/lufa/lufa.c ****                     USB_Device_SendRemoteWakeup();
1075:tmk_core/protocol/lufa/lufa.c ****             }
1076:tmk_core/protocol/lufa/lufa.c ****         }
1077:tmk_core/protocol/lufa/lufa.c ****         #endif
1078:tmk_core/protocol/lufa/lufa.c **** 
1079:tmk_core/protocol/lufa/lufa.c ****         keyboard_task();
 1880               		.loc 1 1079 9 is_stmt 1 view .LVU579
 1881 0066 0E94 0000 		call keyboard_task
 1882               	.LVL109:
1080:tmk_core/protocol/lufa/lufa.c **** 
1081:tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
1082:tmk_core/protocol/lufa/lufa.c ****         MIDI_Device_USBTask(&USB_MIDI_Interface);
1083:tmk_core/protocol/lufa/lufa.c **** #endif
1084:tmk_core/protocol/lufa/lufa.c **** 
1085:tmk_core/protocol/lufa/lufa.c **** #if defined(RGBLIGHT_ANIMATIONS) & defined(RGBLIGHT_ENABLE)
1086:tmk_core/protocol/lufa/lufa.c ****         rgblight_task();
 1883               		.loc 1 1086 9 view .LVU580
 1884 006a 0E94 0000 		call rgblight_task
 1885               	.LVL110:
1070:tmk_core/protocol/lufa/lufa.c ****             print("[s]");
 1886               		.loc 1 1070 15 is_stmt 0 view .LVU581
 1887 006e 00C0      		rjmp .L134
 1888               	.L138:
1071:tmk_core/protocol/lufa/lufa.c ****             print("[s]");
 1889               		.loc 1 1071 13 is_stmt 1 view .LVU582
 1890               	.LBB398:
1071:tmk_core/protocol/lufa/lufa.c ****             print("[s]");
 1891               		.loc 1 1071 13 view .LVU583
1071:tmk_core/protocol/lufa/lufa.c ****             print("[s]");
 1892               		.loc 1 1071 13 view .LVU584
 1893               	.LBE398:
 1894 0070 80E0      		ldi r24,lo8(__c.6205)
 1895 0072 90E0      		ldi r25,hi8(__c.6205)
 1896 0074 0E94 0000 		call xputs
 1897               	.LVL111:
1072:tmk_core/protocol/lufa/lufa.c ****             if (USB_Device_RemoteWakeupEnabled && suspend_wakeup_condition()) {
 1898               		.loc 1 1072 13 view .LVU585
 1899 0078 0E94 0000 		call suspend_power_down
 1900               	.LVL112:
1073:tmk_core/protocol/lufa/lufa.c ****                     USB_Device_SendRemoteWakeup();
 1901               		.loc 1 1073 13 view .LVU586
1073:tmk_core/protocol/lufa/lufa.c ****                     USB_Device_SendRemoteWakeup();
 1902               		.loc 1 1073 16 is_stmt 0 view .LVU587
 1903 007c 8091 0000 		lds r24,USB_Device_RemoteWakeupEnabled
 1904 0080 8823      		tst r24
 1905 0082 01F0      		breq .L134
1073:tmk_core/protocol/lufa/lufa.c ****                     USB_Device_SendRemoteWakeup();
 1906               		.loc 1 1073 51 discriminator 1 view .LVU588
 1907 0084 0E94 0000 		call suspend_wakeup_condition
 1908               	.LVL113:
1073:tmk_core/protocol/lufa/lufa.c ****                     USB_Device_SendRemoteWakeup();
 1909               		.loc 1 1073 48 discriminator 1 view .LVU589
 1910 0088 8823      		tst r24
 1911 008a 01F0      		breq .L134
1074:tmk_core/protocol/lufa/lufa.c ****             }
 1912               		.loc 1 1074 21 is_stmt 1 view .LVU590
 1913 008c 0E94 0000 		call USB_Device_SendRemoteWakeup
 1914               	.LVL114:
 1915 0090 00C0      		rjmp .L134
 1916               		.cfi_endproc
 1917               	.LFE137:
 1919               		.section	.text.CALLBACK_USB_GetDescriptor,"ax",@progbits
 1920               	.global	CALLBACK_USB_GetDescriptor
 1922               	CALLBACK_USB_GetDescriptor:
 1923               	.LVL115:
 1924               	.LFB138:
1087:tmk_core/protocol/lufa/lufa.c **** #endif
1088:tmk_core/protocol/lufa/lufa.c **** 
1089:tmk_core/protocol/lufa/lufa.c **** #ifdef MODULE_ADAFRUIT_BLE
1090:tmk_core/protocol/lufa/lufa.c ****         adafruit_ble_task();
1091:tmk_core/protocol/lufa/lufa.c **** #endif
1092:tmk_core/protocol/lufa/lufa.c **** 
1093:tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
1094:tmk_core/protocol/lufa/lufa.c ****         virtser_task();
1095:tmk_core/protocol/lufa/lufa.c ****         CDC_Device_USBTask(&cdc_device);
1096:tmk_core/protocol/lufa/lufa.c **** #endif
1097:tmk_core/protocol/lufa/lufa.c **** 
1098:tmk_core/protocol/lufa/lufa.c **** #ifdef RAW_ENABLE
1099:tmk_core/protocol/lufa/lufa.c ****         raw_hid_task();
1100:tmk_core/protocol/lufa/lufa.c **** #endif
1101:tmk_core/protocol/lufa/lufa.c **** 
1102:tmk_core/protocol/lufa/lufa.c **** #if !defined(INTERRUPT_CONTROL_ENDPOINT)
1103:tmk_core/protocol/lufa/lufa.c ****         USB_USBTask();
1104:tmk_core/protocol/lufa/lufa.c **** #endif
1105:tmk_core/protocol/lufa/lufa.c **** 
1106:tmk_core/protocol/lufa/lufa.c ****     }
1107:tmk_core/protocol/lufa/lufa.c **** }
1108:tmk_core/protocol/lufa/lufa.c **** 
1109:tmk_core/protocol/lufa/lufa.c **** uint16_t CALLBACK_USB_GetDescriptor(const uint16_t wValue,
1110:tmk_core/protocol/lufa/lufa.c ****                                     const uint16_t wIndex,
1111:tmk_core/protocol/lufa/lufa.c ****                                     const void** const DescriptorAddress)
1112:tmk_core/protocol/lufa/lufa.c **** {
 1925               		.loc 1 1112 1 view -0
 1926               		.cfi_startproc
 1927               	/* prologue: function */
 1928               	/* frame size = 0 */
 1929               	/* stack size = 0 */
 1930               	.L__stack_usage = 0
1113:tmk_core/protocol/lufa/lufa.c ****   return get_usb_descriptor(wValue, wIndex, DescriptorAddress);
 1931               		.loc 1 1113 3 view .LVU592
 1932               		.loc 1 1113 10 is_stmt 0 view .LVU593
 1933 0000 0C94 0000 		jmp get_usb_descriptor
 1934               	.LVL116:
 1935               		.loc 1 1113 10 view .LVU594
 1936               		.cfi_endproc
 1937               	.LFE138:
 1939               		.section	.progmem.data.__c.6205,"a"
 1942               	__c.6205:
 1943 0000 5B73 5D00 		.string	"[s]"
 1944               		.section	.progmem.data.__c.6203,"a"
 1947               	__c.6203:
 1948 0000 4B65 7962 		.string	"Keyboard start.\n"
 1948      6F61 7264 
 1948      2073 7461 
 1948      7274 2E0A 
 1948      00
 1949               		.section	.bss.timeouted.6172,"aw",@nobits
 1952               	timeouted.6172:
 1953 0000 00        		.zero	1
 1954               		.section	.bss.count.6104,"aw",@nobits
 1957               	count.6104:
 1958 0000 00        		.zero	1
 1959               		.section	.progmem.data.__c.6098,"a"
 1962               	__c.6098:
 1963 0000 5B57 5D00 		.string	"[W]"
 1964               		.section	.progmem.data.__c.6094,"a"
 1967               	__c.6094:
 1968 0000 5B53 5D00 		.string	"[S]"
 1969               		.section	.progmem.data.__c.6090,"a"
 1972               	__c.6090:
 1973 0000 5B52 5D00 		.string	"[R]"
 1974               		.section	.progmem.data.__c.6085,"a"
 1977               	__c.6085:
 1978 0000 5B44 5D00 		.string	"[D]"
 1979               		.section	.progmem.data.__c.6080,"a"
 1982               	__c.6080:
 1983 0000 5B43 5D00 		.string	"[C]"
 1984               		.section	.bss.console_flush,"aw",@nobits
 1987               	console_flush:
 1988 0000 00        		.zero	1
 1989               	.global	lufa_driver
 1990               		.section	.data.lufa_driver,"aw"
 1993               	lufa_driver:
 1994 0000 0000      		.word	gs(keyboard_leds)
 1995 0002 0000      		.word	gs(send_keyboard)
 1996 0004 0000      		.word	gs(send_mouse)
 1997 0006 0000      		.word	gs(send_system)
 1998 0008 0000      		.word	gs(send_consumer)
 1999               		.section	.bss.keyboard_report_sent,"aw",@nobits
 2002               	keyboard_report_sent:
 2003 0000 0000 0000 		.zero	8
 2003      0000 0000 
 2004               		.section	.bss.keyboard_led_stats,"aw",@nobits
 2007               	keyboard_led_stats:
 2008 0000 00        		.zero	1
 2009               	.global	keyboard_protocol
 2010               		.section	.data.keyboard_protocol,"aw"
 2013               	keyboard_protocol:
 2014 0000 01        		.byte	1
 2015               	.global	keyboard_idle
 2016               		.section	.bss.keyboard_idle,"aw",@nobits
 2019               	keyboard_idle:
 2020 0000 00        		.zero	1
 2021               		.text
 2022               	.Letext0:
 2023               		.file 8 "/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/stdint.h"
 2024               		.file 9 "tmk_core/common/report.h"
 2025               		.file 10 "tmk_core/common/host_driver.h"
 2026               		.file 11 "tmk_core/common/host.h"
 2027               		.file 12 "/usr/local/Cellar/avr-gcc@8/8.3.0/lib/avr-gcc/8/gcc/avr/8.3.0/include/stddef.h"
 2028               		.file 13 "tmk_core/common/action.h"
 2029               		.file 14 "tmk_core/common/avr/xprintf.h"
 2030               		.file 15 "tmk_core/common/debug.h"
 2031               		.file 16 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../Device.h"
 2032               		.file 17 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 2033               		.file 18 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 2034               		.file 19 "lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
 2035               		.file 20 "lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.h"
 2036               		.file 21 "/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/stdio.h"
 2037               		.file 22 "lib/lufa/LUFA/Drivers/USB/Class/Device/../Common/HIDClassCommon.h"
 2038               		.file 23 "tmk_core/protocol/usb_descriptor.h"
 2039               		.file 24 "tmk_core/protocol/lufa/lufa.h"
 2040               		.file 25 "quantum/keycode_config.h"
 2041               		.file 26 "quantum/keymap.h"
 2042               		.file 27 "./quantum/color.h"
 2043               		.file 28 "quantum/rgblight.h"
 2044               		.file 29 "tmk_core/common/action_layer.h"
 2045               		.file 30 "tmk_core/common/timer.h"
 2046               		.file 31 "tmk_core/common/action_util.h"
 2047               		.file 32 "/usr/local/Cellar/avr-gcc@8/8.3.0/avr/include/stdlib.h"
 2048               		.file 33 "quantum/quantum.h"
 2049               		.file 34 "tmk_core/protocol/lufa/outputselect.h"
 2050               		.file 35 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h"
 2051               		.file 36 "tmk_core/common/print.h"
 2052               		.file 37 "tmk_core/common/keyboard.h"
 2053               		.file 38 "tmk_core/common/suspend.h"
 2054               		.file 39 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/EndpointStream_AVR8.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 lufa.c
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:4      *ABS*:000000000000003f __SREG__
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:12     .text.keyboard_leds:0000000000000000 keyboard_leds
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:2007   .bss.keyboard_led_stats:0000000000000000 keyboard_led_stats
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:31     .text.send_mouse:0000000000000000 send_mouse
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:49     .text.sendchar:0000000000000000 sendchar
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:1987   .bss.console_flush:0000000000000000 console_flush
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:1952   .bss.timeouted.6172:0000000000000000 timeouted.6172
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:419    .text.send_consumer:0000000000000000 send_consumer
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:588    .text.send_system:0000000000000000 send_system
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:743    .text.send_keyboard:0000000000000000 send_keyboard
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:2002   .bss.keyboard_report_sent:0000000000000000 keyboard_report_sent
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:899    .text.EVENT_USB_Device_Connect:0000000000000000 EVENT_USB_Device_Connect
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:1982   .progmem.data.__c.6080:0000000000000000 __c.6080
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:963    .text.EVENT_USB_Device_Disconnect:0000000000000000 EVENT_USB_Device_Disconnect
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:1977   .progmem.data.__c.6085:0000000000000000 __c.6085
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:992    .text.EVENT_USB_Device_Reset:0000000000000000 EVENT_USB_Device_Reset
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:1972   .progmem.data.__c.6090:0000000000000000 __c.6090
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:1015   .text.EVENT_USB_Device_Suspend:0000000000000000 EVENT_USB_Device_Suspend
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:1967   .progmem.data.__c.6094:0000000000000000 __c.6094
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:1038   .text.EVENT_USB_Device_WakeUp:0000000000000000 EVENT_USB_Device_WakeUp
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:1962   .progmem.data.__c.6098:0000000000000000 __c.6098
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:1064   .text.EVENT_USB_Device_StartOfFrame:0000000000000000 EVENT_USB_Device_StartOfFrame
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:1957   .bss.count.6104:0000000000000000 count.6104
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:1263   .text.EVENT_USB_Device_ConfigurationChanged:0000000000000000 EVENT_USB_Device_ConfigurationChanged
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:1356   .text.EVENT_USB_Device_ControlRequest:0000000000000000 EVENT_USB_Device_ControlRequest
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:2013   .data.keyboard_protocol:0000000000000000 keyboard_protocol
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:2019   .bss.keyboard_idle:0000000000000000 keyboard_idle
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:1743   .text.startup.main:0000000000000000 main
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:1993   .data.lufa_driver:0000000000000000 lufa_driver
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:1947   .progmem.data.__c.6203:0000000000000000 __c.6203
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:1942   .progmem.data.__c.6205:0000000000000000 __c.6205
/var/folders/kv/ylqhzlcd2rs16mxjtd8q7x600000gn/T//ccVHHmYD.s:1922   .text.CALLBACK_USB_GetDescriptor:0000000000000000 CALLBACK_USB_GetDescriptor

UNDEFINED SYMBOLS
USB_DeviceState
where_to_send
Endpoint_Write_Stream_LE
xputs
USB_IsInitialized
USB_Disable
USB_Init
suspend_wakeup_init
__udivmodqi4
Endpoint_ConfigureEndpoint_Prv
USB_ControlRequest
Endpoint_ClearStatusStage
Endpoint_Write_Control_Stream_LE
clear_keyboard
keyboard_setup
print_set_sendchar
USB_USBTask
keyboard_init
host_set_driver
keyboard_task
rgblight_task
suspend_power_down
USB_Device_RemoteWakeupEnabled
suspend_wakeup_condition
USB_Device_SendRemoteWakeup
get_usb_descriptor
__do_copy_data
__do_clear_bss
